{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex],\n            requestType: action\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns <= this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = [];\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        this.grid[destroyTemplate] = function (args) {\n            destroyTemplateFn.apply(_this.grid);\n            _this.clearTemplate(args);\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor()) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            var griddata = this.grid.getCurrentViewRecords()[index];\n            extend(griddata, data);\n            this.grid.editModule.updateRow(index, griddata);\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        var data = rowData;\n        data.level = level;\n        data.index = record.index;\n        data.childRecords = record.childRecords;\n        data.taskData = record.taskData;\n        data.uniqueID = record.uniqueID;\n        data.parentItem = record.parentItem;\n        data.checkboxState = record.checkboxState;\n        data.hasChildRecords = record.hasChildRecords;\n        data.parentUniqueID = record.parentUniqueID;\n        data.expanded = record.expanded;\n        this.grid.setRowData(key, data);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[i].index = i;\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    tObj.refresh();\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.refresh();\n            srcControl.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                var _loop_1 = function (summaryRowIndex, len_1) {\n                    var item = void 0;\n                    item = {};\n                    for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                        var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                            this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        var idx_1;\n                        flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx_1 = i;\n                            return;\n                        } });\n                        var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                        var summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this_1.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        var level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        var index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            var childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        return \"continue\";\n                    }\n                };\n                var this_1 = this;\n                for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                    _loop_1(summaryRowIndex, len_1);\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        if (args.cell.cellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({\n                data: args.rowData,\n                cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[0].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[0].data = added;\n                this.newBatchRowAdded = false;\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                if (this.parent.frozenRows || this.parent.frozenColumns) {\n                    actualIndex = this.batchIndex;\n                }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 1; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem][primaryKey]);\n                    var children = currentViewRecords[index][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                            currentViewRecords[index][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                this.parent.grid.focusModule.restoreFocus();\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' ||\n                this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                if (records[index].expanded && !isNullOrUndefined(records[index])) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n                this.contents.scrollTop = 0;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(this.parent, getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', info, this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","taskData","_loop_1","hasOwnProperty","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","parentUniqueID","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","dataStateChange","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","call","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","window","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","args","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","getModuleName","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","childRecord","this_1","currentRecord","checkBoxRecord","checkAll","enableVirtualization","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","shift","adaptorName","clientRender","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","events.pagingActions","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplate","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","treeGrid","rowSelecting","events.rowSelected","events.rowDeselected","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","expandicon","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","stackedHeader","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","updateChildOnDemand","displayAction","detailrows","localExpand","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","srcControl","targetIndex","isNaN","getTargetIdx","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","types","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","actualIndex","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","deleterecords","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","startIndex","endIndex","indexValue","Edit","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","contentready","editActionEvents","events.doubleTap","gridDblClick","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","doubleClickTarget","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","form","rowIndex_1","primaryKeys_1","blazorTemplates","aggregateModule","formObj","restoreFocus","saveArgs","previousData","previousValue","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","focussedElement","activeElement","errors","focus","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","onDataReady","observers","observes","scrollArgs","scrollListeners","setVirtualHeight","getRowHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule"],"mappings":"shBAIO,SAASA,EAAaC,GACzB,GAAIA,EAAOC,sBAAsBC,cAAa,CAC1C,IAAIC,EAAUH,EAAOC,WAAWE,QAChC,OAAQA,aAAmBC,gBACtBD,aAAmBE,iBAAmBF,aAAmBG,oBACzDH,aAAmBI,gBAAiBJ,aAAmBK,aAEhE,OAAO,EAEX,SAAgBC,EAAgBT,GAC5B,SAAIA,EAAOC,YAAc,WAAYD,EAAOC,YAKhD,SAAgBS,EAAiBV,GAC7B,IAAK,IAAIW,EAAI,EAAGA,EAAIX,EAAOY,QAAQC,OAAQF,IACvC,GAAIX,EAAOY,QAAQD,GAAGG,aAClB,OAAO,EAGf,OAAO,EAEX,SAAgBC,EAAuBf,GACnC,SAAMgB,oBAAkBhB,EAAOiB,KAAKC,eAAeC,MAA2C,KAAnCnB,EAAOiB,KAAKC,eAAeC,KACzC,UAAxCnB,EAAOkB,eAAeE,eAAqE,SAAxCpB,EAAOkB,eAAeE,kBACzEpB,EAAOqB,iBAAkBrB,EAAOiB,KAAKK,eAAeV,QAAQC,QAChB,UAAxCb,EAAOsB,eAAeF,eAAqE,SAAxCpB,EAAOsB,eAAeF,gBAQtF,SAAgBG,EAAkBC,GAC9B,IAAIC,EACJA,KAEA,IAAK,IAAId,EAAI,EAAGe,EADIC,OAAOC,KAAKJ,GAASX,OACJF,EAAIe,EAAKf,IAAK,CAChCkB,YAAU,kBAAmBL,EAAQb,KAEhDc,EAAMK,KAAKN,EAAQb,IAG3B,OAAOc,EAKX,SAAgBM,EAAgB/B,EAAQgC,EAAQC,GAC5C,IAEIC,EAFAC,EAAenB,oBAAkBgB,EAAOI,YAAc,KACtDC,EAAcrC,EAAQgC,EAAOI,WAAWE,UAE5C,OAAoB,MAAhBH,KACInC,EAAOuC,eAAkBvB,oBAAkBmB,EAAanC,EAAOwC,sBAC3DL,EAAanC,EAAOwC,qBAIO,IAA1BL,EAAaM,YAGbN,EAAaC,cAClBF,EAAcG,EAAcrC,EAAQmC,EAAaC,WAAWE,YACzCtC,EAAOuC,gBAAkBvB,oBAAkBkB,EAAYlC,EAAOwC,uBACzEN,EAAYlC,EAAOwC,qBACvBN,EAAYO,UAAW,GAChB,KAEPP,IAAwC,IAAzBA,EAAYO,aAGtBP,GACEH,EAAgB/B,EAAQkC,EAAaD,OAjBhDE,EAAaM,UAAW,GACjB,IA+BnB,SAAgBC,EAAoBlB,GAChC,IAAIC,KACJ,GAAIT,oBAAkBQ,KAAcA,EAAQmB,kBAAoB3B,oBAAkBQ,EAAQoB,gBAClFpB,EAAQoB,aAAa/B,OACzB,SAEJ,IAAKG,oBAAkBQ,EAAQoB,cAE3B,IAAK,IADDA,EAAepB,EAAQoB,aAClBjC,EAAI,EAAGe,EAAMC,OAAOC,KAAKgB,GAAc/B,OAAQF,EAAIe,EAAKf,IAC7Dc,EAAMK,KAAKc,EAAajC,KACpBiC,EAAajC,GAAGgC,kBAAqB3B,oBAAkB4B,EAAajC,GAAGiC,eACvEA,EAAajC,GAAGiC,aAAa/B,UAC7BY,EAAQA,EAAMoB,OAAOH,EAAoBE,EAAajC,MAIlE,OAAOc,EAEX,SAAgBqB,EAAU9C,GACtB,GAAID,EAAaC,GAAS,CACtB,IAAI+C,EAAK/C,EAAOC,WAChB,OAAQe,oBAAkB+B,EAAGC,OAEjC,OAAO,EAEX,SAAgBC,EAAYC,GAIxB,IAAK,IAFDC,EACAvB,EAFAwB,KAGKzC,EAAI,EAAGuC,GAASvC,EAAIuC,EAAMrC,OAAQF,IAAK,CAC5CiB,EAAOD,OAAOC,KAAKsB,EAAMvC,IACzBwC,KACA,IAAK,IAAIE,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IAC7BF,EAAIvB,EAAKyB,IAAMH,EAAMvC,GAAGiB,EAAKyB,IAEjCD,EAAOtB,KAAKqB,GAEhB,OAAOC,EAEX,SAAgBE,EAAaC,GAMzB,cALOA,EAAMZ,uBACNY,EAAMX,oBACNW,EAAMC,aACND,EAAMnB,kBACNmB,EAAME,MACNF,EAEX,SAAgBlB,EAAcrC,EAAQuD,EAAOG,GACzC,GAAIA,EAAe,CAEf,OAAO1D,EAAe,yBAAEuD,GAIxB,OAAOvD,EAAS,mBAAEuD,GChJnB,SAASI,EAAWC,EAASC,EAASC,EAAiBC,EAAaC,EAAeC,EAAYC,GAClG,IAGIvD,EACA0C,EAEAc,EANAZ,EAAQK,EAAQL,MAChBa,EAASR,EAAQQ,OAMjBjD,EAAM0C,EAAQ5C,KAAKoD,0BAA0B,GAC7CC,EAAWT,EAAQ5D,sBAAsBC,cACzC2D,EAAQ5D,WAAWA,WAAWsE,KAAOV,EAAQ5D,WAC7CuE,KACAC,EAAelB,EACfmB,GAAS,EAIb,GAHkC,UAA9Bb,EAAQc,aAAaC,OACrBT,EAAeN,EAAQ5C,KAAK4D,WAAWC,mBAE5B,QAAXV,GAAgC,cAAXA,GAAyD,UAA9BP,EAAQc,aAAaC,MAClET,EAAyB,aAAEtD,OAAU,CACxC,IAAIkE,EAmGZ,SAA0BnB,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAC/F,IAAIX,EACAmB,GAAS,EACTM,EAAqBnB,EAAQ5C,KAAKgE,wBAGtC,OAFA1B,EAAQ2B,YAAWtB,EAAQL,OAC3BA,EAAQD,EAAaC,GACbM,EAAQc,aAAaQ,gBACzB,IAAK,MACDb,EAASc,QAAQ7B,GACjBmB,GAAS,EACT,MACJ,IAAK,SACDJ,EAASxC,KAAKyB,GACdmB,GAAS,EACT,MACJ,IAAK,QAOGnB,EANCvC,oBAAkBkD,GAMXZ,EADRC,EAAQ2B,YAAWF,EAAmBjB,EAAc,KAH5CT,EADRC,EAAQ2B,YAAWhB,IAOvB,MACJ,IAAK,QACL,IAAK,QACD,GAAKlD,oBAAkBkD,GAIlB,CACD,IAAImB,EAAcxB,EAAQ5C,KAAKoD,0BAA0B,GACrDiB,EAAcN,EAAmBjB,GAOrCR,EAAQD,EALJC,GADCvC,oBAAkBsE,IAAgBA,EAAYD,KAAiBzB,EAAQL,MAAM8B,KAAmC,IAAnBrB,EACtFkB,YAAWI,GAGXJ,YAAWtB,EAAQL,aAT/BA,EAAQD,EADRC,EAAQ2B,YAAWhB,KAcA,IAAnBF,IACAM,EAASc,QAAQ7B,GACjBmB,GAAS,GAGrB,OAASnB,MAAOA,EAAOmB,OAAQA,GAlJda,CAAU3B,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAChGX,EAAQwB,EAAOxB,MACfmB,EAASK,EAAOL,OAQpB,GANInB,aAAiBiC,MACjBhB,EAAevB,EAAYM,GAG3BiB,EAAa1C,KAAKoD,YAAW3B,KAE5BmB,IAAsB,QAAXN,GAC6B,QAAxCP,EAAQc,aAAaQ,gBAAoE,WAAxCtB,EAAQc,aAAaQ,gBACvE,IAAK,IAAIM,EAAI,EAAGA,EAAIjB,EAAa3D,OAAQ4E,IAAK,CACJ,iBAA1BjB,EAAaiB,GAAGtE,KACxBqD,EAAaiB,GAAKjB,EAAaiB,GAAGtE,IAEtC,IAAIS,EAAOD,OAAOC,KAAK4C,EAAaiB,GAAGC,UACvC/E,EAAI2D,EAASzD,OA0Eb,IAzEA,IAAI8E,EAAU,WACV,GAAIrB,EAAS3D,GAAGQ,KAASqD,EAAaiB,GAAGtE,GAAM,CAC3C,GAAe,WAAXiD,EAuBC,CACD,GAAe,SAAXA,GACA,IAAKf,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzB,GAAIiB,EAAS3D,GAAGiF,eAAehE,EAAKyB,MAAuC,SAA9BQ,EAAQc,aAAaC,OACzD5D,oBAAkBmD,IAAyD,IAAxCA,EAA2B,eAAEtD,QAClEe,EAAKyB,KAAOY,GAAa,CACX5B,EAAcwB,EAASW,EAAaiB,GAAGnD,UAC7CoD,SAAS9D,EAAKyB,IAAMiB,EAAS3D,GAAGiB,EAAKyB,IAAMmB,EAAaiB,GAAG7D,EAAKyB,UAIlF,GAAe,QAAXe,GAA+B,cAAXA,EAAwB,CACjD,IAAIZ,OAAQ,EACgC,UAAxCK,EAAQc,aAAaQ,eACjBrB,GACAW,EAAaiB,SAAS7B,EAAQgC,iBAAmBvB,EAAS3D,GAAGkD,EAAQiC,WACrExB,EAASyB,OAAOpF,EAAI,EAAG,EAAG8D,EAAaiB,YAGlCpB,EAAS3D,GAAGiF,eAAe/B,EAAQmC,gBACpC1B,EAAS3D,GAAGkD,EAAQmC,kBAExB1B,EAAS3D,GAAGkD,EAAQmC,cAAclE,KAAK2C,EAAaiB,UACpDO,EAAgB9E,EAAKmD,EAAS3D,GAAIyD,EAAQP,EAASC,EAAiBW,IAG3B,UAAxCZ,EAAQc,aAAaQ,gBAC1Bb,EAASyB,OAAOpF,EAAI,EAAG,EAAG8D,EAAaiB,UACvCO,EAAgB9E,EAAKmD,EAAS3D,GAAIyD,EAAQP,EAASC,EAAiBW,IAE9DV,EAIuC,UAAxCF,EAAQc,aAAaQ,iBAC1Bb,EAASyB,OAAOpF,EAAG,EAAG8D,EAAaiB,UACnCO,EAAgB9E,EAAKmD,EAAS3D,GAAIyD,EAAQP,EAASC,EAAiBW,KALpEjB,EAAQ,EACRc,EAASyB,OAAOvC,EAAO,EAAGiB,EAAaiB,WAO/C,MAAO,QA7DP,IAAIQ,EAAgB5B,EAAS3D,GAE7B,GADA2D,EAASyB,OAAOpF,EAAG,GACfmD,EAAiB,CACjB,IAAK9C,oBAAkBkF,EAAcrC,EAAQgC,kBAKzC,IAAK,IAJDM,EAAatC,EAAQuC,SAASC,OAAO,SAAUC,GAC/C,OAAOA,EAAEzC,EAAQiC,aAAeI,EAAcrC,EAAQgC,mBACvD,GACCjD,EAAeuD,EAAaA,EAAWtC,EAAQmC,iBAC1CO,EAAI3D,EAAa/B,OAAS,EAAG0F,GAAK,EAAGA,IAC1C,GAAI3D,EAAa2D,GAAG1C,EAAQiC,aAAeI,EAAcrC,EAAQiC,WAAY,CACzElD,EAAamD,OAAOQ,EAAG,GAClB3D,EAAa/B,SACdsF,EAAWxD,iBAAkB,EAC7BsD,EAAgB9E,EAAKgF,EAAY/B,EAAQP,EAASC,IAEtD,MAIZ,MAAO,cA6CT9C,oBAAkBsD,EAAS3D,GAAGkD,EAAQmC,gBACxCQ,EAAmBlC,EAAS3D,GAAGkD,EAAQmC,cAAexB,EAAaiB,GAAIrB,EAAQjD,EAAK0C,EAASC,EAAiBW,EAAcR,IAC5HgC,EAAgB9E,EAAKmD,EAAS3D,GAAIyD,EAAQP,EAASC,IAIxDnD,KAAOA,GAAK,GAAG,CAElB,GAAgB,UADFgF,IAEV,QAsDpB,SAAgBa,EAAmB5D,EAAc4B,EAAcJ,EAAQjD,EAAK0C,EAASC,EAAiBW,EAAcR,GAGhH,IAFA,IAAIwC,GAAa,EACbpD,EAAIT,EAAa/B,OACdwC,KAAOA,GAAK,GACf,GAAIT,EAAaS,GAAGlC,KAASqD,EAAarD,IACrC2C,GAAmBlB,EAAaS,GAAGQ,EAAQgC,mBAAqBrB,EAAaX,EAAQiC,WAAa,CACnG,GAAe,SAAX1B,EAAmB,CAGnB,IAAK,IAFDxC,EAAOD,OAAOC,KAAK4C,GACnBkC,EAAarE,EAAcwB,EAASW,EAAalC,UAC5C3B,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,KACzBiC,EAAaS,GAAGuC,eAAehE,EAAKjB,KAAsC,SAA9BkD,EAAQc,aAAaC,MAAmBhD,EAAKjB,KAAOsD,IAChGyC,EAAW9E,EAAKjB,IAAM+F,EAAWhB,SAAS9D,EAAKjB,IAAMiC,EAAaS,GAAGzB,EAAKjB,IAAM6D,EAAa5C,EAAKjB,KAG1G,MAEC,GAAe,QAAXyD,GAA+B,cAAXA,EACmB,UAAxCP,EAAQc,aAAaQ,eACjBrB,GACAW,EAAaZ,EAAQgC,iBAAmBjD,EAAaS,GAAGQ,EAAQiC,WAChElD,EAAamD,OAAO1C,EAAI,EAAG,EAAGoB,GAC9BwB,EAAgB9E,EAAKyB,EAAaS,GAAIe,EAAQP,EAASC,EAAiBW,KAGnE7B,EAAaS,GAAGuC,eAAe/B,EAAQmC,gBACxCpD,EAAaS,GAAGQ,EAAQmC,kBAE5BpD,EAAaS,GAAGQ,EAAQmC,cAAclE,KAAK2C,EAAaiB,UACxDO,EAAgB9E,EAAKyB,EAAaS,GAAIe,EAAQP,EAASC,EAAiBW,IAG/B,UAAxCZ,EAAQc,aAAaQ,gBAC1BvC,EAAamD,OAAO1C,EAAG,EAAGoB,EAAaiB,UACvCO,EAAgB9E,EAAKyB,EAAaS,GAAIe,EAAQP,EAASC,EAAiBW,IAE3B,UAAxCZ,EAAQc,aAAaQ,iBAC1BvC,EAAamD,OAAO1C,EAAI,EAAG,EAAGoB,EAAaiB,UAC3CO,EAAgB9E,EAAKyB,EAAaS,GAAIe,EAAQP,EAASC,EAAiBW,QAG3E,CACgB7B,EAAaS,GAAGjB,WACjCQ,EAAamD,OAAO1C,EAAG,GAClBT,EAAa/B,SACd4F,GAAa,SAIfzF,oBAAkB4B,EAAaS,GAAGQ,EAAQmC,gBAC5CQ,EAAmB5D,EAAaS,GAAGQ,EAAQmC,cAAexB,EAAcJ,EAAQjD,EAAK0C,EAASC,EAAiBW,EAAcR,IAC7HgC,EAAgB9E,EAAKyB,EAAaS,GAAIe,EAAQP,EAASC,GAInE,OAAO2C,EAEX,SAAgBR,EAAgB9E,EAAKa,EAAQoC,EAAQP,EAASC,EAAiB6C,GAC3E,GAA6C,UAAxC9C,EAAQc,aAAaQ,gBAAsE,UAAxCtB,EAAQc,aAAaQ,gBACzD,QAAXf,GAA+B,cAAXA,GAA6BpD,oBAAkB2F,EAAMvE,YAI7E,CACD,IACIwE,EADAC,EAAiBhD,EAAQ5C,KAAKgE,wBAQlC,GANA4B,EAAeC,IAAI,SAAUR,EAAG3F,GAAS2F,EAAEnF,KAASa,EAAOb,KACvDyF,EAAUjG,KAGdqB,EAAS6E,EAAeD,GACxB5E,EAAOW,iBAAkB,EACV,QAAXyB,GAA+B,cAAXA,EAAwB,CAC5CpC,EAAOS,UAAW,EAClBT,EAAOW,iBAAkB,EACrBkB,EAAQkD,aAAanG,QAAQC,QAAUG,oBAAkB2F,KACzDA,EAAQE,EAAeR,OAAO,SAAUC,GACpC,OAAIA,EAAEU,iBAAmBhF,EAAOM,SACrBgE,EAGA,QAInB,IAAI1D,EAAe+D,EAAQA,aAAiBnB,MAAQmB,EAAM,GAAKA,EAAQE,EAAeD,EAAU,GACpD,UAAxC/C,EAAQc,aAAaQ,iBAChBnD,EAAO4D,eAAe,gBAIlB5E,oBAAkB2F,IAAU3E,EAAOb,KAASwF,EAAMxF,IACnDa,EAAOY,aAAad,KAAK6E,GAJ7B3E,EAAOY,iBAOwC,IAA/CZ,EAAOY,aAAaqE,QAAQrE,IAAwBZ,EAAOb,KAASwF,EAAMxF,IAC1Ea,EAAOY,aAAawC,QAAQxC,GAE5BkB,IACK9B,EAAO4D,eAAe/B,EAAQmC,gBAC/BhE,EAAO6B,EAAQmC,mBAEyC,IAAxDhE,EAAO6B,EAAQmC,cAAciB,QAAQrE,IAAwBZ,EAAOb,KAASwF,EAAMxF,IACnFa,EAAO6B,EAAQmC,cAAcZ,QAAQxC,KAQrD,IAAK,IAHDyC,EAAcxB,EAAQ5C,KAAKoD,0BAA0B,GACrD6C,EAAOrD,EAAQ5C,KAAKhB,sBAAsBC,cAC1C2D,EAAQ5C,KAAKhB,WAAWA,WAAWsE,KAAOV,EAAQ5C,KAAKhB,WAClDU,EAAI,EAAGA,EAAIuG,EAAKrG,OAAQF,IAC7B,GAAIuG,EAAKvG,GAAG0E,KAAiBrD,EAAOqD,GAAc,CAC9C6B,EAAKvG,GAAKqB,EACV,MAGR6B,EAAQ5C,KAAKkG,WAAWhG,EAAKa,GAC7B,IAAIoF,EAAMvD,EAAQwD,cAAcT,GACE,UAA9B/C,EAAQc,aAAaC,OACrBwC,EAAMvD,EAAQyD,UAAUzD,EAAQ5C,KAAKsG,wBAAwBvF,EAAOb,MAExE,IAAIqG,OAAa,GACb3D,EAAQ4D,YAAc5D,EAAQ6D,sBAC9BF,EAAa3D,EAAQ8D,qBAAqBf,IAE9C/C,EAAQ+D,aAAaC,YACjBX,KAAMlF,EAAQ8F,KAAMV,EAAIW,MAAMlE,EAAQmE,iBAAmBZ,EAAIW,MAAMlE,EAAQmE,iBACrER,EAAWO,MAAMlE,EAAQmE,gBAAkBnE,EAAQoE,eACzDC,OAAQrE,EAAQ5C,KAAKkH,aAAatE,EAAQmE,iBAC1CI,YAAahE,QAvE0E,CAC1E/B,EAAcwB,EAAS8C,EAAMvE,WAAWE,UAC9CM,aAAad,KAAK6E,IClOrC,IAAI0B,EAAwB,WA6DxB,OA5DA,SAAgBC,GAMZC,KAAKC,cAAe,EAKpBD,KAAKE,QAKLF,KAAKG,mBAAoB,EAMzBH,KAAKI,iBAAkB,EAMvBJ,KAAKK,gBAAiB,EAMtBL,KAAKlH,gBAAiB,EAMtBkH,KAAKM,cAAe,EAMpBN,KAAKO,eAAgB,EAWrBP,KAAKlC,UACL0C,QAAMR,KAAMD,OC/DhBU,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBtH,OAAOyH,iBAChBC,wBAA2B7D,OAAS,SAAU0D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI5C,KAAK4C,EAAOA,EAAEvD,eAAeW,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaxH,OAAO8H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,EAA0C,SAAUC,EAAYC,EAAQzI,EAAK0I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUlJ,OAAQmJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOlI,OAAOsI,yBAAyBL,EAAQzI,GAAO0I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQzI,EAAK0I,QACpH,IAAK,IAAIlJ,EAAIgJ,EAAW9I,OAAS,EAAGF,GAAK,EAAGA,KAASuI,EAAIS,EAAWhJ,MAAIqJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQzI,EAAK6I,GAAKd,EAAEU,EAAQzI,KAAS6I,GAChJ,OAAOF,EAAI,GAAKE,GAAKrI,OAAOyI,eAAeR,EAAQzI,EAAK6I,GAAIA,GAM5DK,EAA2B,SAAUC,GAErC,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAsC/D,OAxCAS,EAAUqB,EAAWC,GAIrBZ,GACIc,cACDH,EAAUb,UAAW,aAAS,GACjCE,GACIc,cACDH,EAAUb,UAAW,gBAAY,GACpCE,GACIc,cACDH,EAAUb,UAAW,aAAS,GACjCE,GACIc,cACDH,EAAUb,UAAW,iBAAa,GACrCE,GACIc,cACDH,EAAUb,UAAW,oBAAgB,GACxCE,GACIc,cACDH,EAAUb,UAAW,iBAAa,GACrCE,GACIc,gBACDH,EAAUb,UAAW,yBAAqB,GAC7CE,GACIc,gBACDH,EAAUb,UAAW,sBAAkB,GAC1CE,GACIc,cACDH,EAAUb,UAAW,YAAQ,GAChCE,GACIc,cACDH,EAAUb,UAAW,mBAAe,GACvCE,GACIc,cACDH,EAAUb,UAAW,WAAO,GAC/BE,GACIc,cACDH,EAAUb,UAAW,oBAAgB,GACjCa,GACTI,iBAKEC,EAAgC,SAAUJ,GAE1C,SAASI,IACL,OAAkB,OAAXJ,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,OA5BAS,EAAU0B,EAAgBJ,GAI1BZ,GACIiB,gBAAeN,IAChBK,EAAelB,UAAW,eAAW,GACxCE,GACIc,WAAS,cACVE,EAAelB,UAAW,YAAQ,GACrCE,GACIc,cACDE,EAAelB,UAAW,YAAQ,GACrCE,GACIc,YAAS,IACVE,EAAelB,UAAW,2BAAuB,GACpDE,GACIc,WAAS,OACVE,EAAelB,UAAW,0BAAsB,GACnDE,GACIc,cACDE,EAAelB,UAAW,iBAAa,GAC1CE,GACIc,YAAS,IACVE,EAAelB,UAAW,oBAAgB,GAC7CE,GACIc,WAAS,WACVE,EAAelB,UAAW,qBAAiB,GACvCkB,GACTD,iBCpGEzB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBtH,OAAOyH,iBAChBC,wBAA2B7D,OAAS,SAAU0D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI5C,KAAK4C,EAAOA,EAAEvD,eAAeW,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaxH,OAAO8H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,EAA0C,SAAUC,EAAYC,EAAQzI,EAAK0I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUlJ,OAAQmJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOlI,OAAOsI,yBAAyBL,EAAQzI,GAAO0I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQzI,EAAK0I,QACpH,IAAK,IAAIlJ,EAAIgJ,EAAW9I,OAAS,EAAGF,GAAK,EAAGA,KAASuI,EAAIS,EAAWhJ,MAAIqJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQzI,EAAK6I,GAAKd,EAAEU,EAAQzI,KAAS6I,GAChJ,OAAOF,EAAI,GAAKE,GAAKrI,OAAOyI,eAAeR,EAAQzI,EAAK6I,GAAIA,GAM5DY,EAAkC,SAAUN,GAE5C,SAASM,IACL,OAAkB,OAAXN,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAK/D,OAPAS,EAAU4B,EAAkBN,GAI5BZ,GACIc,WAAS,SACVI,EAAiBpB,UAAW,gBAAY,GACpCoB,GACTH,iBC3BSI,EAAe,eAIfC,EAAgB,gBAEhBC,EAAkB,kBAElBC,EAAc,cAEdC,EAAkB,kBAElBC,EAAiB,iBAIjBC,EAAc,cAEdC,EAAiB,iBAEjBC,EAAgB,gBAEhBC,EAAe,eAEfC,EAAoB,oBAEpBC,EAAkB,kBAElBC,EAAa,aAEbhJ,EAAW,WAIXiJ,EAAY,YAIZC,EAAe,eAEfC,EAA2B,2BAE3BC,EAAgB,gBAEhBC,EAAgB,iBAEhBC,EAAkB,kBAElBC,EAAmB,mBAQnBC,EAAa,aAEbC,EAAY,YAEZC,EAAW,WAEXC,EAAoB,oBAEpBC,EAAW,WAEXC,GAAY,YAEZC,GAAW,WAEXC,GAAc,cAEdC,GAAc,cAEdC,GAAW,WAEXC,GAAoB,oBAEpBC,GAAiB,iBAEjBC,GAAkB,kBAElBC,GAAY,YAEZC,GAAa,cAIbC,GAAY,aAIZC,GAAoB,sBAEpBC,GAAe,gBAEfC,GAAgB,iBAEhBC,GAAkB,YAElBC,GAAoB,sBAIpBC,GAAkB,kBAIlBC,GAAqB,qBAMrBC,GAAU,WAEVC,GAAa,cAEbC,GAAa,cAEbC,GAAa,cC7HpB3E,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBtH,OAAOyH,iBAChBC,wBAA2B7D,OAAS,SAAU0D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI5C,KAAK4C,EAAOA,EAAEvD,eAAeW,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaxH,OAAO8H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAmBxCsE,GAA+B,SAAUtD,GAEzC,SAASsD,EAAc5N,GACnB,IAAI6N,EAAQvD,EAAOwD,KAAKvF,KAAMvI,EAAOiB,OAASsH,KAI9C,OAHAsF,EAAME,gBAAkB,GACxBF,EAAMG,4BACNH,EAAMI,eAAiBjO,EAChB6N,EAsJX,OA5JA7E,GAAU4E,EAAetD,GAQzBsD,EAAcpE,UAAU0E,YAAc,SAAUC,GAC5C,IAAIC,EAAc,cAIdvH,EAAiB0B,KAAK0F,eAAehJ,wBACzC,GAAyC,KAArCoJ,OAAOC,eAAeC,WAAmB,CACzChG,KAAKiG,kBAAkBjL,MAAQgF,KAAK6F,GAAe,GACnD,IAAIK,EAAOlG,KAAK0F,eAAehN,KAAKqG,UACpC,GAAmD,SAA/CiB,KAAK0F,eAAeS,kBAAkB9J,KAAiB,CAIvD,IAAK,IAHD+J,EAAkBpG,KAAK0F,eAAeW,wBAAwBC,KAAK,SAAUC,EAAG3F,GAChF,OAAO2F,EAAI3F,IAENxI,EAAI,EAAGA,EAAIgO,EAAgB9N,OAAQF,IAIxC,GAHIA,EAAI,IACJ4H,KAAKwF,iBAAmB,OAEvBU,EAAKE,EAAgBhO,IAAIoO,UAAUC,SAAS,gBAAiB,CAC9D,IAAIjH,KAAWkH,MAAMnB,KAAKW,EAAKE,EAAgBhO,IAAIuO,iBAAiB,eAChEC,EAAW5G,KAAK0F,eAAemB,qBAAqBzO,GAAW,UACV,IAArD4H,KAAKyF,yBAAyB/G,QAAQkI,KACQ,WAA1C5G,KAAK0F,eAAeoB,mBAA4E,SAA1C9G,KAAK0F,eAAeoB,mBAC1E9G,KAAK+G,kBAAkBzI,EAAgB8H,EAAgBhO,GAAI8N,EAAMN,EAAYxN,GAEjF4H,KAAgB,YAAER,GAAO,EAAO,KAAMoG,GACtC5F,KAAKwF,iBAAmBxF,KAAK6F,GAC7B7F,KAAKyF,yBAAyBlM,KAAKqN,GACnC5G,KAAK6F,GAAe,GAC0B,UAA1C7F,KAAK0F,eAAeoB,mBAA2E,SAA1C9G,KAAK0F,eAAeoB,mBACzE9G,KAAKgH,iBAAiB1I,EAAgB8H,EAAgBhO,GAAI8N,EAAMN,IAKhF,GAAIA,EAAY,CAEP,IADDqB,KACJ,IAAS7O,EAAI,EAAGA,EAAI4H,KAAK0F,eAAewB,oBAAoB5O,OAAQF,IAChE6O,EAAgB7O,GAAK4H,KAAK0F,eAAewB,oBAAoB9O,GAAG+O,WAEpEnH,KAAgB,YAAEiH,GAAiB,EAAO,KAAMrB,GAChD5F,KAAKwF,gBAAkBxF,KAAK6F,GAAe,KAAO7F,KAAKwF,gBAE3D,IAAI4B,GACAzI,KAAMqB,KAAKwF,gBACX6B,QAAQ,GAGZ,GADArH,KAAK0F,eAAe4B,QDnBZ,aCmBuCF,GAC3CA,EAAKC,OACL,OAEJrH,KAAKiG,kBAAkBjL,MAAQgF,KAAK6F,GAAeuB,EAAKzI,KACnD4I,UAAQC,UAAUC,MAAM,qBAIzBzH,KAAKiG,kBAAkByB,kBAAkB,EAAG1H,KAAKiG,kBAAkBjL,MAAM1C,QAHzE0H,KAAKiG,kBAAkB0B,SAK3B3H,KAAa,UAAI,EACjBA,KAAKyF,4BACLzF,KAAKwF,gBAAkB,QAGvBzD,EAAOd,UAAU0E,YAAYJ,KAAKvF,KAAM4F,KAIpDP,EAAcpE,UAAU8F,kBAAoB,SAAUzI,EAAgB7C,EAAeyK,EAAMN,EAAY3K,GACnG,IACI4K,EAAc,cACdhM,EAAa,aACbE,EAAW,WAEf,IAAKtB,oBAAkB6F,EAAe7C,GAAe5B,IAEjD,IAAK,IADD+N,EAAYtJ,EAAe7C,GAAe5B,GAAiB,MACtDzB,EAAI,EAAGA,EAAIwP,EAAY,EAAGxP,IAC/B,IAAK,IAAI0C,EAAI,EAAGA,EAAIwD,EAAehG,OAAQwC,IACvC,IAAKrC,oBAAkB6F,EAAe7C,GAAe5B,KACjDyE,EAAexD,GAAGf,KAAcuE,EAAe7C,GAAe5B,GAAYE,GAAW,CACrF0B,EAAgBX,EAChB,IAAI0E,KAAWkH,MAAMnB,KAAKW,EAAKzK,GAAekL,iBAAiB,eAC3DC,EAAWtI,EAAexD,GAAGf,GACjC,IAAyD,IAArDiG,KAAKyF,yBAAyB/G,QAAQkI,GAAkB,CACxD5G,KAAgB,YAAER,GAAO,EAAO,KAAMoG,GAElC5F,KAAKwF,gBADLvK,EAAQ,EACe+E,KAAKwF,gBAAkBxF,KAAK6F,GAAe,KAG3C7F,KAAK6F,GAAe,KAAO7F,KAAKwF,gBAE3DxF,KAAKyF,yBAAyBlM,KAAKqN,GACnC5G,KAAK6F,GAAe,GACpB,SAOxBR,EAAcpE,UAAU4G,KAAO,SAAUjC,GACrC7D,EAAOd,UAAU4G,KAAKtC,KAAKvF,KAAM4F,IAErCP,EAAcpE,UAAU6G,MAAQ,SAAUnJ,EAAMoJ,EAAUC,GACtDjG,EAAOd,UAAU6G,MAAMvC,KAAKvF,KAAMrB,EAAMoJ,EAAUC,IAMtD3C,EAAcpE,UAAUgH,cAAgB,WACpC,MAAO,aAQX5C,EAAcpE,UAAUiH,QAAU,WAC9BnG,EAAOd,UAAUiH,QAAQ3C,KAAKvF,OAElCqF,EAAcpE,UAAU+F,iBAAmB,SAAU1I,EAAgB7C,EAAeyK,EAAMN,GACtF,IAII7L,EAAW,WACf,GAAIuE,EAAe7C,GAA8B,gBAE7C,IAAK,IADD0M,EAAY7J,EAAe7C,GAA2B,aACjDrD,EAAI,EAAGA,EAAI+P,EAAU7P,OAAQF,IAClC,IAAK,IAAI0C,EAAI,EAAGA,EAAIwD,EAAehG,OAAQwC,IACvC,IAAKrC,oBAAkB0P,EAAU/P,GAAG2B,KAAcuE,EAAexD,GAAGf,KAAcoO,EAAU/P,GAAG2B,GAAW,CACtG,IAAMtB,oBAAkByN,EAAKpL,MAASoL,EAAKpL,GAAG0L,UAAUC,SAAS,gBAAiB,CAC9E,IAAIjH,KAAWkH,MAAMnB,KAAKW,EAAKpL,GAAG6L,iBAAiB,eAC/CC,EAAWtI,EAAexD,GAAGf,IACwB,IAArDiG,KAAKyF,yBAAyB/G,QAAQkI,KACtC5G,KAAgB,YAAER,GAAO,EAAO,KAAMoG,GACtC5F,KAAKwF,iBAAoB,KAAOxF,KAAgB,YAChDA,KAAgB,YAAI,GACpBA,KAAKyF,yBAAyBlM,KAAKqN,GACnC5G,KAAKgH,iBAAiB1I,EAAgBxD,EAAGoL,EAAMN,IAGvD,QAMbP,GACT+C,aCxKEC,GAA2B,WAI3B,SAASA,EAAU5Q,GACfuI,KAAKvI,OAASA,EACduI,KAAKsI,iBACLtI,KAAKoG,mBACLpG,KAAKuI,mBAyaT,OAnaAF,EAAUpH,UAAUgH,cAAgB,WAChC,MAAO,aAEXI,EAAUpH,UAAUsH,iBAAmB,WACnCvI,KAAKvI,OAAO+Q,GAAG,eAAgBxI,KAAKyI,eAAgBzI,MACpDA,KAAKvI,OAAO+Q,GAAG,iBAAkBxI,KAAK0I,eAAgB1I,MACtDA,KAAKvI,OAAO+Q,GAAG,oBAAqBxI,KAAK2I,kBAAmB3I,MAC5DA,KAAKvI,OAAOiB,KAAK8P,GAAG,mBAAoBxI,KAAKyI,eAAgBzI,MAC7DA,KAAKvI,OAAO+Q,GAAG,oBAAqBxI,KAAK4I,kBAAmB5I,OAEhEqI,EAAUpH,UAAU4H,oBAAsB,WAClC7I,KAAKvI,OAAOqR,cAGhB9I,KAAKvI,OAAOsR,IAAI,eAAgB/I,KAAKyI,gBACrCzI,KAAKvI,OAAOsR,IAAI,iBAAkB/I,KAAK0I,gBACvC1I,KAAKvI,OAAOiB,KAAKqQ,IAAI,mBAAoB/I,KAAKyI,gBAC9CzI,KAAKvI,OAAOsR,IAAI,oBAAqB/I,KAAK4I,mBAC1C5I,KAAKvI,OAAOsR,IAAI,oBAAqB/I,KAAK2I,qBAO9CN,EAAUpH,UAAUiH,QAAU,WAC1BlI,KAAK6I,uBAETR,EAAUpH,UAAU2H,kBAAoB,SAAUxB,GAC9C,IAEI4B,EAFA3H,EAAS/H,YAAU,SAAU8N,GAC7B6B,EAAYC,eAAa7H,EAAQ,sBAErC,GAAI4H,GAAaA,EAAUtC,iBAAiB,sBAAsBrO,OAAS,EAAG,CAC1E0Q,EAAWC,EAAUE,cAAc,0BACnC,IAAIpB,OAAW,GACfA,MACSxO,KAAK8H,EAAO+H,QAAQ,MAAMrB,UACnC/H,KAAKqJ,iBAAiBtB,GACtB/H,KAAKsJ,sBAAsBN,EAAUA,EAASO,mBAAmB/C,UAAUC,SAAS,WAAYpF,EAAO+H,QAAQ,YAE9G,GAAIH,GAAaA,EAAUtC,iBAAiB,oBAAoBrO,OAAS,GAAK0H,KAAKvI,OAAO+R,mBAAoB,CAC/G,IAAIC,GAAiBR,EAAUE,cAAc,YAAY3C,UAAUC,SAAS,aACpEwC,EAAUE,cAAc,YAAY3C,UAAUC,SAAS,UAC/DzG,KAAK0J,gBAAgBD,GACrBT,EAAWC,EAAUE,cAAc,0BACnCnJ,KAAKsJ,sBAAsBN,EAAUS,EAAepI,EAAO+H,QAAQ,SAG3Ef,EAAUpH,UAAUqI,sBAAwB,SAAUN,EAAUW,EAAYC,GACxE,IAAIjL,EAAOqB,KAAKvI,OAAOiF,wBAAwBkN,EAAW7B,UACtDX,GAASyC,QAASF,EAAYtI,OAAQ2H,EAAUY,WAAYA,EAC5DE,QAASd,EAASxC,UAAUC,SAAS,mBAC/BzG,KAAKvI,OAAOsS,oBAAsBpL,GAC5CqB,KAAKvI,OAAO6P,QAAQ0C,EAAuB5C,IAE/CiB,EAAUpH,UAAUgJ,uBAAyB,WAIzC,IAAK,IAHDC,EACAC,EACA9R,EAAW2H,KAAKvI,OAAc,QACzB2S,EAAM,EAAGA,EAAM/R,EAAQC,OAAQ8R,IAChC/R,EAAQ+R,GAAK7R,eACb2R,EAAalK,KAAKvI,OAAOY,QAAQ+R,GAAKC,KAI9C,IAAK,IADDC,EAAmBtK,KAAKvI,OAAO8S,mBAAmB5D,iBAAiB,oBAAoBrO,OAClFwC,EAAI,EAAGA,EAAIwP,EAAkBxP,IAAK,CACtBkF,KAAKvI,OAAO8S,mBAAmB5D,iBAAiB,oBAAoB7L,GACtE0P,aAAa,kBAAoBN,IAC5CC,EAAcrP,GAGtB,OAAOqP,GAEX9B,EAAUpH,UAAUwH,eAAiB,WAEjC,GADAzI,KAAKmK,YAAcnK,KAAKiK,yBACpBjK,KAAKmK,aAAe,GAAoF,IAA/EnK,KAAKvI,OAAO8S,mBAAmB5D,iBAAiB,oBAAoBrO,OAAc,CAC3G,IAAImS,EAAgBzK,KAAKvI,OAAO8S,mBAAmB5D,iBAAiB,oBAAoB3G,KAAKmK,aACzFlB,OAAY,EAEZyB,EAAY1K,KAAKvI,OAAOkT,cAAc,SAAWC,UAAW,kBAAmBC,OAASC,KAAQ,eACpG7B,EAAY8B,iBAAe/K,KAAKvI,OAAOkT,eAAe,GAASd,SAFnD,EAEmEmB,MAAO,OAC5ExE,UAAUyE,IAAI,uBACxBhC,EAAUE,cAAc,YAAY+B,MAAMC,MAAQ,OAClDlC,EAAUmC,aAAaV,EAAUW,YAAapC,EAAUqC,YACnD7S,oBAAkBgS,IACnBA,EAAcW,aAAanC,EAAWwB,EAAca,YAEpDtL,KAAKvI,OAAO+R,oBACZxJ,KAAK0J,uBAGR,GAAI1J,KAAKmK,aAAe,GAAKnK,KAAKvI,OAAO8S,mBAAmB5D,iBAAiB,oBAAoBrO,OAAS,EAAG,CAC9G,IACImR,GADAR,EAAYjJ,KAAKvI,OAAO8S,mBAAmB5D,iBAAiB,uBAAuB,IACzDwC,cAAc,YAAY3C,UAAUC,SAAS,WACvEzG,KAAKvI,OAAO+R,oBAAsBC,GAClCzJ,KAAK0J,gBAAgBD,KAIjCpB,EAAUpH,UAAUsK,qBAAuB,SAAUnE,GACjD,IAAI6B,EACAyB,EAAY1K,KAAKvI,OAAOkT,cAAc,SAAWC,UAAW,oBAAqBC,OAASC,KAAQ,cAClGnM,EAAOyI,EAAKzI,KAChByI,EAAK7H,KAAKiH,UAAUyE,IAAI,sBACxB7D,EAAK7H,KAAKiM,aAAa,aAAc,YACrC,IAAIxQ,GAASvC,oBAAkBkG,EAAK8M,gBAAyC,YAAvB9M,EAAK8M,cAI3D,IAHAxC,EAAY8B,iBAAe/K,KAAKvI,OAAOkT,eAAe,GAASd,QAAS7O,EAAOgQ,MAAO,OAC5ExE,UAAUyE,IAAI,uBACxBhC,EAAUE,cAAc,YAAY+B,MAAMC,MAAQ,OACvB,kBAAvBxM,EAAK8M,cAAmC,CACxC,IAAIC,EAAWzC,EAAUtC,iBAAiB,YAAY,GACtDgF,eAAaD,IAAY,UAAW,SAAU,cAC9CzC,EAAUE,cAAc,YAAY3C,UAAUyE,IAAI,UAGtD,OADAhC,EAAUmC,aAAaV,EAAUW,YAAapC,EAAUqC,YACjDrC,GAEXZ,EAAUpH,UAAUyH,eAAiB,SAAUkD,GAC3C,IAAI3C,EAAYjJ,KAAKuL,qBAAqBK,GACtCC,EAAeD,EAAUrM,KAAK4J,cAAc,2BAChD,GAAK1Q,oBAAkBoT,GAGlB,CACD,IAAIC,EAAU9L,KAAKvI,OAAOkT,cAAc,QAAUC,UAAW,mBACzDjM,EAAOiN,EAAUrM,KAAKwM,UAC1BH,EAAUrM,KAAKwM,UAAY,GAC3BD,EAAQC,UAAYpN,EACpB,IAAIqN,EAAShM,KAAKvI,OAAOkT,cAAc,OAASC,UAAW,6BAC3DoB,EAAOC,YAAYhD,GACnB+C,EAAOC,YAAYH,GACnBF,EAAUrM,KAAK0M,YAAYD,QAV3BH,EAAaT,aAAanC,EAAW4C,EAAalF,iBAAiB,eAAe,KAa1F0B,EAAUpH,UAAUoI,iBAAmB,SAAU6C,GAE7C,IAAK,IAAI9T,EAAI,EAAGA,EAAI8T,EAAW5T,OAAQF,IAAK,CACxC,IAAIqB,EAASuG,KAAKvI,OAAOiF,wBAAwBwP,EAAW9T,IACxD+T,EAAarS,EAAckG,KAAKvI,OAAQgC,EAAOM,UAG/C0R,EAA0C,aAF9ChS,EAAU2S,cAAsD,kBAAxCpM,KAAKvI,OAAOC,WAAsB,YACtD+B,EAAS0S,GACeV,cAA+B,QAAU,UACrEhS,EAAOgS,cAAgBA,EAEvB,IAAK,IADDpS,EAAOD,OAAOC,KAAKI,GACdqB,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzBqR,EAAW9O,eAAehE,EAAKyB,MAC/BqR,EAAW9S,EAAKyB,IAAMrB,EAAOJ,EAAKyB,KAG1CkF,KAAKqM,gBAAgB5S,EAAQgS,GAAe,GACxCzL,KAAKvI,OAAO+R,oBACZxJ,KAAK0J,oBAIjBrB,EAAUpH,UAAUoL,gBAAkB,SAAU5S,EAAQgS,EAAea,GACnE,IAAIhU,EAAS,EAKb,GAJA0H,KAAKuM,oBAAoB9S,EAAQgS,IAC5Ba,GAAe7S,EAAOI,YAAcmG,KAAKvI,OAAO+R,oBACjDxJ,KAAKwM,sBAAsB/S,EAAOI,YAElCJ,EAAOY,cAAgB2F,KAAKvI,OAAO+R,mBAAoB,CACvD,IAAInP,EAAeZ,EAAOY,cACrB5B,oBAAkBuH,KAAKvI,OAAOgV,eAC/BzM,KAAKvI,OAAOgV,aAAaC,eAAepU,OAAS,GAAK0H,KAAKvI,OAAO+R,qBAClEnP,EAAe2F,KAAK2M,wBAAwBtS,IAEhD/B,EAAS+B,EAAa/B,OACtB,IAAK,IAAIsU,EAAQ,EAAGA,EAAQtU,EAAQsU,IAC3BvS,EAAauS,GAAOC,eACjBxS,EAAauS,GAAOxS,gBACpB4F,KAAKqM,gBAAgBhS,EAAauS,GAAQnB,GAAe,GAGzDzL,KAAKuM,oBAAoBlS,EAAauS,GAAQnB,MAMlEpD,EAAUpH,UAAU0L,wBAA0B,SAAUtS,GACpD,IAAIiL,EAAQtF,KAIZ,OAH2B3F,EAAayD,OAAO,SAAUC,GACrD,OAAOuH,EAAM7N,OAAOgV,aAAaC,eAAehO,QAAQX,IAAM,KAItEsK,EAAUpH,UAAUuL,sBAAwB,SAAU5S,GAClD,IACItB,EAAS,EACT+B,KACAZ,EAASK,EAAckG,KAAKvI,OAAQmC,EAAaG,UACjDN,GAAUA,EAAOY,eACjBA,EAAeZ,EAAOY,eAErB5B,oBAAkBuH,KAAKvI,OAAOgV,eAC/BzM,KAAKvI,OAAOgV,aAAaC,eAAepU,OAAS,GAAK0H,KAAKvI,OAAO+R,qBAClEnP,EAAe2F,KAAK2M,wBAAwBtS,IAEhD/B,EAAS+B,GAAgBA,EAAa/B,OACtC,IAAIwU,EAAU,EACVC,EAAoB,EACxB,IAAKtU,oBAAkBgB,GAAS,CAkB5B,IAAK,IAjBD2D,EAAU,SAAUhF,GACpB,IAAI4U,EAAcC,EAAOxV,OAAOiF,wBAAwBoB,OAAO,SAAUC,GACrE,OAAOA,EAAEhE,WAAaM,EAAajC,GAAG2B,WAEtCmT,EAAgBpT,EAAcmT,EAAOxV,OAAQ4C,EAAajC,GAAG2B,UAC7DoT,EAAkBf,cAAwD,kBAA1Ca,EAAOxV,OAAOC,WAAsB,YACpEsV,EAAY,GAAKE,EAChBzU,oBAAkB0U,KACkB,kBAAjCA,EAAe1B,cACfqB,IAEsC,UAAjCK,EAAe1B,eACpBsB,MAIRE,EAASjN,KACJ5H,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IACrCgF,EAAQhF,GAGRqB,EAAOgS,cADPqB,EAAU,GAAMC,EAAoB,GAAKA,IAAsBzU,EACxC,gBAEI,IAAtByU,GAAuC,IAAZD,EACT,UAGA,QAE3B9M,KAAKuM,oBAAoB9S,EAAQA,EAAOgS,eACpChS,EAAOI,YACPmG,KAAKwM,sBAAsB/S,EAAOI,cAI9CwO,EAAUpH,UAAUyI,gBAAkB,SAAU0D,GAC5C,IAAI9H,EAAQtF,KAGR1H,EAAS,EACTqG,GAASlG,oBAAkBuH,KAAKvI,OAAOgV,eACvCzM,KAAKvI,OAAOgV,aAAaC,eAAepU,OAAS,EAAK0H,KAAKvI,OAAOgV,aAAaC,eAC/E1M,KAAKvI,OAAOoG,SAGhB,GAFAc,EAAQyN,cAAsD,kBAAxCpM,KAAKvI,OAAOC,WAAsB,aAA0BF,EAAawI,KAAKvI,QAChGuI,KAAKvI,OAAOiF,wBAA0BiC,GACrClG,oBAAkB2U,GACnB,IAAK,IAAIhV,EAAI,EAAGA,EAAIuG,EAAKrG,OAAQF,IAC7B,GAAIgV,EAAU,CACV,GAA8B,UAA1BzO,EAAKvG,GAAGqT,cACR,SAEJ9M,EAAKvG,GAAGqT,cAAgB,QACxBzL,KAAKuM,oBAAoB5N,EAAKvG,GAAIuG,EAAKvG,GAAGqT,oBAGlCzL,KAAKsI,cAAc5J,QAAQC,EAAKvG,KAC3B,IACTuG,EAAKvG,GAAGqT,cAAgB,UACxBzL,KAAKuM,oBAAoB5N,EAAKvG,GAAIuG,EAAKvG,GAAGqT,eACtCzL,KAAKvI,OAAO+R,oBACZxJ,KAAKwM,sBAAsB7N,EAAKvG,MAMnC,IAAbgV,GAAsBpN,KAAKvI,OAAO4V,uBAClCrN,KAAKsI,iBACLtI,KAAKoG,mBACLzH,EAAKb,OAAO,SAAUwP,GAClBA,EAAI7B,cAAgB,UACpBnG,EAAMiH,oBAAoBe,EAAKA,EAAI7B,kBAG3CnT,EAAS0H,KAAKsI,cAAchQ,OAC5B,IAAIoT,EAAW1L,KAAKvI,OAAO8S,mBAAmB5D,iBAAiB,YAAY,GACvErO,EAAS,GAAKqG,EAAKrG,OAAS,EACxBA,IAAWqG,EAAKrG,QAAW8U,GAK3BzB,eAAaD,IAAY,WACzBA,EAASlF,UAAUyE,IAAI,aALvBU,eAAaD,IAAY,YACzBA,EAASlF,UAAUyE,IAAI,WAQ3BU,eAAaD,IAAY,UAAW,YAG5CrD,EAAUpH,UAAUsL,oBAAsB,SAAUW,EAAevD,EAAY7L,GAC3E,IAGIyP,EAIA7B,EAPAjS,EAASuG,KAAKvI,OAAOiF,wBAAwBoB,OAAO,SAAUC,GAC9D,OAAOA,EAAEhE,WAAamT,EAAcnT,WAIpCyT,EAAcxN,KAAKvI,OAAOiF,wBAAwBgC,QAAQjF,EAAO,IACjEgU,EAAiB3T,EAAckG,KAAKvI,OAAQyV,EAAcnT,UAE9D,GAAIyT,GAAe,EAAG,CAClB,IAAIE,EAAK1N,KAAKvI,OAAOsH,UAAUyO,GAC3BG,OAAY,GACZ3N,KAAKvI,OAAOyH,YAAcc,KAAKvI,OAAO0H,sBACtCwO,EAAY3N,KAAKvI,OAAOmW,qBAAqBJ,IAEjD9B,EAAWgC,EAAG/G,iBAAiB,YAAY,GAAK+G,EAAG/G,iBAAiB,YAAY,GAC1EgH,EAAUhH,iBAAiB,YAAY,GACxClO,oBAAkBiT,IACnBC,eAAaD,IAAY,UAAW,SAAU,cAStD,GANA6B,EAAiBnB,cAAsD,kBAAxCpM,KAAKvI,OAAOC,WAAsB,YAC7D+B,EAAO,GAAKgU,EACZhV,oBAAkB8U,KAClBA,EAAgBL,GAEpBK,EAAc9B,cAAgB9B,EACX,UAAfA,GAA0BlR,oBAAkByU,EAAcL,eACrC,IAAjBW,IAAqE,IAA/CxN,KAAKoG,gBAAgB1H,QAAQ8O,IACnDxN,KAAKoG,gBAAgB7M,KAAKiU,IAEqB,IAA/CxN,KAAKsI,cAAc5J,QAAQ6O,KAA2C,IAAjBC,IACnD/U,oBAAkBuH,KAAKvI,OAAOgV,eAAiBzM,KAAKvI,OAAOgV,aAAaC,eAAepU,OAAS,GAClG0H,KAAKsI,cAAc/O,KAAKgU,IAEuB,IAA/CvN,KAAKsI,cAAc5J,QAAQ6O,IAA2B9U,oBAAkBuH,KAAKvI,OAAOgV,eACjC,IAAnDzM,KAAKvI,OAAOgV,aAAaC,eAAepU,QACxC0H,KAAKsI,cAAc/O,KAAKgU,IAEuB,IAA/CvN,KAAKsI,cAAc5J,QAAQ6O,IAAyB9U,oBAAkBuH,KAAKvI,OAAOgV,eAClFzM,KAAKsI,cAAc/O,KAAKgU,QAG3B,IAAoB,YAAf5D,GAA2C,kBAAfA,IAAmClR,oBAAkByU,EAAcL,cAAe,CACpH,IAAI5R,EAAQ+E,KAAKsI,cAAc5J,QAAQ6O,GAIvC,IAHe,IAAXtS,GACA+E,KAAKsI,cAAc9K,OAAOvC,EAAO,IAEc,IAA/C+E,KAAKoG,gBAAgB1H,QAAQ8O,GAAqB,CAClD,IAAIK,EAAe7N,KAAKoG,gBAAgB1H,QAAQ8O,GAChDxN,KAAKoG,gBAAgB5I,OAAOqQ,EAAc,IAGlD,IAAIC,EAA+B,kBAAfnE,EAAiC,SAAW,KAAOA,EACnE6D,GAAe,IACV/U,oBAAkBiT,IACnBA,EAASlF,UAAUyE,IAAI6C,KAInCzF,EAAUpH,UAAU0H,kBAAoB,SAAUvB,GAC9C,IAEIe,EACA4F,EAHAzI,EAAQtF,KACRH,EAAcuH,EAAKvH,YAGvB,GAAI1H,EAAiB6H,KAAKvI,SAClBuI,KAAKvI,OAAO+R,mBACZ,GAAqB,YAAhB3J,GAA6C,WAAhBA,EAA2B,CACzD,IAAIqG,EAAOlG,KAAKvI,OAAOiB,KAAKqG,UAE5BgP,GADA5F,EAAYnI,KAAKvI,OAAOiF,yBACApE,OACxB0H,KAAKoG,mBACL,IAAK,IAAIhO,EAAI,EAAGA,EAAI2V,EAAa3V,IACxB8N,EAAK9N,GAAGoO,UAAUC,SAAS,iBAC5BzG,KAAKuM,oBAAoBpE,EAAU/P,GAAI+P,EAAU/P,GAAGqT,eAAe,QAI1E,GAAoB,WAAhB5L,GAA4C,QAAhBuH,EAAKvL,OAAkB,CACxD,IAAImS,KACgB,WAAhBnO,EACAmO,EAAc5G,EAAKzI,KAGnBqP,EAAYzU,KAAK6N,EAAKzI,MAE1B,IAASvG,EAAI,EAAGA,EAAI4V,EAAY1V,OAAQF,IAAK,CACzC,GAAoB,WAAhByH,EAA0B,CAC1B,IAAI5E,EAAQ+E,KAAKvI,OAAOoG,SAASa,QAAQsP,EAAY5V,IACjDyV,EAAe7N,KAAKoG,gBAAgB1H,QAAQzD,GAChD+E,KAAKoG,gBAAgB5I,OAAOqQ,EAAc,GAC1C7N,KAAKuM,oBAAoByB,EAAY5V,GAAI,WAExCK,oBAAkBuV,EAAY5V,GAAGyB,aAClCmG,KAAKwM,sBAAsBwB,EAAY5V,GAAGyB,iBAIxB,QAArBuN,EAAKvH,aAAyBG,KAAKvI,OAAO+R,mBAC/CpC,EAAKzI,KAAK8M,cAAgB,WAEL,cAAhB5L,GAA+C,cAAhBA,GAA+C,YAAhBA,IAC/DrI,EAAawI,KAAKvI,WACtBuI,KAAKsI,iBACLtI,KAAKoG,oBACL+B,GAAc1P,oBAAkBuH,KAAKvI,OAAOgV,eAAiBzM,KAAKvI,OAAOgV,aAAaC,eAAepU,OAAS,EAC1G0H,KAAKvI,OAAOiF,wBAA0BsD,KAAKvI,OAAOoG,UAC5CoQ,QAAQ,SAAUxU,GACpBA,EAAOW,gBACPkL,EAAMkH,sBAAsB/S,GAG5B6L,EAAMiH,oBAAoB9S,EAAQA,EAAOgS,iBAGjDzL,KAAK0J,oBAKrBrB,EAAUpH,UAAUiN,kBAAoB,WACpC,OAAOlO,KAAKsI,eAEhBD,EAAUpH,UAAUkN,qBAAuB,WACvC,OAAOnO,KAAKoG,iBAETiC,KCnbP+F,GAAuB,WAIvB,SAASA,EAAM3W,GACXuI,KAAKvI,OAASA,EACd4W,OAAKC,OAAOC,SACZvO,KAAKuI,mBAqCT,OA/BA6F,EAAMnN,UAAUgH,cAAgB,WAC5B,MAAO,SAKXmG,EAAMnN,UAAUsH,iBAAmB,WAC/BvI,KAAKvI,OAAOiB,KAAK8P,GAAGgG,EAAsBxO,KAAKyO,cAAezO,OAElEoO,EAAMnN,UAAU4H,oBAAsB,WAClC7I,KAAKvI,OAAOiB,KAAKqQ,IAAIyF,EAAsBxO,KAAKyO,gBAEpDL,EAAMnN,UAAUwN,cAAgB,SAAUC,GACtC,IAAIhW,EAAOY,YAAU,YAAaoV,GAC9BC,EAAcrV,YAAU,UAAWoV,GACvChW,EAAK6P,iBAAiBqG,EAAsB5O,KAAKvI,OAAOiB,KAAK6J,eAC7D7J,EAAK6P,iBAAiBsG,EAAqB7O,KAAKvI,OAAOiB,KAAK4J,cAC5D5J,EAAK6P,iBAAiBuG,EAAwB9O,KAAKvI,OAAOiB,KAAK8J,iBAC/DuM,YAAUJ,GAAc,eAE5BP,EAAMnN,UAAU+N,MAAQ,WACpBhP,KAAKvI,OAAOiB,KAAKsW,SAOrBZ,EAAMnN,UAAUiH,QAAU,WACtBlI,KAAK6I,uBAEFuF,KCnDP3N,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBtH,OAAOyH,iBAChBC,wBAA2B7D,OAAS,SAAU0D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI5C,KAAK4C,EAAOA,EAAEvD,eAAeW,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaxH,OAAO8H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQzI,EAAK0I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUlJ,OAAQmJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOlI,OAAOsI,yBAAyBL,EAAQzI,GAAO0I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQzI,EAAK0I,QACpH,IAAK,IAAIlJ,EAAIgJ,EAAW9I,OAAS,EAAGF,GAAK,EAAGA,KAASuI,EAAIS,EAAWhJ,MAAIqJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQzI,EAAK6I,GAAKd,EAAEU,EAAQzI,KAAS6I,GAChJ,OAAOF,EAAI,GAAKE,GAAKrI,OAAOyI,eAAeR,EAAQzI,EAAK6I,GAAIA,GAM5DwN,GAAgC,SAAUlN,GAE1C,SAASkN,IACL,OAAkB,OAAXlN,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAiB/D,OAnBAS,GAAUwO,EAAgBlN,GAI1BZ,IACIc,cACDgN,EAAehO,UAAW,cAAU,GACvCE,IACIc,YAAS,IACVgN,EAAehO,UAAW,kBAAc,GAC3CE,IACIc,WAAS,aACVgN,EAAehO,UAAW,gBAAY,GACzCE,IACIc,cACDgN,EAAehO,UAAW,WAAO,GACpCE,IACIc,cACDgN,EAAehO,UAAW,qBAAiB,GACvCgO,GACT/M,iBC5CEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBtH,OAAOyH,iBAChBC,wBAA2B7D,OAAS,SAAU0D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI5C,KAAK4C,EAAOA,EAAEvD,eAAeW,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaxH,OAAO8H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQzI,EAAK0I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUlJ,OAAQmJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOlI,OAAOsI,yBAAyBL,EAAQzI,GAAO0I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQzI,EAAK0I,QACpH,IAAK,IAAIlJ,EAAIgJ,EAAW9I,OAAS,EAAGF,GAAK,EAAGA,KAASuI,EAAIS,EAAWhJ,MAAIqJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQzI,EAAK6I,GAAKd,EAAEU,EAAQzI,KAAS6I,GAChJ,OAAOF,EAAI,GAAKE,GAAKrI,OAAOyI,eAAeR,EAAQzI,EAAK6I,GAAIA,GAM5DyN,GAAmC,SAAUnN,GAE7C,SAASmN,IACL,OAAkB,OAAXnN,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAoB/D,OAtBAS,GAAUyO,EAAmBnN,GAI7BZ,IACIc,WAAS,QACViN,EAAkBjO,UAAW,YAAQ,GACxCE,IACIc,WAAS,SACViN,EAAkBjO,UAAW,yBAAqB,GACrDE,IACIc,WAAS,WACViN,EAAkBjO,UAAW,YAAQ,GACxCE,IACIc,YAAS,IACViN,EAAkBjO,UAAW,wBAAoB,GACpDE,IACIc,WAAS,YACViN,EAAkBjO,UAAW,oBAAgB,GAChDE,IACIc,YAAS,IACViN,EAAkBjO,UAAW,oBAAgB,GACzCiO,GACThN,iBCvCEiN,GAAwB,WAIxB,SAASA,EAAO1X,GACZuI,KAAKvI,OAASA,EACduI,KAAKoP,eAAiB,KACtBpP,KAAKvI,OAAOiB,KAAK8P,GAAG,kBAAmBxI,KAAKqP,qBAAsBrP,MAmMtE,OA9LAmP,EAAOlO,UAAUqO,YAAc,SAAUlI,GACrC,GAAKA,EAAKzI,KAAV,CAGA,IAAIA,EAAOyI,EAAKzI,KACZf,EAAae,EAAK9E,WAEtB,GAAKpB,oBAAkBkG,EAAK9E,aAAgBrB,EAAuBwH,KAAKvI,SACjEuI,KAAKvI,OAAO8X,aAA2D,SAA1CvP,KAAKvI,OAAO+X,aAAaC,gBACpDjY,EAAawI,KAAKvI,SAAY8C,EAAUyF,KAAKvI,UAUzC2P,EAAKvI,IAAI2L,aAAa,qBAV8B,CACrD7L,EAAK9E,WAAWoB,OACP+E,KAAKvI,OAAOuC,kBAAoBvB,oBAAkBmF,EAAWoC,KAAKvI,OAAOwC,sBACtF2D,EAAWoC,KAAKvI,OAAOwC,sBAAwB+F,KAAKvI,OAAOiY,qBAC1DlW,EAAgBwG,KAAKvI,OAAQ2P,EAAKzI,KAAMqB,KAAKvI,OAAOiB,KAAKgE,4BAE1D0K,EAAKvI,IAAIqM,MAAMyE,QAAU,QAMjC,GAAInY,EAAawI,KAAKvI,UAAY8C,EAAUyF,KAAKvI,QAAS,CACtD,IAAImY,EAAU5P,KAAKvI,OACfoY,EAAY7P,KAAKvI,OAAOiF,wBAAwBoB,OAAO,SAAUwP,GACjE,OAAOwC,WAASF,EAAQrS,UAAW+P,KAASwC,WAASF,EAAQtS,gBAAiBqB,KAElF,GAAIkR,EAAUvX,OAAS,EAAG,CACtB,IAAIqX,EAAUE,EAAU,GAAG3V,SAAW,YAAc,OACpDkN,EAAKvI,IAAI2M,aAAa,QAAS,YAAcmE,EAAU,MAI9CrW,YAAU,eAAgB8N,EAAKzI,OAE5CoQ,YAAU3H,EAAKvI,KAAM,gBAErBuI,EAAKvI,IAAIsK,cAAc,qBACvB/B,EAAKvI,IAAI2M,aAAa,gBAAiB,QAElCpE,EAAKvI,IAAIsK,cAAc,wBAC5B/B,EAAKvI,IAAI2M,aAAa,gBAAiB,SAEvCxL,KAAKvI,OAAOiY,mBAAqB1P,KAAKvI,OAAOuC,gBACxCvB,oBAAkBkG,EAAK9E,cACxBuN,EAAKvI,IAAIqM,MAAMyE,QAAU,SAGjC3P,KAAKvI,OAAO6P,QAAQuH,EAAqBzH,KAK7C+H,EAAOlO,UAAU3B,WAAa,SAAU8H,GACpC,GAAKA,EAAKzI,KAAV,CAGA,IAEI1D,EAIA8U,EANArX,EAAOsH,KAAKvI,OAAOiB,KACnBiG,EAAOyI,EAAKzI,KAGZqR,EADcvX,oBAAkBkG,EAAKsR,aACjBtR,EAAKzD,MAAQyD,EAAKsR,YACtCC,EAAkB,EAElBvQ,EAASK,KAAKvI,OAAO0Y,iBAAiB/I,EAAKzH,OAAOyQ,OAClDC,EAAa1R,EAAKkO,aAOtB,GAFI5R,EAJCxC,oBAAkBkG,EAAK9E,YAIhB8E,EAAK1D,MAHL0D,EAAK9E,WAAWoB,MAKxBvC,EAAK4X,oBAAoBlJ,EAAKzH,OAAO0K,OAASrK,KAAKvI,OAAOgI,kBACjC,QAArB2H,EAAKvH,aAA8C,WAArBuH,EAAKvH,aAA4BpH,oBAAkB2O,EAAK7H,KAAK4J,cAAc,iBAAkB,CAM/H,IAAK,IALDyC,EAAYjB,gBAAc,OAASC,UAAW,2BAC9C2F,EAAkB5F,gBAAc,QAChCC,UAAW,iBACX4F,OAAQ,uCAEHC,EAAI,EAAGA,EAAIT,EAAKS,IACrBP,GAAmB,GACnBtE,EAAUK,YAAYsE,EAAgBlF,aAE1C,IAAIqF,EAAgBjY,oBAAkBkG,EAAKgS,yBACNhS,EAAKvE,gBAApCuE,EAAKgS,wBAIX,GAHID,IAAiBjY,oBAAkBkG,EAAKtE,gBACxCqW,IAA8C,IAA7B/R,EAAKtE,aAAa/B,SAEnCoY,EAAc,CACd3B,YAAU3H,EAAK7H,MAAO,iBACtB,IAAIqR,EAAajG,gBAAc,QAAUC,UAAW,YAChDiG,OAAS,EAETA,EADA7Q,KAAKvI,OAAOuC,cACH2E,EAAKzE,WACTzB,oBAAkBkG,EAAKqB,KAAKvI,OAAOwC,sBAAwB0E,EAAKqB,KAAKvI,OAAOwC,uBAC5E+F,KAAKvI,OAAOiY,qBAGL/Q,EAAKzE,WAAaV,EAAgBwG,KAAKvI,OAAQkH,EAAMqB,KAAKvI,OAAOiB,KAAKgE,0BAEtF,IAAIyG,GAAY,EACX1K,oBAAkBkG,EAAK9E,aAAiBpB,oBAAkBkG,EAAKqB,KAAKvI,OAAOwC,uBACzE0E,EAAKqB,KAAKvI,OAAOwC,qBACf+F,KAAKvI,OAAO8X,aAA2D,SAA1CvP,KAAKvI,OAAO+X,aAAaC,eAC3DtM,GAAa3J,EAAgBwG,KAAKvI,OAAQ2P,EAAKzI,KAAMqB,KAAKvI,OAAOiB,KAAKgE,0BAE1EqS,YAAU6B,GAAcC,GAAU1N,EAAa,mBAAqB,sBACpE+M,GAAmB,GACnBtE,EAAUK,YAAY2E,GACtBL,EAAgBrF,MAAMC,MAAQ,MAC9B+E,GAAmB,EACnBtE,EAAUK,YAAYsE,EAAgBlF,kBAEjC2E,IAAQA,IAAQrR,EAAKzD,SAE1BgV,GAAmB,GACnBtE,EAAUK,YAAYsE,EAAgBlF,aACtCO,EAAUK,YAAYsE,EAAgBlF,cAM1C0E,EAAcpF,gBAAc,QAAUC,UAAW,eAC7C5K,KAAKvI,OAAOqZ,gBACZf,EAAY7E,MAAMC,MAAQ,eAAiB+E,EAAkB,OAEjEnB,YAAU3H,EAAK7H,MAAO,iBAAmBtE,EAAQ,QAAU0D,EAAKzD,OAChE8E,KAAK+Q,eAAe3J,EAAM2I,EAAanE,GACvCA,EAAUK,YAAY8D,GACtB3I,EAAK7H,KAAK0M,YAAYL,GAU1B,GARI5L,KAAKvI,OAAOiI,cAAgBM,KAAKvI,OAAOgI,iBACxC/G,EAAK4X,oBAAoBlJ,EAAKzH,OAAO0K,OAASrK,KAAKvI,OAAOiI,cAAgB,EAC1EqP,YAAU3H,EAAK7H,MAAO,iBAAmBtE,EAAQ,QAAU0D,EAAKzD,OAE3D8E,KAAKvI,OAAOiI,eAAiBM,KAAKvI,OAAOgI,iBAC9C/G,EAAK4X,oBAAoBlJ,EAAKzH,OAAO0K,OAASrK,KAAKvI,OAAOiI,cAAgB,GAC1EqP,YAAU3H,EAAK7H,MAAO,iBAAmBtE,EAAQ,QAAU0D,EAAKzD,QAE/DzC,oBAAkBkH,IAAWA,EAAOpH,eACrCyH,KAAKvI,OAAOuZ,OAAO,iBAAkB5J,GACjCpH,KAAKvI,OAAOqZ,eAAe,CAC3B,IAAIG,EAAkB7J,EAAK7H,KAAKoH,iBAAiB,YAAY,GAE7DuJ,GADYgB,SAASD,EAAgB/F,MAAMC,MAAO,IAElD+E,GAAmB,IAEfH,EADArX,EAAK4X,oBAAoBlJ,EAAKzH,OAAO0K,OAASrK,KAAKvI,OAAOgI,gBAC5C2H,EAAK7H,KAAK4J,cAAc,eAGxB/B,EAAK7H,KAAK4J,cAAc,oBAE9B+B,MAAMC,MAAQ,eAAiB+E,EAAkB,MAGrE,GAAIG,EAAY,CACZtB,YAAU3H,EAAK7H,MAAO,iBACtB,IAAI4R,EAAc7X,YAAU8N,EAAKzH,OAAOyQ,MAAOhJ,EAAKzI,MACV,MAA1CyI,EAAK7H,KAAK4J,cAAc,eACpB/B,EAAK7H,KAAK4J,cAAc,eAAe4C,UAAYoF,EAAc/J,EAAK7H,KAAKwM,UAAYoF,EAE3F1Y,oBAAkBuH,KAAKvI,OAAO2Z,cAC9BpR,KAAKvI,OAAO6P,QAAQsH,EAAsBxH,KAGlD+H,EAAOlO,UAAU8P,eAAiB,SAAU3J,EAAM2I,EAAanE,GAC3D,IAAIyF,EAAwD,MAA1CjK,EAAK7H,KAAK4J,cAAc,eACtC/B,EAAK7H,KAAK4J,cAAc,eAAe4C,UAAY3E,EAAK7H,KAAKwM,UACjE,GAAsC,iBAA1B3E,EAAKzH,OAAe,UAAkBK,KAAKoP,eACnDkC,iBAAevB,EAAa/P,KAAKoP,gBACjCpP,KAAKoP,eAAiB,KACtBhI,EAAK7H,KAAKwM,UAAY,QAErB,GAAI3E,EAAK7H,KAAKiH,UAAUC,SAAS,kBAElC,IAAK,IADDtN,EAAMiO,EAAK7H,KAAKgS,SAASjZ,OAChB,EAAOa,EAAKA,EAAMiO,EAAK7H,KAAKgS,SAASjZ,OAC9CyX,EAAY9D,YAAY7E,EAAK7H,KAAKgS,SADzB,SAKbxB,EAAYhE,UAAYsF,EACxBjK,EAAK7H,KAAKwM,UAAY,IAG9BoD,EAAOlO,UAAUoO,qBAAuB,SAAUjI,GAC9CpH,KAAKoP,eAAiBhI,EAAKoK,UAE/BrC,EAAOlO,UAAUiH,QAAU,WACvBlI,KAAKvI,OAAOiB,KAAKqQ,IAAI,kBAAmB/I,KAAKqP,uBAE1CF,KCxMPsC,GAAkC,WAClC,SAASA,EAAiB/Y,GACtBsH,KAAK0R,aAAe,eACpB1R,KAAKvI,OAASiB,EACdsH,KAAK2R,eACL3R,KAAK4R,WACL5R,KAAK6R,iBACL7R,KAAK8R,aAAe,EACpB9R,KAAK+R,cACL/R,KAAKgS,cAAe,EACpBhS,KAAKuI,mBACLvI,KAAKiS,eACLjS,KAAKzE,iBAAmB9C,oBAAkBuH,KAAKvI,OAAO6F,iBA6gB1D,OAxgBAmU,EAAiBxQ,UAAUsH,iBAAmB,WAC1CvI,KAAKvI,OAAO+Q,GAAG,oBAAqBxI,KAAKkS,uBAAwBlS,MACjEA,KAAKvI,OAAOiB,KAAK8P,GAAG,gBAAiBxI,KAAKmS,aAAcnS,MACxDA,KAAKvI,OAAO+Q,GAAG,eAAgBxI,KAAKoS,WAAYpS,MAChDA,KAAKvI,OAAO+Q,GAAG6J,EAAqBrS,KAAKsS,qBAAsBtS,MAC/DA,KAAKvI,OAAO+Q,GAAG,gBAAiBxI,KAAKuS,cAAevS,OAKxDyR,EAAiBxQ,UAAU4H,oBAAsB,WACzC7I,KAAKvI,OAAOqR,cAGhB9I,KAAKvI,OAAOsR,IAAIsJ,EAAqBrS,KAAKsS,sBAC1CtS,KAAKvI,OAAOsR,IAAI,oBAAqB/I,KAAKkS,wBAC1ClS,KAAKvI,OAAOsR,IAAI,eAAgB/I,KAAKoS,YACrCpS,KAAKvI,OAAOsR,IAAI,gBAAiB/I,KAAKuS,eACtCvS,KAAKvI,OAAOiB,KAAKqQ,IAAI,gBAAiB/I,KAAKmS,gBAO/CV,EAAiBxQ,UAAUiH,QAAU,WACjClI,KAAK6I,uBAGT4I,EAAiBxQ,UAAUuR,SAAW,WAClC,OAAMxS,KAAKvI,OAAOC,sBAAsBC,eAW5C8Z,EAAiBxQ,UAAUwR,kBAAoB,SAAU9T,GACrD,IAAI2G,EAAQtF,KACZA,KAAKvI,OAAOoG,SAAyC,IAA7BzE,OAAOC,KAAKsF,GAAMrG,QAAkB0H,KAAKvI,OAAOC,sBAAsBC,iBAC1FqI,KAAKvI,OAAOC,WAChBsI,KAAKvI,OAAOmG,cAEZ,GAAKpG,EAAawI,KAAKvI,UAAY8C,EAAUyF,KAAKvI,SAAYkH,aAAgBhH,iBAAiBgH,aAAgB1B,OAAQ,CACnH,IAAIzC,EAAKwF,KAAKvI,OAAOC,WACrB,GAAIsI,KAAKvI,OAAO6F,gBAAiB,CAC7B0C,KAAKvI,OAAOib,MAAQja,oBAAkBuH,KAAKvI,OAAOib,OAC9C,IAAIC,QAAU3S,KAAKvI,OAAOib,MAC1B1S,KAAKvI,OAAO6F,iBACR0C,KAAKvI,OAAOuC,gBACZgG,KAAKvI,OAAOib,MAAME,MAAM5S,KAAKvI,OAAO6F,gBAAiB,QAAS,MAC9D0C,KAAKvI,OAAOib,MAAMG,UAAU,YAAa7S,KAAKvI,OAAO8F,YAI7D,IAAKyC,KAAKvI,OAAOqb,kBAA6D,kBAAxC9S,KAAKvI,OAAOC,WAAsB,aAA0BsI,KAAKvI,OAAmB,gBAAI,CAC1H,IAAIsb,EAAM/S,KAAKvI,OAAOib,MAAMM,QAC5BD,EAAIE,YACJF,EAAMA,EAAIpL,QAAQ3H,KAAKvI,OAAO6F,mBAC1BpF,iBAAkB,EACtBsC,EAAG0Y,aAAaH,GAAKI,KAAK,SAAUpV,GAChCuH,EAAMqM,YAAcyB,WAASC,SAAStV,EAAEuV,OAAQhO,EAAM7N,OAAO6F,iBAAiB,GAIlE,IAHFhE,YAAU,sBAAuBgM,EAAM7N,QAAQqG,OAAO,SAAUC,GACtE,MAAoC,OAA7BA,EAAEwV,YAAYC,aACtBlb,SAECmb,WAAS,+BAA+B,EAAMnO,EAAM7N,QAC/CgB,oBAAkB6M,EAAMoO,mBACzBD,WAAS,UAAU,EAAOnO,EAAMoO,iBAChC5D,WAAS,oBAAqBxK,EAAM7N,QAAQkc,mBAAmBrO,EAAMoO,iBACrEpO,EAAMoO,gBAAkB,MAE5BpO,EAAM7N,OAAOiB,KAAKkb,wBAMjC,GAAIjV,aAAgB1B,MAAO,CAC5B+C,KAAK6R,iBACL7R,KAAK4R,WACL,IAAK,IAAIxZ,EAAI,EAAGA,EAAIgB,OAAOC,KAAKsF,GAAMrG,OAAQF,IAAK,CAC/C,IAAIyb,EAAWlV,EAAKvG,GACpB4H,KAAK6R,cAActY,KAAKoD,YAAWkX,IAC9Bpb,oBAAkBob,EAAS7T,KAAKvI,OAAO8F,aACxCyC,KAAK4R,QAAQrY,KAAKsa,EAAS7T,KAAKvI,OAAO8F,YAG/C,GAAIyC,KAAKzE,gBAAiB,CAIjB,IAHDuY,KACAC,EAAc,IAAIpc,cAAYqI,KAAK6R,eAAemC,cAAa,IAAIrB,SAClEsB,MAAMjU,KAAKvI,OAAO6F,kBACvB,IAASlF,EAAI,EAAGA,EAAI2b,EAAYzb,OAAQF,IAAK,CACzC,IAAI8b,EAAYH,EAAY3b,GACxB6C,EAAQ+E,KAAK4R,QAAQlT,QAAQwV,EAAUtb,KAC3C,IAAKH,oBAAkByb,EAAUtb,MACzBqC,GAAS,EADjB,CAEQ,IAAIkN,EAAa+L,EAAe,MAChClU,KAAK6R,cAAc5W,GAAO+E,KAAKvI,OAAOgG,cAAgB0K,OAI9D2L,EAASva,KAAKyI,MAAM8R,EAAUI,EAAUC,OAE5CnU,KAAK6R,cAAgB7R,KAAKoU,oBAAoBN,GAE7C1a,OAAOC,KAAK2G,KAAK6R,eAAevZ,OAIjC0H,KAAKqU,cAAcrU,KAAK6R,eAHxB7R,KAAKvI,OAAOoG,YAKhBmC,KAAK8R,aAAe,IAiB5BL,EAAiBxQ,UAAUmT,oBAAsB,SAAUN,GAEvD,IADA,IAAIR,KACGtT,KAAK6R,cAAcvZ,OAAS,GAAKwb,EAASxb,OAAS,GAAG,CACzD,IAAI2C,EAAQ6Y,EAASpV,QAAQsB,KAAK6R,cAAc,KACjC,IAAX5W,EACA+E,KAAK6R,cAAcyC,SAGnBhB,EAAO/Z,KAAKyG,KAAK6R,cAAcyC,SAC/BR,EAAStW,OAAOvC,EAAO,IAG/B,OAAOqY,GAMX7B,EAAiBxQ,UAAUiR,uBAAyB,SAAU9K,GAC1D,IAAInO,EAAUmO,EAAKkM,OACfiB,EAAc,cACdC,EAAe,iBACnB,GAAKxU,KAAKvI,OAAOqb,iBAAoB9S,KAAK2R,YAAYrZ,QACP,kBAAxC0H,KAAKvI,OAAOC,WAAW6c,KAAqCvU,KAAKvI,OAAO+c,IAAmBxU,KAAKvI,OAAOgd,kBAK1G,GAA8C,kBAAxCzU,KAAKvI,OAAOC,WAAW6c,KAAqCvU,KAAKvI,OAAO+c,IAAmBxU,KAAKvI,OAAOgd,kBAepGhc,oBAAkBQ,IACnB+G,KAAKyS,kBAAkBxZ,QAf3B,IAAK,IAAIqU,EAAM,EAAGA,EAAMrU,EAAQX,OAAQgV,KAC/BrU,EAAQqU,GAAKtN,KAAKvI,OAAOqb,mBAAuF,IAAnE9S,KAAK2R,YAAYjT,QAAQzF,EAAQqU,GAAKtN,KAAKvI,OAAO8F,cAC5F9E,oBAAkBQ,EAAQqU,GAAKrS,SACnChC,EAAQqU,GAAKnQ,SAAWR,YAAW1D,EAAQqU,IAC3CrU,EAAQqU,GAAKvT,SAAW2a,SAAO1U,KAAKvI,OAAOkd,QAAQC,GAAK,UACxDnB,WAAS,sBAAwBxa,EAAQqU,GAAKvT,SAAUd,EAAQqU,GAAMtN,KAAKvI,QAC3EwB,EAAQqU,GAAKpS,MAAQ,EACrBjC,EAAQqU,GAAKrS,MAAQ4Z,KAAKC,KAAqB,IAAhBD,KAAKE,UACpC9b,EAAQqU,GAAKlT,iBAAkB,EAC/BnB,EAAQqU,GAAK7B,cAAgB,gBAdzCzL,KAAK0T,gBAAkBtM,EACvBqM,WAAS,UAAU,EAAMrM,GAuB7BA,EAAKkM,OAAkD,kBAAxCtT,KAAKvI,OAAOC,WAAW6c,KAAqCvU,KAAKvI,OAAO+c,KAAkB/b,oBAAkBQ,IACpH+G,KAAKvI,OAAOgd,kBAAoBzU,KAAKvI,OAAOoG,SAAW5E,EAC9D+G,KAAKvI,OAAOuZ,OAAO,gBAAiB5J,IAMxCqK,EAAiBxQ,UAAUqR,qBAAuB,SAAU0C,EAAYC,GACpE,IAAIC,EAAWlV,KAAKvI,OAAOsH,UAC3B,GAAIiB,KAAKvI,OAAO2Z,YAAa,CACzB,IAAIlL,EAAOlG,KAAKvI,OAAO0d,kBAAkBjP,KACzCgP,KAAcxO,MAAMnB,KAAKW,GAE7B,IAAI8G,EAGJ,GAAIgI,EAAW9O,KAAK5N,OAAS,EAAG,CACvB2c,IACDD,EAAWvb,OAAOS,UAAW,GAEjC,IAAK,IAAI9B,EAAI,EAAGA,EAAI4c,EAAW9O,KAAK5N,OAAQF,IAAK,CAQ7C,GAPIgU,cAAcpM,KAAKvI,OAAO2d,kBAC1BzJ,eAAaqJ,EAAW9O,KAAK9N,IAAK,sBAClC2W,YAAUiG,EAAW9O,KAAK9N,IAAK,sBAG/B4c,EAAW9O,KAAK9N,GAAG8S,MAAMyE,QAAU,YAElCvD,cAAuD,kBAAxCpM,KAAKvI,OAAOC,WAAsB,cAA0BsI,KAAKvI,OAAmB,gBACjGuI,KAAKvI,OAAOgd,kBAAmB,CAClC,IAAIY,EAAYL,EAAW9O,KAAK9N,GAAGkd,uBAAuB,sBAAsB,GAChFtI,EAAchN,KAAKvI,OAAO2Z,YAAcpR,KAAKvI,OAAOiB,KAAKgE,wBAAwBsY,EAAW9O,KAAK9N,GAAG2P,UAChG/H,KAAKvI,OAAOiB,KAAK6c,oBAAoBP,EAAW9O,KAAK9N,GAAGoS,aAAa,aAAa7L,MACjFlG,oBAAkB4c,IAAcrI,EAAY9S,WAC7C6U,YAAUsG,GAAY,oBACtB1J,eAAa0J,GAAY,uBAE7B,IAAIG,MACJA,EAAYN,EAASpX,OAAO,SAAU2D,GAClC,OAAOA,EAAE0H,cAAc,kBAAoB6D,EAAY/R,MAAQ,SAAW+R,EAAY9R,MAAQ,OAEpF5C,QAAU0U,EAAY9S,UAChC8F,KAAKsS,sBAAuB7Y,OAAQuT,EAAa9G,KAAMsP,EAAWC,UAAWT,EAAWS,YAAa,GAG7G,IAAIC,EAAcV,EAAW9O,KAAK9N,GAAG+Q,cAAc,wBAC9C1Q,oBAAkBid,IACnB1V,KAAKvI,OAAOiB,KAAKid,gBAAgB9E,OAAO6E,SAKhD1V,KAAK4V,sBAAuBnc,OAAQub,EAAWvb,OAAQyM,KAAM8O,EAAW9O,KAAMuP,UAAWT,EAAWS,aAG5GhE,EAAiBxQ,UAAU2U,qBAAuB,SAAUZ,EAAYC,GACpE,IAAI3P,EAAQtF,KACRoH,GAASvI,IAAKmW,EAAWS,UAAW9W,KAAMqW,EAAWvb,QACrDe,EAAKwF,KAAKvI,OAAOC,WACjBqb,EAAM/S,KAAKvI,OAAOiB,KAAKmd,gBAAgBC,gBACvCC,EAAchD,EAAIE,QAAQnV,OAAO,SAAUC,GAAK,MAAgB,WAATA,EAAEiY,IAA4B,YAATjY,EAAEiY,KAClFjD,EAAIE,QAAU8C,EACdhD,EAAI7a,iBAAkB,EACtB6a,EAAIH,MAAM5S,KAAKvI,OAAO6F,gBAAiB,QAAS0X,EAAWvb,OAAOuG,KAAKvI,OAAO8F,YAC9E0Y,cAAYjW,KAAKvI,OAAOkd,SACxBna,EAAG0Y,aAAaH,GAAKI,KAAK,SAAUpV,GAChC,IAAI7E,EAAQoM,EAAM7N,OAAOiB,KAAKwd,gBAC1BC,EAAMjd,EAAMwF,QAAQsW,EAAWvb,QAC/B2c,EAAY9c,YAAU,mBAAoByE,GAC1CuV,EAASvV,EAAEuV,OACf0B,EAAWvb,OAAOY,aAAeiZ,EACjC,IAAK,IAAI7R,EAAI,EAAGA,EAAI6R,EAAOhb,OAAQmJ,IAAK,CACpC6R,EAAO7R,GAAGtE,SAAWR,YAAW2W,EAAO7R,IACvC6R,EAAO7R,GAAGvG,MAAQ8Z,EAAWvb,OAAOyB,MAAQ,EAC5CoY,EAAO7R,GAAGxG,MAAQ4Z,KAAKC,KAAqB,IAAhBD,KAAKE,UACjC,IAAInX,EAAajB,YAAWqY,EAAWvb,eAChCmE,EAAWvD,aAClBiZ,EAAO7R,GAAG5H,WAAa+D,EACvB0V,EAAO7R,GAAGhD,eAAiBuW,EAAWvb,OAAOM,SAC7CuZ,EAAO7R,GAAG1H,SAAW2a,SAAOpP,EAAM7N,OAAOkd,QAAQC,GAAK,UACtDnB,WAAS,sBAAwBH,EAAO7R,GAAG1H,SAAUuZ,EAAO7R,GAAI6D,EAAM7N,SAEjE6b,EAAO7R,GAAG6D,EAAM7N,OAAOqb,mBAAsF,IAAlExN,EAAMqM,YAAYjT,QAAQ4U,EAAO7R,GAAG6D,EAAM7N,OAAO8F,aACxF6Y,IAAcA,EAAU3U,KAC7B6R,EAAO7R,GAAGrH,iBAAkB,EAC5BkZ,EAAO7R,GAAGvH,UAAW,GAEzBhB,EAAMsE,OAAO2Y,EAAM1U,EAAI,EAAG,EAAG6R,EAAO7R,IAMxC,GAJAgS,WAAS,SAAUva,EAAO6E,GAC1B0V,WAAS,SAAU,sBAAuB1V,GAC1CuH,EAAM7N,OAAO6P,QAAQ+O,EAAuBtY,GAC5C6V,cAAYtO,EAAM7N,OAAOkd,SACrBrP,EAAM7N,OAAOiB,KAAK4d,WAAWhe,OAAS,IAAMgN,EAAM7N,OAAO4V,qBAAsB,CAC/E,IAAIkJ,EAAYjd,YAAU,QAASyE,GAKnC,GAHItF,oBAAkB8d,KAClBA,EAAYzG,WAAS,yBAA0BxK,EAAM7N,QAAQ+e,eAAe,IAAI7D,WAE/Ela,oBAAkB8d,GAAY,CAC/B,IAAIE,EAAeF,EAAUtD,QAAQnV,OAAO,SAAU4Y,GAAK,MAAgB,iBAATA,EAAEV,KACpEjY,EAAU,OAAIuH,EAAM7N,OAAOkf,cAAcC,sBAAsBH,EAAc1Y,EAAU,QAAG,IAGlGA,EAAE6O,MAAQtH,EAAM7N,OAAOiB,KAAK8W,aAAaqH,kBACzC,IAAIC,KACAxR,EAAM7N,OAAO4V,sBACb/H,EAAMyR,oBAAoBD,GAE9BhH,WAAS,oBAAqBxK,EAAM7N,QAAQkc,mBAAmB5V,EAAG+Y,GAClExR,EAAM7N,OAAO6P,QAAQ0P,EAAiB5P,MAG9CqK,EAAiBxQ,UAAU8V,oBAAsB,SAAUD,GACvDA,EAAYjX,YAAc,UAC1B4T,WAAS,oBAAoB,EAAMqD,GACnC,IAAIG,EAAgBnH,WAAS,qBAAsB9P,KAAKvI,QACpDyf,EAAcpH,WAAS,cAAemH,GACtCE,EAAWrH,WAAS,WAAYmH,GAChCC,EAAYE,UAAYpX,KAAKvI,OAAOiB,KAAK8W,aAAa6H,cAAgBH,EAAYI,SAASC,OAC3FvX,KAAKvI,OAAOiB,KAAK8W,aAAa6H,YAAcF,EAASI,OAG7D9F,EAAiBxQ,UAAUkR,aAAe,WACtCnS,KAAKgS,cAAe,GAExBP,EAAiBxQ,UAAUoT,cAAgB,SAAU1V,EAAM6Y,GAEvD,IAAK,IADDC,KACKrf,EAAI,EAAGe,EAAMC,OAAOC,KAAKsF,GAAMrG,OAAQF,EAAIe,EAAKf,IAAK,CAC1D,IAAIsf,EAAc/a,YAAWgC,EAAKvG,IAClCsf,EAAYva,SAAWwB,EAAKvG,GAC5B,IAAI8C,EAAQ,EAyBZ,GAxBA8E,KAAK8R,cACA4F,EAAYra,eAAe,WAC5Bqa,EAAYzc,MAAQ+E,KAAK8R,eAExBrZ,oBAAkBif,EAAY1X,KAAKvI,OAAOgG,gBAC1Cia,EAAY1X,KAAKvI,OAAOqb,kBAAoB5a,EAAgB8H,KAAKvI,WAClEigB,EAAYtd,iBAAkB,EAC1B4F,KAAKvI,OAAOiY,oBAAsBjX,oBAAkBuH,KAAKvI,OAAOiL,kBAC7DjK,oBAAkBif,EAAY1X,KAAKvI,OAAOgG,eAC7Cia,EAAYxd,UAAW,EAGvBwd,EAAYxd,WAAYzB,oBAAkBif,EAAY1X,KAAKvI,OAAOwC,sBAC5Dyd,EAAY1X,KAAKvI,OAAOwC,qBAGjCyd,EAAYra,eAAe,WAC5Bqa,EAAYzc,OAAQyc,EAAYtd,gBAAkB4F,KAAK8R,cAEvD9R,KAAKzE,iBAAmB9C,oBAAkBif,EAAY1X,KAAKvI,OAAO6F,mBAClE0C,KAAKvI,OAAOmG,WAAWrE,KAAKme,GAEhCA,EAAY3d,SAAW2a,SAAO1U,KAAKvI,OAAOkd,QAAQC,GAAK,UACvDnB,WAAS,sBAAwBiE,EAAY3d,SAAU2d,EAAa1X,KAAKvI,SACpEgB,oBAAkB+e,GAAgB,CACnC,IAAI5Z,EAAajB,YAAW6a,UACrB5Z,EAAWvD,oBACXuD,EAAWoC,KAAKvI,OAAOgG,cAC1BuC,KAAKzE,wBACEqC,EAAWT,SAAS6C,KAAKvI,OAAOgG,cAE3Cia,EAAY7d,WAAa+D,EACzB8Z,EAAYjZ,eAAiBb,EAAW7D,SACxCmB,EAAQsc,EAActc,MAAQ,EAYlC,GAVKwc,EAAYra,eAAe,WAC5Bqa,EAAYxc,MAAQA,GAExBwc,EAAYjM,cAAgB,WACxBhT,oBAAkBif,EAAY1X,KAAKvI,OAAO6F,mBAAqBoa,EAAY7d,aAC3EmG,KAAKvI,OAAOoG,SAAStE,KAAKme,GAEzB1X,KAAKzE,iBAAyC,IAAtBmc,EAAYxc,OACrC8E,KAAKvI,OAAOmG,WAAWrE,KAAKme,IAE3Bjf,oBAAkBif,EAAY1X,KAAKvI,OAAOgG,eAAiBia,EAAY1X,KAAKvI,OAAOgG,cAAcnF,QAAS,CAC3G,IAAImB,EAASuG,KAAKqU,cAAcqD,EAAY1X,KAAKvI,OAAOgG,cAAeia,GACvEA,EAAYrd,aAAeZ,EAE/Bge,EAAale,KAAKme,GAEtB,OAAOD,GAMXhG,EAAiBxQ,UAAUsR,cAAgB,SAAUnL,GACjD,IAIIuQ,EAJAC,EAAWte,YAAU,WAAY8N,GACjCyQ,EAAave,YAAU,aAAc8N,GACrC0Q,EAAaxe,YAAU,aAAc8N,GACrC2Q,EAAaze,YAAU,aAAc8N,GAErC4Q,EAAa1e,YAAU,aAAc8N,GACrCvH,EAAcvG,YAAU,cAAe8N,GACvC6Q,EAAa3e,YAAU,OAAQ8N,GAC/BvL,EAASvC,YAAU,SAAU8N,GAC7B8Q,EAAgBF,EAChBG,EAAuBnY,KAAKvI,OAAOqE,0BAA0B,GAC7Dsc,EAAY9e,YAAU,OAAQ4e,GAC5Bzf,oBAAkByf,IAAqBzf,oBAAkByf,EAAcrc,SAAsC,QAAzBqc,EAAcrc,QAC/FpD,oBAAkByf,EAAcvZ,QAAUlG,oBAAkByf,EAAcvZ,KAAKwZ,MACpFD,EAAcvZ,KAAKwZ,GAAwB/Q,EAAKkM,OAAO4E,EAAcjd,OAAOkd,GAC5EC,EAAUjb,SAASgb,GAAwB/Q,EAAKkM,OAAO4E,EAAcjd,OAAOkd,MAE1E1f,oBAAkBuf,IAAe5e,OAAOC,KAAK2e,GAAY1f,QAA2B,SAAhBuH,KACtEA,EAAcA,GAA4BmY,EAAWnY,YACrDoY,EAAaA,GAA0B3e,YAAU,OAAQ0e,GACzDnc,EAASA,GAAkBvC,YAAU,SAAU0e,GACT,UAAlChY,KAAKvI,OAAO2E,aAAaC,OACzB2D,KAAKpE,aAAeoE,KAAKvI,OAAOiB,KAAK4D,WAAWC,oBAErC,QAAXV,GAAqC,cAAhBgE,GAAkE,UAAlCG,KAAKvI,OAAO2E,aAAaC,MAC3E2D,KAAKpE,aAAaoE,KAAK0R,cAAcpZ,UACxC0H,KAAKvI,OAAOiB,KAAKwd,gBAAkB9O,EAAKkM,QAExCtT,KAAKvI,OAAO4gB,aACZrY,KAAKsY,aAAaL,EAAYpc,EAAQgE,IAU9C,IAAI0Y,GANAZ,EADAC,IAAanf,oBAAkBof,GACrBA,EAGA3f,EAAgB8H,KAAKvI,QAAUqY,WAAS,SAAU9P,KAAKvI,OAAOiB,KAAKhB,YACvEsI,KAAKvI,OAAOiB,KAAKhB,sBAEMC,cAAcggB,EAAQjgB,WAAWsE,KAAO2b,EACrE/K,EAAQ1U,EAAgB8H,KAAKvI,QAAUqY,WAAS,QAAS9P,KAAKvI,OAAOC,YACnE6gB,EAAQjgB,OACd,GAAK0H,KAAKvI,OAAOiB,KAAKI,gBAAkBkH,KAAKvI,OAAOiB,KAAKK,eAAeV,QAAQC,QAC3E0H,KAAKvI,OAAOiB,KAAKC,eAAeC,IAAIN,OAAS,EAAI,CAClD,IAAIya,EAAM,IAAIJ,QACV4D,EAAYjd,YAAU,QAAS8N,GAC/B3O,oBAAkB8d,KAClBA,EAAY,IAAI5D,QAChB4D,EAAYzG,WAAS,yBAA0B9P,KAAKvI,QAAQ+gB,YAAYjC,GACxEA,EAAYzG,WAAS,yBAA0B9P,KAAKvI,QAAQghB,YAAYlC,IAE5E,IAAImC,EAAYnC,EAAUtD,QAAQnV,OAAO,SAAU4Y,GAAK,MAAgB,YAATA,EAAEV,KAC7D2C,EAAYpC,EAAUtD,QAAQnV,OAAO,SAAU4Y,GAAK,MAAgB,aAATA,EAAEV,KACjEjD,EAAIE,QAAUyF,EAAUpe,OAAOqe,GAC/B,IAAIC,EAAe,IAAIjhB,cAAY4gB,GAASvE,aAAajB,GAIzD,GAHA/S,KAAKvI,OAAOuZ,OAAO,oBAAsBrS,KAAMia,IAC/CL,EAAUvY,KAAKiS,YAAYqB,OAC3BtT,KAAKiS,YAAYqB,OAAS,KACtBtT,KAAKvI,OAAOiB,KAAK4d,WAAWhe,OAAS,EAAG,CACxC,IAAIoa,EAAQpZ,YAAU,QAAS8N,GAI/B,GAHI3O,oBAAkB8d,KAClBA,EAAYzG,WAAS,yBAA0B9P,KAAKvI,QAAQ+e,eAAe,IAAI7D,WAE9Ela,oBAAkBia,GAAQ,CAC3B,IAAI+D,EAAe/D,EAAMO,QAAQnV,OAAO,SAAU4Y,GAAK,MAAgB,iBAATA,EAAEV,KAChEuC,EAAUvY,KAAKvI,OAAOkf,cAAcC,sBAAsBH,EAAc8B,GAAS,KAI7F,GAAIvY,KAAKvI,OAAOiB,KAAK4d,WAAWhe,QAA2D,IAAjD0H,KAAKvI,OAAOiB,KAAK8F,aAAanG,QAAQC,QACtB,IAAnD0H,KAAKvI,OAAOiB,KAAKK,eAAeV,QAAQC,SAAiB0H,KAAKvI,OAAOiB,KAAKC,eAAeC,IAAIN,OAAQ,CACpGie,EAAYjd,YAAU,QAAS8N,GAC/B3O,oBAAkB8d,KAClBA,EAAYzG,WAAS,yBAA0B9P,KAAKvI,QAAQ+e,eAAe,IAAI7D,UAE/E8D,EAAeF,EAAUtD,QAAQnV,OAAO,SAAU4Y,GAAK,MAAgB,iBAATA,EAAEV,KACpEuC,EAAUvY,KAAKvI,OAAOkf,cAAcC,sBAAsBH,EAAczW,KAAKvI,OAAOoG,UAAU,GAElG,GAAImC,KAAKvI,OAAOiB,KAAK8F,aAAanG,QAAQC,OAAS,GAAK0H,KAAKgS,aAAc,CACvEhS,KAAKgS,cAAe,EACpB,IAAIpU,OAAa,EACjBA,EAEaoC,KAAKvI,OAAOmG,WAErB8U,EAAQpZ,YAAU,QAAS8N,GAE/B,IAAK,IADDyR,EAAS,IAAIlG,QACRmG,EAAM9Y,KAAKvI,OAAOiB,KAAK8F,aAAanG,QAAQC,OAAS,EAAGwgB,GAAO,EAAGA,IAAO,CAC9E,IAAI1O,EAAMpK,KAAKvI,OAAO0Y,iBAAiBnQ,KAAKvI,OAAOiB,KAAK8F,aAAanG,QAAQygB,GAAK1I,OAC9E2I,EAAU3O,EAAI4O,eAAiBhZ,KAAKwS,WACpCpI,EAAI4O,aAAaC,KAAK7O,GACtBpK,KAAKvI,OAAOiB,KAAK8F,aAAanG,QAAQygB,GAAKI,UAC/CL,EAAOM,OAAOnZ,KAAKvI,OAAOiB,KAAK8F,aAAanG,QAAQygB,GAAK1I,MAAO2I,GAEpE,IAEIK,GAAand,aAFE,IAAItE,cAAYiG,GAAYoW,aAAa6E,GAEfD,aAAcL,EAASM,OAAQA,GAM5E,GALA7Y,KAAKvI,OAAOuZ,OAAO,aAAcoI,GACjCb,EAAUa,EAASnd,aACnB+D,KAAKiS,YAAYqB,OAAS,KAC1BtT,KAAK+R,WAAawG,EAClBvY,KAAKvI,OAAOuZ,OAAO,kBACfhR,KAAKvI,OAAOiB,KAAK4d,WAAWhe,OAAS,IAAMG,oBAAkBia,GAAQ,CAGjE+D,EADUnd,YAAU,QAAS8N,GACN6L,QAAQnV,OAAO,SAAU4Y,GAAK,MAAgB,iBAATA,EAAEV,KAClEuC,EAAUvY,KAAKvI,OAAOkf,cAAcC,sBAAsBH,EAAczW,KAAK+R,YAHhE,IAMrBnF,EAAQ1U,EAAgB8H,KAAKvI,QAAUqY,WAAS,QAAS9P,KAAKvI,OAAOC,YAC/D6gB,EAAQjgB,OACd,IAAI+gB,EAAOrZ,KAAKsZ,OAAOf,EAAS3L,EAAOgL,EAAUG,EAAYD,EAAY1Q,GACzEmR,EAAUc,EAAK/F,OACf1G,EAAQyM,EAAKzM,MACbxF,EAAKkM,OAASiF,EACdnR,EAAKwF,MAAQA,EACb5M,KAAKvI,OAAOuZ,OAAO,gBAAiB5J,IAExCqK,EAAiBxQ,UAAUqY,OAAS,SAAUf,EAAS3L,EAAOgL,EAAUG,EAAYD,EAAY1Q,IACxFpH,KAAKvI,OAAO8X,aAAiBqI,GAA2B,gBAAfE,GACpCC,GAAwC,gBAA1B/X,KAAKvI,OAAO8hB,WAM1BvZ,KAAKvI,OAAO4V,sBAA0BuK,GAA2B,gBAAfE,IACvD9X,KAAKvI,OAAOuZ,OAAOwI,GAAwBlG,OAAQiF,EAAS3L,MAAOA,EAAOoL,WAAYlI,WAAS,aAAc1I,KAC7GmR,EAAUvY,KAAKiS,YAAYqB,OAC3B1G,EAAQ5M,KAAKiS,YAAYrF,QARzB5M,KAAKvI,OAAOuZ,OAAOwI,GAAwBlG,OAAQiF,EAAS3L,MAAOA,IACnE2L,EAAUvY,KAAKiS,YAAYqB,OAC3B1G,EAAQ1U,EAAgB8H,KAAKvI,QAAUqY,WAAS,QAAS9P,KAAKvI,OAAOC,YAC/DsI,KAAKiS,YAAYrF,OAQ3B,OADc0G,OAAQiF,EAAS3L,MAAOA,IAM1C6E,EAAiBxQ,UAAUmR,WAAa,SAAUqH,GAC9CzZ,KAAKiS,YAAcwH,GAEvBhI,EAAiBxQ,UAAUqX,aAAe,SAAUL,EAAYpc,EAAQgE,GAC/C,WAAhBA,GAA4C,SAAhBA,GAC7BG,KAAKvI,OAAOuZ,OAAO0I,GAAqB1e,MAAOid,EAAYpc,OAAQA,GAAUgE,IAE7D,cAAhBA,GAAiE,UAAlCG,KAAKvI,OAAO2E,aAAaC,MACxD2D,KAAKvI,OAAOuZ,OAAO2I,QAGpBlI,MC9hBX,SAAWmI,GACPA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAmB,MAAI,IAAM,QACzCA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAwB,WAAI,IAAM,aAdlD,CAeGA,gBAAgBA,mBAMnB,SAAWC,GACPA,EAAiBA,EAA0B,QAAI,GAAK,UACpDA,EAAiBA,EAA6B,WAAI,GAAK,aACvDA,EAAiBA,EAAgC,cAAI,GAAK,gBAC1DA,EAAiBA,EAAiC,eAAI,GAAK,iBAC3DA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAA4B,UAAI,GAAK,YACtDA,EAAiBA,EAA8B,YAAI,GAAK,cACxDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAAyB,OAAI,IAAM,SAhBxD,CAiBGA,qBAAqBA,wBC3CxB,IAAIpZ,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBtH,OAAOyH,iBAChBC,wBAA2B7D,OAAS,SAAU0D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI5C,KAAK4C,EAAOA,EAAEvD,eAAeW,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaxH,OAAO8H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQzI,EAAK0I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUlJ,OAAQmJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOlI,OAAOsI,yBAAyBL,EAAQzI,GAAO0I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQzI,EAAK0I,QACpH,IAAK,IAAIlJ,EAAIgJ,EAAW9I,OAAS,EAAGF,GAAK,EAAGA,KAASuI,EAAIS,EAAWhJ,MAAIqJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQzI,EAAK6I,GAAKd,EAAEU,EAAQzI,KAAS6I,GAChJ,OAAOF,EAAI,GAAKE,GAAKrI,OAAOyI,eAAeR,EAAQzI,EAAK6I,GAAIA,GAM5DqY,GAA8B,SAAU/X,GAExC,SAAS+X,IACL,OAAkB,OAAX/X,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,OA5BAS,GAAUqZ,EAAc/X,GAIxBZ,IACIc,WAAS,KACV6X,EAAa7Y,UAAW,gBAAY,GACvCE,IACIc,WAAS,IACV6X,EAAa7Y,UAAW,iBAAa,GACxCE,IACIc,WAAS,IACV6X,EAAa7Y,UAAW,mBAAe,GAC1CE,IACIc,cACD6X,EAAa7Y,UAAW,yBAAqB,GAChDE,IACIc,YAAS,IACV6X,EAAa7Y,UAAW,yBAAqB,GAChDE,IACIc,YAAS,IACV6X,EAAa7Y,UAAW,iBAAa,GACxCE,IACIc,WAAS,OACV6X,EAAa7Y,UAAW,gBAAY,GACvCE,IACIc,WAAS,QACV6X,EAAa7Y,UAAW,oBAAgB,GACpC6Y,GACT5X,iBCrDEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBtH,OAAOyH,iBAChBC,wBAA2B7D,OAAS,SAAU0D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI5C,KAAK4C,EAAOA,EAAEvD,eAAeW,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaxH,OAAO8H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQzI,EAAK0I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUlJ,OAAQmJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOlI,OAAOsI,yBAAyBL,EAAQzI,GAAO0I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQzI,EAAK0I,QACpH,IAAK,IAAIlJ,EAAIgJ,EAAW9I,OAAS,EAAGF,GAAK,EAAGA,KAASuI,EAAIS,EAAWhJ,MAAIqJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQzI,EAAK6I,GAAKd,EAAEU,EAAQzI,KAAS6I,GAChJ,OAAOF,EAAI,GAAKE,GAAKrI,OAAOyI,eAAeR,EAAQzI,EAAK6I,GAAIA,GAQ5DsY,GAAiC,SAAUhY,GAE3C,SAASgY,IACL,IAAIzU,EAAmB,OAAXvD,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAGhE,OAFAsF,EAAM0U,KAAO,IAAIC,uBACjB3U,EAAM4U,cACC5U,EAmEX,OAxEA7E,GAAUsZ,EAAiBhY,GAU3BgY,EAAgB9Y,UAAUkZ,aAAe,SAAUC,GAC3Cpa,KAAKqa,SAAWra,KAAKqa,OAAOC,UAAYta,KAAKqa,OAAOA,UACpDra,KAAKua,SAAWva,KAAKwa,kBAAkBxa,KAAKqa,UAMpDN,EAAgB9Y,UAAUuZ,kBAAoB,SAAUH,GACpD,OAAIA,EAAOvP,KACA9K,KAAKga,KAAKS,cAAcJ,GAGxBra,KAAKga,KAAKU,gBAAgBL,IAMzCN,EAAgB9Y,UAAU0Z,aAAe,WACrC,OAAO3a,KAAKua,UAKhBR,EAAgB9Y,UAAU2Z,YAAc,SAAUC,QAC/B,IAAXA,IAAqBA,WACGC,IAAxB9a,KAAK+a,iBACL/a,KAAKka,WAAWc,eAAaC,WAAUA,WAASC,WAAclF,GAAImF,UAAQnb,KAAK+a,eAAgBF,GAC3FO,SAAU,oBAMtBrB,EAAgB9Y,UAAUoa,YAAc,SAAUvQ,GAC9C,OAAO9K,KAAKka,WAAWc,eAAaC,WAAUnQ,KAKlDiP,EAAgB9Y,UAAUqa,oBAAsB,SAAUC,GACtDvb,KAAKwb,cAAcD,GAAM,IAE7Bpa,IACIc,cACD8X,EAAgB9Y,UAAW,YAAQ,GACtCE,IACIc,cACD8X,EAAgB9Y,UAAW,sBAAkB,GAChDE,IACIc,cACD8X,EAAgB9Y,UAAW,aAAS,GACvCE,IACIc,cACD8X,EAAgB9Y,UAAW,cAAU,GACxCE,IACIc,cACD8X,EAAgB9Y,UAAW,kBAAc,GAC5CE,IACIc,cACD8X,EAAgB9Y,UAAW,uBAAmB,GAC1C8Y,GACT7X,iBAEEuZ,GAA8B,SAAU1Z,GAExC,SAAS0Z,IACL,OAAkB,OAAX1Z,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,OAVAS,GAAUgb,EAAc1Z,GAIxBZ,IACIiB,gBAAe2X,KAChB0B,EAAaxa,UAAW,eAAW,GACtCE,IACIc,YAAS,IACVwZ,EAAaxa,UAAW,wBAAoB,GACxCwa,GACTvZ,iBCjHEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBtH,OAAOyH,iBAChBC,wBAA2B7D,OAAS,SAAU0D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI5C,KAAK4C,EAAOA,EAAEvD,eAAeW,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaxH,OAAO8H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQzI,EAAK0I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUlJ,OAAQmJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOlI,OAAOsI,yBAAyBL,EAAQzI,GAAO0I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQzI,EAAK0I,QACpH,IAAK,IAAIlJ,EAAIgJ,EAAW9I,OAAS,EAAGF,GAAK,EAAGA,KAASuI,EAAIS,EAAWhJ,MAAIqJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQzI,EAAK6I,GAAKd,EAAEU,EAAQzI,KAAS6I,GAChJ,OAAOF,EAAI,GAAKE,GAAKrI,OAAOyI,eAAeR,EAAQzI,EAAK6I,GAAIA,GAM5Dia,GAA8B,SAAU3Z,GAExC,SAAS2Z,IACL,OAAkB,OAAX3Z,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAgC/D,OAlCAS,GAAUib,EAAc3Z,GAIxBZ,IACIc,YAAS,IACVyZ,EAAaza,UAAW,mBAAe,GAC1CE,IACIc,YAAS,IACVyZ,EAAaza,UAAW,oBAAgB,GAC3CE,IACIc,YAAS,IACVyZ,EAAaza,UAAW,qBAAiB,GAC5CE,IACIc,WAAS,SACVyZ,EAAaza,UAAW,YAAQ,GACnCE,IACIc,WAAS,QACVyZ,EAAaza,UAAW,sBAAkB,GAC7CE,IACIc,YAAS,IACVyZ,EAAaza,UAAW,2BAAuB,GAClDE,IACIc,YAAS,IACVyZ,EAAaza,UAAW,yBAAqB,GAChDE,IACIc,YAAS,IACVyZ,EAAaza,UAAW,+BAA2B,GACtDE,IACIc,WAAS,KACVyZ,EAAaza,UAAW,gBAAY,GACvCE,IACIc,gBACDyZ,EAAaza,UAAW,cAAU,GAC9Bya,GACTxZ,iBC3DEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBtH,OAAOyH,iBAChBC,wBAA2B7D,OAAS,SAAU0D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI5C,KAAK4C,EAAOA,EAAEvD,eAAeW,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaxH,OAAO8H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQzI,EAAK0I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUlJ,OAAQmJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOlI,OAAOsI,yBAAyBL,EAAQzI,GAAO0I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQzI,EAAK0I,QACpH,IAAK,IAAIlJ,EAAIgJ,EAAW9I,OAAS,EAAGF,GAAK,EAAGA,KAASuI,EAAIS,EAAWhJ,MAAIqJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQzI,EAAK6I,GAAKd,EAAEU,EAAQzI,KAAS6I,GAChJ,OAAOF,EAAI,GAAKE,GAAKrI,OAAOyI,eAAeR,EAAQzI,EAAK6I,GAAIA,GAM5Dka,GAAgC,SAAU5Z,GAE1C,SAAS4Z,IACL,OAAkB,OAAX5Z,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,OAVAS,GAAUkb,EAAgB5Z,GAI1BZ,IACIc,cACD0Z,EAAe1a,UAAW,aAAS,GACtCE,IACIc,cACD0Z,EAAe1a,UAAW,iBAAa,GACnC0a,GACTzZ,iBAKE0Z,GAA8B,SAAU7Z,GAExC,SAAS6Z,IACL,OAAkB,OAAX7Z,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,OAVAS,GAAUmb,EAAc7Z,GAIxBZ,IACIiB,gBAAeuZ,KAChBC,EAAa3a,UAAW,eAAW,GACtCE,IACIc,YAAS,IACV2Z,EAAa3a,UAAW,mBAAe,GACnC2a,GACT1Z,iBCpDEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBtH,OAAOyH,iBAChBC,wBAA2B7D,OAAS,SAAU0D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI5C,KAAK4C,EAAOA,EAAEvD,eAAeW,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaxH,OAAO8H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQzI,EAAK0I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUlJ,OAAQmJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOlI,OAAOsI,yBAAyBL,EAAQzI,GAAO0I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQzI,EAAK0I,QACpH,IAAK,IAAIlJ,EAAIgJ,EAAW9I,OAAS,EAAGF,GAAK,EAAGA,KAASuI,EAAIS,EAAWhJ,MAAIqJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQzI,EAAK6I,GAAKd,EAAEU,EAAQzI,KAAS6I,GAChJ,OAAOF,EAAI,GAAKE,GAAKrI,OAAOyI,eAAeR,EAAQzI,EAAK6I,GAAIA,GAuC5Doa,GAA0B,SAAU9Z,GAEpC,SAAS8Z,EAAS9b,EAAS4U,GACvB,IAAIrP,EAAQvD,EAAOwD,KAAKvF,KAAMD,EAAS4U,IAAY3U,KAUnD,OATAsF,EAAM2M,eACN3M,EAAMwW,sBACNxW,EAAMyW,4BACNzW,EAAM0W,eAAiB,iBACvB1W,EAAM2W,eAAiB,iBACvB3W,EAAMoM,aAAe,eACrBwK,EAAW5N,OAAO6N,IAClB1I,WAAS,mBAAoBnO,EAAM8W,yBAA0B9W,GAC7DA,EAAM5M,KAAO,IAAI2V,OACV/I,EAZX7E,GAAUob,EAAU9Z,GAcpBma,EAAaL,EAUbA,EAAS5a,UAAUob,YAAc,SAAUC,EAAuBC,EAElEC,EAAUC,GACN,OAAIrQ,cACApM,KAAK0c,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJzc,KAAK0c,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGZ,EAAS5a,UAAU2b,UAAY,SAAUN,EAEzCC,EAAkBC,EAAUC,GACxB,OAAIrQ,cACApM,KAAK0c,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJzc,KAAK0c,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGZ,EAAS5a,UAAU4b,UAAY,SAAUC,EAEzCP,EAAkBQ,EAAQN,GACtB,OAAIrQ,cACApM,KAAKgd,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,GACjE,MAEJzc,KAAKgd,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,IAMnFZ,EAAS5a,UAAUgH,cAAgB,WAC/B,MAAO,YAMX4T,EAAS5a,UAAUgc,UAAY,WAC3Bjd,KAAKkd,iBACLld,KAAKmd,iBACLnd,KAAKod,eACDC,MAAO,QACPC,MAAO,QACPC,OAAQ,UACRC,UAAW,aACXC,YAAa,eACbC,UAAW,SACXC,WAAY,WAEhB3d,KAAK4d,KAAO,IAAIC,OAAK,WAAY7d,KAAKod,cAAepd,KAAK8d,QACtD9d,KAAKzE,iBAAmB9C,oBAAkBuH,KAAKvC,gBAC/CuC,KAAKvC,aAAe,aAU5Boe,EAAS5a,UAAU8c,aAAe,SAAUriB,EAAYwd,EAAW8E,GAC/Dhe,KAAKie,WAAWC,WAAWxiB,EAAYwd,EAAW8E,IAMtDnC,EAAS5a,UAAUkd,aAAe,WAC1Bne,KAAKie,YACLje,KAAKie,WAAWE,gBASxBtC,EAAS5a,UAAUmd,iBAAmB,SAAUhO,GAC5CpQ,KAAKie,WAAWG,iBAAiBhO,IASrCyL,EAAS5a,UAAUod,OAAS,SAAUC,GAClCte,KAAKtH,KAAK2lB,OAAOC,IAYrBzC,EAAS5a,UAAUsd,eAAiB,SAAUC,GAC1Cxe,KAAKye,aAAaF,eAAeC,GACjCxe,KAAK0e,qBAQT7C,EAAS5a,UAAU0d,eAAiB,SAAUC,EAAWC,GACrD7e,KAAKtH,KAAKimB,eAAeC,EAAWC,IAExChD,EAAS5a,UAAUic,eAAiB,WAEhC,IACI4B,EADAhB,EAASD,OAAKC,OAElBgB,KACArL,WAASzT,KAAK8d,UAAYgB,GAC1B,IAAIC,EACJA,KACAA,EAAazlB,YAAU0G,KAAK8d,OAAQA,GACpC,IAAIkB,EACJA,KACAA,EAAiB1lB,YAAU0G,KAAKiI,gBAAiB8W,GACjDtL,WAAS,OAAQuL,EAAgB1lB,YAAU0G,KAAK8d,OAAQgB,IACxDjB,OAAKoB,KAAKH,IAQdjD,EAAS5a,UAAU+N,MAAQ,WACvBhP,KAAKkf,YAAYlQ,SAErB6M,EAAS5a,UAAUke,yBAA2B,SAAUphB,GACpD,GAAIiC,KAAKof,cACL,OAAQrhB,EAAElC,QACN,IAAK,gBACDmE,KAAKqf,YACL,MACJ,IAAK,cACDrf,KAAKsf,cACL,MACJ,IAAK,mBACD,IAEIC,EAFiBxhB,EAAEsD,OACa+H,QAAQ,cACXA,QAAQ,MACrCoW,EAAcD,EAAYpW,cAAc,qBACxB,OAAhBqW,QAAwC1E,IAAhB0E,GACxBxf,KAAKyf,sBAAsBF,EAAYpW,cAAc,sBAEzD,MACJ,IAAK,qBACD,IAEIuW,EAFe3hB,EAAEsD,OACW+H,QAAQ,cACXA,QAAQ,MACjCuW,EAAYD,EAAUvW,cAAc,uBACtB,OAAdwW,QAAoC7E,IAAd6E,GACtB3f,KAAKyf,sBAAsBC,EAAUvW,cAAc,wBAEvD,MACJ,IAAK,YACD,IAAI9H,EAAStD,EAAEsD,OAAOue,cAClBC,EAAiB7f,KAAK8f,mBAAmBze,GAC7C,GAAuB,OAAnBwe,EAAyB,CACzB,IAAI9X,EAAW8X,EAAe9X,SAC9B/H,KAAK+f,UAAUhY,GACf,IAAIiY,EAAYjiB,EAAEsD,OAAO2e,UACrBnhB,EAAMghB,EAAetO,SAASyO,GAClCjR,YAAUlQ,GAAM,aAChBkQ,YAAUlQ,GAAM,gBAGhBmB,KAAKigB,iBAET,MACJ,IAAK,UACD,IAAIC,EAAYniB,EAAEsD,OAAOue,cACrBO,EAAoBngB,KAAKogB,uBAAuBF,GACpD,GAA0B,OAAtBC,EAA4B,CAC5B,IAAIE,EAASF,EAAkBpY,SAC/B/H,KAAK+f,UAAUM,GACf,IAAIC,EAASviB,EAAEsD,OAAO2e,UAClB9Z,EAAOia,EAAkB5O,SAAS+O,GACtCvR,YAAU7I,GAAO,aACjB6I,YAAU7I,GAAO,gBAGjBlG,KAAKigB,mBAMzBpE,EAAS5a,UAAU6e,mBAAqB,SAAUK,GAC9C,IAAIvW,EAAauW,EAAkB5W,mBAKnC,OAJmB,OAAfK,IAA0E,IAAlDA,EAAWgB,UAAUlM,QAAQ,iBACxB,SAA7BkL,EAAWsB,MAAMyE,UACjB/F,EAAa5J,KAAK8f,mBAAmBlW,IAElCA,GAGXiS,EAAS5a,UAAUmf,uBAAyB,SAAUD,GAClD,IAAIvW,EAAauW,EAAkBI,uBAKnC,OAJmB,OAAf3W,IAA0E,IAAlDA,EAAWgB,UAAUlM,QAAQ,iBACxB,SAA7BkL,EAAWsB,MAAMyE,UACjB/F,EAAa5J,KAAKogB,uBAAuBxW,IAEtCA,GAEXiS,EAAS5a,UAAUkc,eAAiB,WAChCnd,KAAKod,iBACLpd,KAAKnC,YACLmC,KAAKpC,cACLoC,KAAKwgB,eACLxgB,KAAKygB,aAAc,EACnBzgB,KAAK0gB,eAAgB,EACrB1gB,KAAK2gB,YACDC,cAAe,iBACfC,YAAa,eACbC,iBAAkB,qBAClBC,mBAAoB,uBACpBC,UAAW,YACXC,QAAS,WAEbjhB,KAAKqY,cAAiBrY,KAAKtI,sBAAsBC,gBAAgBqI,KAAKtI,WAAWA,WAAWwpB,UACnFzoB,oBAAkBuH,KAAKtI,WAAW+C,QAAWuF,KAAKtI,WAAWE,mBAAmBupB,oBACzFnhB,KAAKzE,iBAAmB9C,oBAAkBuH,KAAK1C,kBAMnDue,EAAS5a,UAAUmgB,WAAa,WAC5BC,eAAapW,IAAIjL,KAAKtH,KAAKic,QAAS,QAAS3U,KAAKshB,kBAAmBthB,MACrEqhB,eAAapW,IAAIjL,KAAK2U,QAAS,WAAY3U,KAAKshB,kBAAmBthB,MACnEA,KAAKuhB,eAAiB,IAAIC,iBAAexhB,KAAK2U,SAC1C8M,UAAWzhB,KAAKmf,yBAAyBlG,KAAKjZ,MAC9C2gB,WAAY3gB,KAAK2gB,WACjBe,UAAW,YAEX1hB,KAAKof,gBACLpf,KAAK2U,QAAQgN,UAAsC,IAA3B3hB,KAAK2U,QAAQgN,SAAkB,EAAI3hB,KAAK2U,QAAQgN,WAQhF9F,EAAS5a,UAAU2gB,gBAAkB,WACjC,IAAIC,KACJ,OAAI7hB,KAAK8I,YACE+Y,GAEXA,EAAQtoB,MACJuoB,OAAQ,SAAU1a,MAAOpH,KAAMA,KAAKjH,kBAEnCN,oBAAkBuH,KAAK+hB,UACxBF,EAAQtoB,MACJuoB,OAAQ,UACR1a,MAAOpH,QAGXA,KAAKgiB,kBACLH,EAAQtoB,MACJuoB,OAAQ,cACR1a,MAAOpH,QAGXA,KAAKuP,aACLsS,EAAQtoB,MACJuoB,OAAQ,QACR1a,MAAOpH,KAAMA,KAAKwP,gBAGtBxP,KAAKI,iBACLyhB,EAAQtoB,MACJuoB,OAAQ,UACR1a,MAAOpH,QAGXA,KAAKM,cACLuhB,EAAQtoB,MACJuoB,OAAQ,OACR1a,MAAOpH,QAGXA,KAAKsW,WAAWhe,OAAS,GACzBupB,EAAQtoB,MACJuoB,OAAQ,UAAW1a,MAAOpH,QAGlC6hB,EAAQtoB,MACJuoB,OAAQ,SAAU1a,MAAOpH,QAEzBA,KAAKiiB,kBACLJ,EAAQtoB,MACJuoB,OAAQ,cAAe1a,MAAOpH,SAGlCA,KAAKN,eAAiBM,KAAKd,YAAcc,KAAKb,qBAC9C0iB,EAAQtoB,MACJuoB,OAAQ,SAAU1a,MAAOpH,QAG7BA,KAAKkiB,gBACLL,EAAQtoB,MACJuoB,OAAQ,YAAa1a,MAAOpH,QAGhCA,KAAKmiB,gBACLN,EAAQtoB,MACJuoB,OAAQ,YAAa1a,MAAOpH,QAGhCA,KAAKK,gBACLwhB,EAAQtoB,MACJuoB,OAAQ,aAAc1a,MAAOpH,QAGjCA,KAAKoiB,qBACLP,EAAQtoB,MACJuoB,OAAQ,iBACR1a,MAAOpH,SAGXA,KAAK5D,aAAaimB,aAAeriB,KAAK5D,aAAakmB,eAAiBtiB,KAAK5D,aAAa6D,eACtF4hB,EAAQtoB,MACJuoB,OAAQ,OACR1a,MAAOpH,QAGXA,KAAKuiB,gBAAgBviB,KAAK3H,UAC1BwpB,EAAQtoB,MACJuoB,OAAQ,gBACR1a,MAAOpH,QAGXA,KAAKwiB,gBACLX,EAAQtoB,MACJuoB,OAAQ,YACR1a,MAAOpH,QAGXA,KAAKqN,sBACLwU,EAAQtoB,MACJuoB,OAAQ,gBACR1a,MAAOpH,QAGR6hB,IAEXhG,EAAS5a,UAAUshB,gBAAkB,SAAUlqB,GAC3C,IAAIiN,EAAQtF,KACZ,OAAO3H,EAAQoqB,KAAK,SAAUrY,GAC1B,OAAIA,EAAI/R,QACGiN,EAAMid,gBAAgBnY,EAAI/R,YAE3B+R,EAAIsY,WAAYtY,EAAIuY,qBAOtC9G,EAAS5a,UAAU2hB,aAAe,WAC9BvB,eAAawB,OAAO7iB,KAAKtH,KAAKic,QAAS,QAAS3U,KAAKshB,oBAMzDzF,EAAS5a,UAAU6hB,OAAS,WACxB,IAAIxd,EAAQtF,KACZ+iB,iBAAgB1hB,OAAQrB,KAAK2U,SAAW3U,KAAK2K,eAC7C3K,KAAKX,aAAe,IAAI8P,GAAOnP,MAC/BA,KAAKgjB,WAAa,IAAIvR,GAAiBzR,MACvCA,KAAKkf,YAAc,IAAI9Q,GAAMpO,MAW7B,GATIA,KAAiB,iBACjBA,KAAKoV,kBAAmB,GAE5BpV,KAAKsH,QbteK,QaueVtH,KAAKijB,sBACLjjB,KAAKhG,eAAgB,EAChBvB,oBAAkBuH,KAAKtI,aACxBsI,KAAKkjB,gBAAgBljB,KAAKtI,aAEzB0U,eAAepM,KAAKoV,iBAAkB,CACvCpV,KAAKmjB,WACDnjB,KAAK2U,QAAQnO,UAAUC,SAAS,eAAiBzG,KAAKojB,gBAAgBC,WACtErjB,KAAKtH,KAAK0qB,gBAAgBC,UAAY,gBAE1CrjB,KAAKsjB,cACL,IAAIC,EAAgB5Y,gBAAc,OAASiK,GAAI5U,KAAK2U,QAAQC,GAAK,iBACjE7F,YAAU/O,KAAK2U,SAAU,cACpBlc,oBAAkBuH,KAAKwjB,SAAoC,iBAAjBxjB,KAAW,SAAgD,IAA9BA,KAAKwjB,OAAO9kB,QAAQ,OAC5FsB,KAAK2U,QAAQzJ,MAAMsY,OAASxjB,KAAKwjB,QAEhC/qB,oBAAkBuH,KAAKmL,QAAkC,iBAAhBnL,KAAU,QAA+C,IAA7BA,KAAKmL,MAAMzM,QAAQ,OACzFsB,KAAK2U,QAAQzJ,MAAMC,MAAQnL,KAAKmL,OAEpCnL,KAAK2U,QAAQ1I,YAAYsX,GACzBvjB,KAAKtH,KAAK+qB,SAASF,GACnBvjB,KAAKohB,aAETphB,KAAK0jB,iBACL,IAAIC,EAAkB,kBAClBC,EAAoB5jB,KAAKtH,KAAKirB,GAKlC,GAJA3jB,KAAKtH,KAAKirB,GAAmB,SAAUvc,GACnCwc,EAAkB5hB,MAAMsD,EAAM5M,MAC9B4M,EAAMue,cAAczc,IAEpBgF,cAAcpM,KAAKoV,iBAAkB,CACrC,IAAI0O,EAAO,SAAU1c,GAAQ,OAAO9B,EAAMye,aAAa3c,EAAM0c,IAC7DE,eAAaxb,GAAG,qBAAsBsb,EAAM9jB,QAGpD6b,EAAS5a,UAAUgjB,gBAAkB,WAC5BxrB,oBAAkBuH,KAAKtH,KAAKwrB,kBAC7BlkB,KAAKtH,KAAKwrB,gBAAgBhc,UAE9BlI,KAAKkkB,gBAAkBlkB,KAAKtH,KAAKwrB,gBAAkB,IAAI7e,GAAcrF,OAEzE6b,EAAS5a,UAAU8iB,aAAe,SAAU3c,EAAM4O,GAC9C,GAAI5O,EAAKwN,KAAO5U,KAAK2U,QAAQC,GAAK,eAAlC,CACI5U,KAAKtH,KAAO0O,EAAK1O,KAKrBsH,KAAKtH,KAAKga,MAAMO,WAGXjT,KAAKoV,iBAINpV,KAAKtH,KAAa,UAAI,EAHtBsH,KAAKtH,KAAkB,eAAI,EAK/BsH,KAAKmkB,gBACLnkB,KAAKokB,YAAYpkB,KAAKtH,KAAKL,SAC3B2H,KAAKqkB,iBAEA5rB,oBAAkBuH,KAAKskB,kBACxBtkB,KAAKtH,KAAK8P,GAAG,mBAAoBxI,KAAKskB,gBAA8B,eAAGtkB,KAAKskB,iBAEhF,IAAK,IAAIlsB,EAAI,EAAGA,EAAI4H,KAAK3H,QAAQC,OAAQF,IACrC4H,KAAK3H,QAAQD,GAAGiS,IAAMrK,KAAKtH,KAAKL,QAAQD,GAAGiS,IAE/CrK,KAAKohB,aACLphB,KAAKikB,kBAELjkB,KAAKtH,KAAiB,eACtBsrB,eAAajb,IAAI,qBAAsB/I,KAAK+jB,gBAEhDlI,EAAS5a,UAAUmjB,YAAc,SAAU5D,EAAa+D,QACxC,IAARA,IAAkBA,EAAM,GAC5B,IAAK,IAAInsB,EAAI,EAAGe,EAAMqnB,EAAYloB,OAAQF,EAAIe,EAAKf,IAC3CooB,EAAYpoB,GAAGC,SACfmoB,EAAYpoB,GAAG6C,MAAQxC,oBAAkB+nB,EAAYpoB,GAAG6C,OAASspB,EAC7D/D,EAAYpoB,GAAG6C,MACnBspB,IACAA,EAAMvkB,KAAKokB,YAAY5D,EAAYpoB,GAAGC,QAASksB,KAG/C/D,EAAYpoB,GAAG6C,MAAQxC,oBAAkB+nB,EAAYpoB,GAAG6C,OAASspB,EAC7D/D,EAAYpoB,GAAG6C,MACnBspB,KAGR,OAAOA,GAEX1I,EAAS5a,UAAUkjB,cAAgB,WAE3BnkB,KAAK5D,eACL4D,KAAKtH,KAAK0D,aAAiB,KAAI4D,KAAK5D,aAAiB,KACrD4D,KAAKtH,KAAK0D,aAAaoV,SAAWxR,KAAK5D,aAAaoV,UAExD,IAAK,IAAIpZ,EAAI,EAAGA,EAAI4H,KAAKsW,WAAWhe,OAAQF,IACxC,IAAK,IAAI0C,EAAI,EAAGA,EAAIkF,KAAKsW,WAAWle,GAAGC,QAAQC,OAAQwC,IACnDkF,KAAKtH,KAAK4d,WAAWle,GAAGC,QAAQyC,GAAO,KAAIkF,KAAKsW,WAAWle,GAAGC,QAAQyC,GAAO,KAGrF,IAAS1C,EAAI,EAAGA,EAAI4H,KAAK3H,QAAQC,OAAQF,IACrC4H,KAAKtH,KAAKL,QAAQD,GAAO,KAAI4H,KAAK3H,QAAQD,GAAO,MAIzDyjB,EAAS5a,UAAUiiB,gBAAkB,SAAUvkB,GAC3C,IAAI2G,EAAQtF,KACZ,GAAIrB,aAAgB1B,OAAS0B,EAAKrG,OAAS,GAAKqG,EAAK,GAAGtB,eAAe,SACnE2C,KAAKnC,SAAW3F,EAAgB8H,MAAQ8P,WAAS,SAAUnR,GAAQA,EACnEqB,KAAKnC,SAASC,OAAO,SAAUC,GAC3B0V,WAAS,sBAAwB1V,EAAEhE,SAAUgE,EAAGuH,GAChC,IAAZvH,EAAE7C,OACFoK,EAAM1H,WAAWrE,KAAKwE,UAK9B,GAAI7F,EAAgB8H,MAAO,CACvB,IAAIwkB,EAAW1U,WAAS,SAAU9P,KAAKtI,YACvCsI,KAAKgjB,WAAWvQ,kBAAkB+R,QAGlCxkB,KAAKgjB,WAAWvQ,kBAAkB9T,IAa9Ckd,EAAS5a,UAAUwjB,mBAAqB,WACpCzkB,KACK0kB,mBACL1kB,KAAKtH,KAAKisB,UAAY3kB,KAAK2kB,UAC3B3kB,KAAKtH,KAAK0mB,cAAgBpf,KAAKof,cAC/Bpf,KAAKtH,KAAKL,QAAU2H,KAAK4kB,eAAe5kB,KAAK3H,SAC7C2H,KAAKtH,KAAKupB,iBAAmBjiB,KAAKiiB,iBAClCjiB,KAAKtH,KAAKypB,eAAiBniB,KAAKmiB,eAChCniB,KAAKtH,KAAKga,MAAQ1S,KAAK0S,MACvB1S,KAAKtH,KAAKmsB,gBAAkB7kB,KAAK6kB,gBACjC7kB,KAAKtH,KAAK6W,YAAcvP,KAAKuP,YAC7BvP,KAAKtH,KAAK8W,aAAesV,sBAAoB9kB,KAAKwP,cAClDxP,KAAKtH,KAAKqsB,cAAgB/kB,KAAK+kB,cAC/B/kB,KAAKtH,KAAK2H,eAAiBL,KAAKK,eAChCL,KAAKtH,KAAK4H,aAAeN,KAAKM,aAC9BN,KAAKtH,KAAKI,eAAiBkH,KAAKlH,eAChCkH,KAAKtH,KAAK2U,qBAAuBrN,KAAKqN,qBACtCrN,KAAKtH,KAAKyS,MAAQnL,KAAKmL,MACvBnL,KAAKtH,KAAK8qB,OAASxjB,KAAKwjB,OACxBxjB,KAAKtH,KAAKssB,aAAehlB,KAAKglB,aAC9BhlB,KAAKtH,KAAK0H,gBAAkBJ,KAAKI,gBACjCJ,KAAKtH,KAAKoY,cAAgB9Q,KAAK8Q,cAC/B9Q,KAAKtH,KAAK6H,cAAgBP,KAAKO,cAC/BP,KAAKtH,KAAKusB,YAAcjlB,KAAKilB,YAC7BjlB,KAAKtH,KAAKwsB,eAAiBllB,KAAKklB,eAChCllB,KAAKtH,KAAK0pB,oBAAsBpiB,KAAKoiB,oBACrCpiB,KAAKtH,KAAK0qB,gBAAkB0B,sBAAoB9kB,KAAKojB,iBACrDpjB,KAAKtH,KAAKysB,UAAYnlB,KAAKmlB,UAC3BnlB,KAAKtH,KAAK0sB,UAAYplB,KAAKolB,UAC3BplB,KAAKtH,KAAK8pB,eAAiBxiB,KAAKwiB,eAChCxiB,KAAKtH,KAAKqpB,QAAU+C,sBAAoB9kB,KAAKqlB,kBAC7CrlB,KAAKtH,KAAK4sB,gBAAkBtlB,KAAKslB,gBACjCtlB,KAAKtH,KAAKK,eAAiB+rB,sBAAoB9kB,KAAKjH,gBACpDiH,KAAKtH,KAAKyN,kBAAoB2e,sBAAoB9kB,KAAKmG,mBACvDnG,KAAKtH,KAAK8F,aAAesmB,sBAAoB9kB,KAAKxB,cAClDwB,KAAKtH,KAAKC,eAAiBmsB,sBAAoB9kB,KAAKrH,gBACpDqH,KAAKtH,KAAK4d,WAAawO,sBAAoB9kB,KAAKsW,YAChDtW,KAAKtH,KAAK6sB,iBAAmBT,sBAAoB9kB,KAAKulB,kBACtDvlB,KAAKtH,KAAK6gB,UAAYuL,sBAAoB9kB,KAAKuZ,WAC/CvZ,KAAKtH,KAAKolB,OAASgH,sBAAoB9kB,KAAK8d,QAC5C9d,KAAKtH,KAAK8sB,iBAAmBxlB,KAAKwlB,iBAClCxlB,KAAKtH,KAAKspB,iBAAmB8C,sBAAoB9kB,KAAKylB,kBACtDzlB,KAAKtH,KAAKgtB,gBAAkBZ,sBAAoB9kB,KAAK0lB,iBACrD1lB,KAAKtH,KAAK0D,aAAe4D,KAAK2lB,sBAC9B3lB,KAAKtH,KAAK0Y,YAAc0T,sBAAoB9kB,KAAKoR,aACjDpR,KAAKtH,KAAKwpB,eAAiB4C,sBAAoB9kB,KAAKkiB,gBACpDliB,KAAKtH,KAAKwG,WAAac,KAAKd,WAC5Bc,KAAKtH,KAAKgH,cAAgBM,KAAKN,cAC/B,IAAIkmB,EAAmB,yBACvB5lB,KAAKtH,KAAKktB,GAAoB5lB,KAAK4lB,GAEnC5lB,KAAKtH,KAAkB,eAAI,GAE/BmjB,EAAS5a,UAAU4kB,cAAgB,SAAUze,GACzCpH,KAAKsH,QAAQhO,YAAU,OAAQ8N,GAAOA,IAE1CyU,EAAS5a,UAAUojB,eAAiB,WAChC,IAAI/e,EAAQtF,KACR8lB,EAAW9lB,KACfA,KAAKtH,KAAKqtB,aAAe/lB,KAAK6lB,cAAc5M,KAAKjZ,MACjDA,KAAKtH,KAAKkK,YAAc,SAAUwE,GACzBgF,eACD9G,EAAMkgB,iBAAmBlgB,EAAM5M,KAAK8sB,kBAExCM,EAAS9U,OAAOgV,EAAoB5e,GACpC9B,EAAMgC,QAAQ0e,EAAoB5e,IAEtCpH,KAAKtH,KAAKoK,cAAgB,SAAUsE,GAEhC,GADA9B,EAAMkgB,iBAAmBlgB,EAAM5M,KAAK8sB,iBAChCpZ,aAAY,CAIZhF,EAAS,KAAIA,EAAS,KAAEA,EAAS,KAAE9O,OAAS,GAC5C8O,EAAa,SAAIA,EAAa,SAAEA,EAAa,SAAE9O,OAAS,GACxD8O,EAAQ,IAAIA,EAAQ,IAAEA,EAAQ,IAAE9O,OAAS,GAE7CgN,EAAMgC,QAAQ2e,EAAsB7e,IAExCpH,KAAKtH,KAAKwK,WAAa,SAAUkE,GAC7B9B,EAAMoZ,oBACNpZ,EAAMgC,QAAQ4e,EAAmB9e,IAErCpH,KAAKtH,KAAKytB,mBAAqB,SAAU/e,GACrC9B,EAAM0L,OAAO,gBAAiB5J,GAC9BA,EAAO9B,EAAM2M,aAEjBjS,KAAKtH,KAAK0tB,iBAAmB,SAAUhf,GACnC9B,EAAM0L,OAAO,cAAe5J,GAC5BA,EAAO9B,EAAM2M,aAEjBjS,KAAKtH,KAAK2tB,eAAiB,SAAUjf,GACjC9B,EAAMgC,QAAQ0C,EAAuB5C,IAEzCpH,KAAKtH,KAAK4tB,kBAAoBtmB,KAAK6lB,cAAc5M,KAAKjZ,MACtDA,KAAKtH,KAAK6tB,oBAAsBvmB,KAAK6lB,cAAc5M,KAAKjZ,MACxDA,KAAKtH,KAAK8tB,yBAA2BxmB,KAAK6lB,cAAc5M,KAAKjZ,MAC7DA,KAAKtH,KAAK+tB,uBAAyBzmB,KAAK6lB,cAAc5M,KAAKjZ,MAC3DA,KAAKtH,KAAKguB,kBAAoB1mB,KAAK6lB,cAAc5M,KAAKjZ,MACtDA,KAAKtH,KAAKmL,kBAAoB7D,KAAK6lB,cAAc5M,KAAKjZ,MACtDA,KAAKtH,KAAKiuB,eAAiB3mB,KAAK6lB,cAAc5M,KAAKjZ,MACnDA,KAAKtH,KAAKkuB,eAAiB5mB,KAAK6lB,cAAc5M,KAAKjZ,MACnDA,KAAKtH,KAAKmuB,gBAAkB7mB,KAAK6lB,cAAc5M,KAAKjZ,MACpDA,KAAKtH,KAAKouB,eAAiB9mB,KAAK6lB,cAAc5M,KAAKjZ,MACnDA,KAAKtH,KAAKquB,gBAAkB/mB,KAAK6lB,cAAc5M,KAAKjZ,MACpDA,KAAKtH,KAAKsuB,aAAehnB,KAAK6lB,cAAc5M,KAAKjZ,MACjDA,KAAKtH,KAAKuuB,eAAiBjnB,KAAK6lB,cAAc5M,KAAKjZ,MACnDA,KAAKtH,KAAKwuB,YAAclnB,KAAK6lB,cAAc5M,KAAKjZ,MAChDA,KAAKtH,KAAKyuB,SAAWnnB,KAAK6lB,cAAc5M,KAAKjZ,MAC7CA,KAAKtH,KAAK0uB,WAAapnB,KAAK6lB,cAAc5M,KAAKjZ,MAC/CA,KAAKtH,KAAK2uB,gBAAkBrnB,KAAK6lB,cAAc5M,KAAKjZ,MACpDA,KAAKtH,KAAK4uB,WAAatnB,KAAK6lB,cAAc5M,KAAKjZ,MAC/CA,KAAKtH,KAAK6uB,YAAcvnB,KAAK6lB,cAAc5M,KAAKjZ,MAChDA,KAAKtH,KAAK8uB,WAAaxnB,KAAK6lB,cAAc5M,KAAKjZ,MAC/CA,KAAKtH,KAAK+uB,YAAc,SAAUrgB,GAG9B,IAFA,IAAIlB,EAAOZ,EAAMvG,UAEVmH,EAAKkB,EAAa,UAAGZ,UAAUC,SAAS,iBAC3CW,EAAa,WAEjB9B,EAAMgC,QbjrBO,cairBqBF,IAEtCpH,KAAKtH,KAAKumB,KAAO,WACb6G,EAASptB,KAAK8P,GAAG,cAAesd,EAAS7B,gBAAiB6B,IAE9D9lB,KAAKtH,KAAKgvB,cAAgB1nB,KAAK6lB,cAAc5M,KAAKjZ,MAClDA,KAAKtH,KAAKivB,cAAgB3nB,KAAK6lB,cAAc5M,KAAKjZ,MAClDA,KAAK4nB,6BACL5nB,KAAK6nB,qBACL7nB,KAAK8nB,2BACL9nB,KAAK+nB,yBACL/nB,KAAKgoB,qBACLhoB,KAAKioB,sBAETpM,EAAS5a,UAAU2mB,2BAA6B,WAC5C,IAAItiB,EAAQtF,KACR8lB,EAAW9lB,KACfA,KAAKtH,KAAKwvB,UAAY,SAAU9gB,GAM5B,GALA9B,EAAM6iB,kBAAkB/gB,GACxB9B,EAAMoZ,oBACNpZ,EAAM8iB,aAAa9iB,EAAMvG,WACzBuG,EAAM0L,OAAO,eAAgB5J,GAC7B9B,EAAMgC,QbzvBK,YayvBqBF,GAC5B5P,EAAa8N,KAAW/K,EAAU+K,KAAWA,EAAMwN,gBAAiB,CACpE,IAAIuV,EAAM/uB,YAAU,sBAAuBgM,GAAOxH,OAAO,SAAUC,GAC/D,MAAoC,OAA7BA,EAAEwV,YAAYC,aACtBlb,OACHmb,WAAS,gCAAiC4U,EAAM,GAAI/iB,GAExDA,EAAMtL,eAAgB,GAE1BgG,KAAKtH,KAAK8J,gBAAkB,SAAU4E,GAClC,IACIvH,EAAcvG,YAAU,SAAU8N,GACtC,GAAI5P,EAAasuB,KAAcvrB,EAAUurB,IAA6B,SAAhBjmB,EAClDimB,EAAS9U,OAAO,oBAAqB5J,GACrCA,EAAQ0e,EAAoB,iBAE3B,GAAiC,IAA7BA,EAASjoB,SAASvF,QAAgBiC,EAAUurB,IAAaA,EAASpuB,sBAAsBC,cAAa,CAC1G,IAAI6C,EAAKsrB,EAASpuB,WAClBouB,EAAS9C,WAAWvQ,kBAAkBjY,EAAG9C,WAAWsE,MACpDoL,EAAKkM,OAASwS,EAASptB,KAAKhB,WAAqB,WAAEsE,KAAO8pB,EAASjoB,SAWvE,GATKrG,EAAasuB,IAAc5tB,EAAgB8H,OAAUvH,oBAAkBqtB,EAASpuB,cAC7EsI,KAAK+X,YACLtE,WAAS,cAAc,EAAMrM,GAEjC0e,EAAS9U,OAAO,gBAAiB5J,IAGrCzK,SAAOyK,EAAM0e,EAAS7T,cAEjBjS,KAAK+X,WAAY,CAClB,IAAIuQ,EAAoB,IAAIC,WAI5B,OAHAzC,EAASxe,QAAQwH,EAAwB1H,EAAM,SAAUohB,GACrDF,EAAkBG,QAAQD,KAEvBF,KAInBzM,EAAS5a,UAAUgnB,mBAAqB,WACpC,IACItkB,EADA2B,EAAQtF,KAERoM,cAAcpM,KAAKoV,mBACd3c,oBAAkBuH,KAAKtH,KAAKiL,aAC7BA,EAAY3D,KAAKtH,KAAKiL,YAG9B3D,KAAKtH,KAAKqK,aAAe,SAAUqE,GAC/B,IAAIshB,EAAkB,IAAIH,WAO1B,OANAjjB,EAAMgC,QAAQqhB,EAAqBvhB,EAAM,SAAUwhB,GAC1CA,EAAYvhB,QACb/B,EAAM0L,OAAO2X,EAAqBvhB,GAEtCshB,EAAgBD,QAAQG,KAErBF,GAEX1oB,KAAKtH,KAAKmwB,cAAgB,SAAUzhB,GAChC,IAAIshB,EAAkB,IAAIH,WAI1B,OAHAjjB,EAAMgC,QAAQhO,YAAU,OAAQ8N,GAAOA,EAAM,SAAU0hB,GACnDJ,EAAgBD,QAAQK,KAErBJ,GAEX1oB,KAAKtH,KAAKiL,UAAY,SAAUyD,GACxBgF,cAAc9G,EAAM8P,kBAChBzR,GAAkC,mBAAdA,GACpBA,EAAU3B,MAAMsD,GAAQ8B,IAGhC,IAAIshB,EAAkB,IAAIH,WAI1B,OAHAjjB,EAAMgC,QAAQyhB,EAAkB3hB,EAAM,SAAU4hB,GAC5CN,EAAgBD,QAAQO,KAErBN,IAGf7M,EAAS5a,UAAU8mB,uBAAyB,WACxC,IAII/jB,EACAF,EALAwB,EAAQtF,KAcZ,GARIoM,cAAcpM,KAAKoV,mBACd3c,oBAAkBuH,KAAKtH,KAAKsL,YAC7BA,EAAWhE,KAAKtH,KAAKsL,UAEpBvL,oBAAkBuH,KAAKtH,KAAKoL,YAC7BA,EAAW9D,KAAKtH,KAAKoL,WAGzB9D,KAAK1D,YAAc8P,cAAcpM,KAAKoV,iBAAkB,CACxDpV,KAAKtH,KAAK8P,GAdG,cAcYxI,KAAK1D,WAAuB,WAAG0D,KAAK1D,YAC7D,IAAI2sB,EAAWjpB,KAAKtH,KAAkB,cAAEwwB,cAAc,eACtDD,EAASzrB,OAAO,EAAG,EAAGyrB,EAASE,OAEnCnpB,KAAKtH,KAAKgK,gBAAkB,SAAU0E,GAC9B9B,EAAM8jB,iBACN9jB,EAAM8jB,iBAAkB,EACxB9jB,EAAM5M,KAAKhB,YAAe4b,OAAQhO,EAAMzH,SAAU+O,MAAOkD,WAAS,QAASxK,EAAM5M,KAAKhB,cAGtF4N,EAAMgC,QAAQ+hB,EAAwBjiB,IAG9CpH,KAAKtH,KAAKoL,SAAW,SAAUsD,GAM3B,GALIgF,cAAc9G,EAAM8P,kBAChBtR,GAAgC,mBAAbA,GACnBA,EAAS9B,MAAMsD,GAAQ8B,IAG3B9B,EAAM5M,KAAK4wB,oBAAqB,CAChC,IAAIC,OAAe,EACnBA,EAAejkB,EAAM5M,KAAK8wB,kBAAkBC,YAAY9U,QAAQW,uBAAuB,cAAc,IAChG7c,oBAAkB8wB,IAAiBA,EAAa3U,KAAOtP,EAAMqP,QAAQC,GAAK,6BAC3ExN,EAAKC,QAAS,GAGtB,IAAIqhB,EAAkB,IAAIH,WAU1B,OATAjjB,EAAMgC,QAAQoiB,EAAiBtiB,EAAM,SAAUuiB,GACvCvd,eAAe9G,EAAM8P,mBACrBuU,EAAapqB,KAAOqqB,aAAWD,EAAapqB,OAE3CoqB,EAAatiB,QACd/B,EAAM0L,OAAO0Y,EAAiBC,GAElCjB,EAAgBD,QAAQkB,KAErBjB,GAEX1oB,KAAKtH,KAAKqL,UAAY,SAAUqD,GAC5B9B,EAAMgC,QAAQuiB,GAAkBziB,GAChC9B,EAAM0L,OAAO6Y,GAAkBziB,IAEnCpH,KAAKtH,KAAKsL,SAAW,SAAUoD,GACvBgF,cAAc9G,EAAM8P,kBAChBpR,GAAgC,mBAAbA,GACnBA,EAAShC,MAAMsD,GAAQ8B,IAG/B,IACI0iB,EAAU,IAAIvB,WAGlB,OAFAnhB,EAAS,QAAI0iB,EACbxkB,EAAM0L,OAAO+Y,GAAiB3iB,GACvB0iB,GAEX9pB,KAAKtH,KAAKyL,SAAW,SAAUiD,GAC3B9B,EAAMgC,QAAQ0iB,GAAiB5iB,GAC/B9B,EAAM0L,OAAOgZ,GAAiB5iB,IAElCpH,KAAKtH,KAAK4L,gBAAkB,SAAU8C,GAClC9B,EAAMgC,QAAQ2iB,GAAwB7iB,GACtC9B,EAAM0L,OAAOiZ,GAAwB7iB,IAEzCpH,KAAKtH,KAAK2L,eAAiB,SAAU+C,GACjC9B,EAAMgC,QAAQ4iB,GAAuB9iB,GACrC9B,EAAM0L,OAAOkZ,GAAuB9iB,IAExCpH,KAAKtH,KAAKuL,YAAc,SAAUmD,GAC9B9B,EAAMgC,QAAQ6iB,GAAoB/iB,GAClC9B,EAAM0L,OAAOmZ,GAAoB/iB,IAErCpH,KAAKtH,KAAK0L,kBAAoB,SAAUgD,GACpC9B,EAAMgC,QAAQ8iB,GAA0BhjB,GACxC9B,EAAM0L,OAAOoZ,GAA0BhjB,IAE3CpH,KAAKtH,KAAKwL,YAAc,SAAUkD,GACE,SAA5B9B,EAAMlJ,aAAaC,MACnBiJ,EAAMgC,QAAQ+iB,GAAoBjjB,GAEtC9B,EAAM0L,OAAOqZ,GAAoBjjB,KAGzCyU,EAAS5a,UAAUknB,kBAAoB,SAAU/gB,GAC7C,IAAI9B,EAAQtF,KACRoM,eAAepM,KAAKoV,iBACpBkV,WAAW,WACPhlB,EAAMilB,sBAAsBnjB,IAC7B,KAGHpH,KAAKuqB,sBAAsBnjB,IAGnCyU,EAAS5a,UAAUyjB,iBAAmB,WAClC,IAAIhtB,EAAa,aAOjB,GAAIsI,KAAKtI,YAAcQ,EAAgB8H,MAAO,CAC1C,IAAIrB,EAAOqB,KAAKnC,SACZ2sB,EAAY1a,WAAS,QAAS9P,KAAKtI,YACvCsI,KAAKtH,KAAKhB,YAAe4b,OAAQ3U,EAAMiO,MAAO4d,QAG9CxqB,KAAKtH,KAAKhB,WAAesI,KAAKtI,sBAAsBC,cAChC,IAAIA,cAAYqI,KAAKtI,WAAWA,WAAYsI,KAAKtI,WAAW+yB,aAAczqB,KAAKtI,WAAWE,SAA1GoI,KAAKnC,SAOb,GALIuO,cAAcpM,KAAKtI,sBAAsBC,gBACzCqI,KAAKtH,KAAKhB,WAAsB,YAAIsI,KAAKtI,WAAsB,YAC/DsI,KAAKtH,KAAKhB,WAAyB,eAAIsI,KAAKtI,WAAyB,eACrEsI,KAAKtH,KAAKhB,WAAc,IAAIsI,KAAKtI,WAAc,KAE/CsI,KAAKtI,sBAAsBC,gBAAgBqI,KAAKtI,WAAWA,WAAWwpB,SAAWlhB,KAAKtI,WAAW+C,OAAQ,CACzGuF,KAAKtH,KAAKhB,WAAWA,GAAYsE,KAAOtB,EAAYsF,KAAKtI,WAAWA,GAAYsE,MAChFgE,KAAKtH,KAAKhB,WAAgB,MAAIsI,KAAKtI,WAAW+C,MAC9C,IAAIiwB,EAAO1qB,KAAKtH,KAAKhB,WAChBe,oBAAkBuH,KAAKtH,KAAKhB,WAAgB,QAC7CsI,KAAKtH,KAAKhB,WAAgB,MAAEyb,KAAK,SAAUpV,GACvC2sB,EAAKhzB,GAAYwpB,SAAU,EAC3BwJ,EAAoB,iBAAI,EACxBA,EAAKhzB,GAAYsE,KAAO+B,EAAEuV,OAC1BoX,EAAY,QAAI,IAAIC,kBAKpC9O,EAAS5a,UAAU6mB,yBAA2B,WAC1C,IACInlB,EADA2C,EAAQtF,KAERoM,cAAcpM,KAAKoV,mBACd3c,oBAAkBuH,KAAKtH,KAAKiK,kBAC7BA,EAAiB3C,KAAKtH,KAAKiK,iBAGnC3C,KAAKtH,KAAK+J,YAAc,SAAU2E,GACL,YAArBA,EAAKvH,aAA6BuH,EAAK/F,QAAU+F,EAAK/F,OAAOue,eAC7DxY,EAAK/F,OAAOue,cAAcpZ,UAAUC,SAAS,yBAC7CW,EAAKC,QAAS,GAGE,YADF/N,YAAU,cAAe8N,IAEvC9B,EAAM0L,OAAO,qBAEjB1L,EAAM0L,OAAO,eAAiB5V,WAAYgM,IACrC5P,EAAa8N,IAAW7M,oBAAkB6M,EAAMmH,eAAkBvU,EAAgBoN,IAClC,IAA7CA,EAAM5M,KAAKK,eAAeV,QAAQC,QAAyD,IAAzCgN,EAAM5M,KAAKC,eAAeC,IAAIN,SACpFgN,EAAM0L,OAAO,gBAAkBnT,SAAUyH,EAAM5M,KAAKhB,aACpD4N,EAAM5M,KAAKhB,WAAa4N,EAAM2M,YAAYqB,QAE9C,IAAIoV,EAAkB,IAAIH,WAC1B,GAAInc,cAAmC,WAArBhF,EAAKvH,cAA6ByF,EAAM8P,iBAAkB,CAExEhO,EAAS,KAAIA,EAAS,KAAE,GAe5B,OAbA9B,EAAMgC,QAAQsjB,EAAoBxjB,EAAM,SAAU4Q,GAC9C,GAAI5L,cAAyC,WAA3B4L,EAAWnY,cAA6ByF,EAAM8P,iBAAkB,CAE9E4C,EAAe,MAAKA,EAAe,MAElCA,EAAW3Q,QACZ/B,EAAM0L,OAAO+X,EAAkB/Q,GAE/B5L,cAAyC,cAA3B4L,EAAWnY,cAAgCyF,EAAM8P,mBAC/D4C,EAAWnZ,IAAM+qB,aAAW5R,EAAWnZ,MAE3C6pB,EAAgBD,QAAQzQ,KAErB0Q,GAEX1oB,KAAKtH,KAAKiK,eAAiB,SAAUyE,GACjC,GAAIgF,cAAc9G,EAAM8P,iBAAkB,CAEtC,IAAK,IADDlP,EAAOZ,EAAMvG,UACR3G,EAAI,EAAGA,EAAI8N,EAAK5N,OAAQF,IAAK,EAC9B8N,EAAK9N,GAAGoO,UAAUC,SAAS,uBAAyBP,EAAK9N,GAAGoO,UAAUC,SAAS,wBAC9EnB,EAAMoK,mBAA0C,WAArBtI,EAAKvH,YAA4B8L,eAAazF,EAAK9N,IAAK,qBAChFuT,eAAazF,EAAK9N,IAAK,sBAC1BkN,EAAMoK,mBAA0C,WAArBtI,EAAKvH,YAA4BkP,YAAU7I,EAAK9N,IAAK,sBAC7E2W,YAAU7I,EAAK9N,IAAK,sBAE5B,IAAIoH,EAAQ0G,EAAK9N,GAAGuO,iBAAiB,cACjCkkB,EAAarrB,EAAM8F,EAAM7F,iBAAiB6V,uBAAuB,sBAAsB,IACvF9V,EAAM8F,EAAM7F,iBAAiB6V,uBAAuB,oBAAoB,GACxEuV,IACCvlB,EAAMoK,mBAA0C,WAArBtI,EAAKvH,YAA4B8L,eAAakf,GAAa,oBACnFlf,eAAakf,GAAa,sBAC7BvlB,EAAMoK,mBAA0C,WAArBtI,EAAKvH,YAA4BkP,YAAU8b,GAAa,sBAChF9b,YAAU8b,GAAa,qBAG/BloB,GAA4C,mBAAnBA,GACzBA,EAAeX,MAAMsD,GAAQ8B,IAiBrC,GAdA9B,EAAM0L,OAAO,iBAAkB5J,GAC/B9B,EAAMoZ,oBACNpZ,EAAMwlB,sBACmB,YAArB1jB,EAAKvH,aACLyF,EAAM0L,OAAO,qBAEjB1L,EAAM0L,OAAO,kBAAoB5V,WAAYgM,IACpB,QAArBA,EAAKvH,aAAgE,QAAtCyF,EAAMlJ,aAAaQ,gBAAkE,WAAtC0I,EAAMlJ,aAAaQ,gBACjG0I,EAAM0L,OAAO+Z,EAAiB3jB,GAET,cAArBA,EAAKvH,aACLyF,EAAM0L,OAAO2I,GAAkBvS,GAEnC9B,EAAM0L,OAAO,oBAAqB5J,GAC9BgF,cAAmC,WAArBhF,EAAKvH,cAA6ByF,EAAM8P,iBAAkB,CAExEhO,EAAS,KAAIA,EAAS,KAAE,GAE5B9B,EAAMgC,QAAQ+O,EAAuBjP,KAG7CyU,EAAS5a,UAAU4mB,mBAAqB,WACpC,IAAIviB,EAAQtF,KACR8lB,EAAW9lB,KACfA,KAAKtH,KAAKmL,kBAAoB,SAAUuD,GACpC9B,EAAMgC,QAAQ0jB,EAA0B5jB,GACxC9B,EAAM0L,OAAOga,EAA0B5jB,IAE3CpH,KAAKtH,KAAKqM,gBAAkB,SAAUqC,GAClC9B,EAAM0L,OAAO,kBAAmB5J,GAChC9B,EAAMgC,QAAQ2jB,GAAwB7jB,IAE1CpH,KAAKtH,KAAK4J,aAAe,SAAU8E,GAC3B3O,oBAAkBuH,KAAK+X,YACvBtE,WAAS,cAAc,EAAOrM,GAG9BqM,WAAS,aAAczT,KAAK+X,WAAY3Q,GAE5C0e,EAASzmB,aAAaiQ,YAAYlI,IAEtCpH,KAAKtH,KAAK6J,cAAgB,SAAU6E,GAC5B3O,oBAAkBuH,KAAK+X,YACvBtE,WAAS,cAAc,EAAOrM,GAG9BqM,WAAS,aAAczT,KAAK+X,WAAY3Q,GAE5C0e,EAASzmB,aAAaC,WAAW8H,IAErCpH,KAAKtH,KAAK+K,iBAAmB,SAAU2D,GACnC9B,EAAM0L,OAAOka,EAAyB9jB,GACtC9B,EAAMgC,QAAQ4jB,EAAyB9jB,IAE3CpH,KAAKtH,KAAK8K,gBAAkB,SAAU4D,GAClC9B,EAAM0L,OAAOma,EAAwB/jB,GACrC9B,EAAMgC,QAAQ6jB,EAAwB/jB,IAE1CpH,KAAKtH,KAAK6J,cAAgB,SAAU6E,GAChC9B,EAAMjG,aAAaC,WAAW8H,KAGtCyU,EAAS5a,UAAU+mB,mBAAqB,WACpC,IAAI1iB,EAAQtF,KACR8lB,EAAW9lB,KACfA,KAAKtH,KAAKsM,mBAAqB,SAAUoC,GACrC0e,EAASxe,QAAQ8jB,GAA2BhkB,IAEhDpH,KAAKtH,KAAK2yB,aAAe,SAAUjkB,GAC/B0e,EAASxe,Qbh/BK,eag/BwBF,IAE1CpH,KAAKtH,KAAK4yB,QAAU,SAAUlkB,GACtB9B,EAAM5M,KAAK6yB,OACXnkB,EAAKC,QAAS,GAGlBye,EAAS9U,OAAOwa,GAAmBpkB,GACnC0e,EAASxe,Qb9/BA,Ua8/BwBF,KAErCpH,KAAKtH,KAAK+yB,QAAU,SAAUrkB,GACtB9B,EAAM5M,KAAK6yB,OACXnkB,EAAKC,QAAS,GAGlBye,EAAS9U,OAAO0a,GAAmBtkB,GACnCA,EAAKC,QAAS,KAOtBwU,EAAS5a,UAAUkiB,SAAW,WAC1BnjB,KAAKykB,qBACLzkB,KAAKqkB,iBACL5Q,WAAS,qBAAsBzT,KAAK2rB,mBAAoB3rB,KAAKtH,MAE7D+a,WAAS,mBAAoBzT,KAAQ,iBAAGA,KAAKtH,OAMjDmjB,EAAS5a,UAAUgiB,oBAAsB,WACrC,IAAKjjB,KAAK3H,QAAQC,SAAY0H,KAAKgjB,WAAWxQ,YAAcpZ,OAAOC,KAAK2G,KAAKtI,YAAYY,OAAS,CAC9F,IAAImB,OAAS,EAIbA,EAASuG,KAAKtI,WAAW,GAGzB,IAAK,IADD2B,EAAOD,OAAOC,KAAKI,GACdrB,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,KACuC,KAA/D4H,KAAKvC,aAAcuC,KAAK1C,iBAAiBoB,QAAQrF,EAAKjB,KACvD4H,KAAK3H,QAAQkB,KAAKF,EAAKjB,MAKvCyjB,EAAS5a,UAAU0kB,oBAAsB,WACrC,IAAIzlB,KAYJ,OAVAA,EAAKmiB,YAAcriB,KAAK5D,aAAaimB,YACrCniB,EAAKD,aAAeD,KAAK5D,aAAa6D,aACtCC,EAAKoiB,cAAgBtiB,KAAK5D,aAAakmB,cACvCpiB,EAAKtD,eAAsD,WAArCoD,KAAK5D,aAAaQ,eAA8B,SAAW,MACjFsD,EAAK0rB,oBAAsB5rB,KAAK5D,aAAawvB,oBAC7C1rB,EAAK2rB,kBAAoB7rB,KAAK5D,aAAayvB,kBAC3C3rB,EAAKsR,SAAWxR,KAAK5D,aAAaoV,SAClCtR,EAAK4rB,wBAA0B9rB,KAAK5D,aAAa0vB,wBACjD5rB,EAAS,KAAIF,KAAK5D,aAAiB,KACnC8D,EAAK6rB,OAAS/rB,KAAK5D,aAAa2vB,OACxB/rB,KAAK5D,aAAaC,MACtB,IAAK,SAGL,IAAK,QACD6D,EAAK7D,KAAO2D,KAAK5D,aAAaC,KAC9B,MACJ,IAAK,MACD6D,EAAK7D,KAAO,SACZ,MACJ,IAAK,OACD6D,EAAK7D,KAAO,SACZ6D,EAAK2rB,mBAAoB,EAGjC,OAAO3rB,GAMX2b,EAAS5a,UAAUwkB,eAAiB,WAChC,GAAIzlB,KAAKgiB,iBAAkB,CAEvB,IAAK,IADD7N,KACK/b,EAAI,EAAGA,EAAI4H,KAAKgiB,iBAAiB1pB,OAAQF,IAC9C,OACQ4H,KAAKgiB,iBAAiB5pB,IAC1B,IAAK,SACL,KAAKyhB,mBAAiB0D,OAClBpJ,EAAM5a,MAAOyyB,KAAMhsB,KAAK4d,KAAKqO,YAAY,UACrC5qB,OAAQ,aAAcuT,GAAI5U,KAAK2U,QAAQC,GAAK,4BAC5CT,QAAU6X,KAAMhsB,KAAK4d,KAAKqO,YAAY,SAAUrX,GAAI,UAAaoX,KAAMhsB,KAAK4d,KAAKqO,YAAY,SAAUrX,GAAI,YAC/G,MACJ,QACIT,EAAM5a,KAAKyG,KAAKgiB,iBAAiB5pB,IAG7C,OAAO+b,EAGP,OAAO,MAOf0H,EAAS5a,UAAUokB,eAAiB,WAChC,GAAIrlB,KAAK+hB,QAAS,CAEd,IAAK,IADD5N,KACK/b,EAAI,EAAGA,EAAI4H,KAAK+hB,QAAQzpB,OAAQF,IACrC,OACQ4H,KAAK+hB,QAAQ3pB,IACjB,IAAK,SACL,KAAKwhB,cAAYsS,OACb/X,EAAM5a,KAAK,UACX,MACJ,IAAK,QACL,KAAKqgB,cAAYxL,MACb+F,EAAM5a,KAAK,SACX,MACJ,IAAK,YACL,KAAKqgB,cAAY4D,UACb,IAAI2O,EAAcnsB,KAAK4d,KAAKqO,YAAY,aACxC9X,EAAM5a,MAAOyyB,KAAMG,EAAaA,YAAaA,EACzCC,WAAY,WAAYxX,GAAI5U,KAAK2U,QAAQC,GAAK,2BAClD,MACJ,IAAK,cACL,KAAKgF,cAAY6D,YACb,IAAI4O,EAAUrsB,KAAK4d,KAAKqO,YAAY,eACpC9X,EAAM5a,MAAOyyB,KAAMK,EACfF,YAAaE,EAASD,WAAY,aAAcxX,GAAI5U,KAAK2U,QAAQC,GAAK,6BAE1E,MACJ,IAAK,SACL,KAAKgF,cAAY8D,UACb,IAAI4O,EAAgBtsB,KAAK4d,KAAKqO,YAAY,aAC1C9X,EAAM5a,MACFyyB,KAAMM,EAAeH,YAAaG,EAClCF,WAAY,WAAYxX,GAAI5U,KAAK2U,QAAQC,GAAK,wBAElD,MACJ,IAAK,UACL,KAAKgF,cAAY+D,WACb,IAAI4O,EAAiBvsB,KAAK4d,KAAKqO,YAAY,cAC3C9X,EAAM5a,MACFyyB,KAAMO,EAAgBJ,YAAaI,EACnCH,WAAY,YAAaxX,GAAI5U,KAAK2U,QAAQC,GAAK,yBAEnD,MACJ,QACIT,EAAM5a,KAAKyG,KAAK+hB,QAAQ3pB,IAGpC,OAAO+b,EAGP,OAAO,MAOf0H,EAAS5a,UAAU2jB,eAAiB,SAAUvsB,GAC1C,IAAIsH,EAAStH,EACb2H,KAAKwgB,eAIL,IAAK,IAHDgM,EACAC,EACAC,KACKt0B,EAAI,EAAGA,EAAIuH,EAAOrH,OAAQF,IAAK,CACpC,IAAIu0B,EAAa3sB,KAAKtH,KAAKk0B,eAAejtB,EAAOvH,GAAGiS,KAGpD,GAFAoiB,EAAaE,MACbH,KAC+B,iBAApBxsB,KAAK3H,QAAQD,GACpBq0B,EAAWrc,MAAQoc,EAAepc,MAAQpQ,KAAK3H,QAAQD,QAGvD,IAAK,IAAIy0B,EAAK,EAAGC,EAAK1zB,OAAOC,KAAKsG,EAAOvH,IAAKy0B,EAAKC,EAAGx0B,OAAQu0B,IAAM,CAChE,IAAItR,EAAOuR,EAAGD,GACdJ,EAAWlR,GAAQiR,EAAejR,GAAQ5b,EAAOvH,GAAGmjB,GAGxD5b,EAAOvH,GAAGC,QACV2H,KAAK4kB,eAAevsB,EAAQD,GAAGC,SAG/B2H,KAAKwgB,YAAYjnB,KAAK,IAAIuG,EAAO0sB,IAErCE,EAAqBnzB,KAAKkzB,GAE9B,OAAOC,GAQX7Q,EAAS5a,UAAU8rB,kBAAoB,SAAUC,EAASC,GAItD,IAAK,IAFDC,GAAiB,EAEZL,EAAK,EAAGM,EAHA/zB,OAAOC,KAAK2zB,GAGeH,EAAKM,EAAa70B,OAAQu0B,IAAM,CACxE,IAAItR,EAAO4R,EAAaN,GACxB,OAAQtR,GACJ,IAAK,UACKnP,cAAcpM,KAAKoV,kBAAoBpV,KAAkB,gBAC3DA,KAAKtH,KAAKL,QAAU2H,KAAK4kB,eAAe5kB,KAAK3H,UAEjD,MACJ,IAAK,kBACD2H,KAAKtH,KAAK00B,iBACV,MACJ,IAAK,cACDptB,KAAKtH,KAAK6W,YAAcvP,KAAKuP,YAC7B,MACJ,IAAK,eACDvP,KAAKtH,KAAK8W,aAAesV,sBAAoB9kB,KAAKwP,cAClD0d,GAAiB,EACjB,MACJ,IAAK,uBACDltB,KAAKtH,KAAK2U,qBAAuBrN,KAAKqN,qBACtC,MACJ,IAAK,UACDrN,KAAKtH,KAAKqpB,QAAU/hB,KAAKqlB,iBACzB,MACJ,IAAK,iBACDrlB,KAAKtH,KAAK8pB,eAAiBxiB,KAAKwiB,eAChC,MACJ,IAAK,oBACDxiB,KAAKtH,KAAKyN,kBAAoB2e,sBAAoB9kB,KAAKmG,mBACvD,MACJ,IAAK,eACDnG,KAAKtH,KAAK4H,aAAeN,KAAKM,aAC9B,MACJ,IAAK,oBACDN,KAAKtH,KAAK20B,kBAAoBrtB,KAAKqtB,kBACnC,MACJ,IAAK,eACDrtB,KAAKtH,KAAK8F,aAAesmB,sBAAoB9kB,KAAKxB,cAClD,MACJ,IAAK,iBACDwB,KAAKtH,KAAKC,eAAiBmsB,sBAAoB9kB,KAAKrH,gBACpD,MACJ,IAAK,iBACDqH,KAAKtH,KAAKI,eAAiBkH,KAAKlH,eAChC,MACJ,IAAK,iBACDkH,KAAKtH,KAAKK,eAAiB+rB,sBAAoB9kB,KAAKjH,gBACpD,MACJ,IAAK,iBACDiH,KAAKtH,KAAK2H,eAAiBL,KAAKK,eAChC,MACJ,IAAK,sBACDL,KAAKtH,KAAK0pB,oBAAsBpiB,KAAKoiB,oBACrC,MACJ,IAAK,aACDpiB,KAAKtH,KAAK4d,WAAawO,sBAAoB9kB,KAAKsW,YAChD,MACJ,IAAK,aAID,GAHAtW,KAAKqY,cAAiBrY,KAAKtI,sBAAsBC,iBAAkBc,oBAAkBuH,KAAKtI,WAAW+C,QAC9FuF,KAAKtI,WAAWE,mBAAmBupB,oBAC1CnhB,KAAKkjB,gBAAgBljB,KAAKtI,YACtBsI,KAAKqY,YACL,GAAIngB,EAAgB8H,MAAO,CACvB,IAAI4M,EAAQkD,WAAS,QAAS9P,KAAKtI,YACnCsI,KAAKtH,KAAKhB,YAAe4b,OAAQtT,KAAKnC,SAAU+O,MAAOA,QAGvD5M,KAAKtH,KAAKhB,WAAasI,KAAKnC,cAIhCmC,KAAK0kB,mBACD1kB,KAAKqN,uBACLrN,KAAKtH,KAAKue,cAAcpO,sBACxB7I,KAAKtH,KAAKue,cAAcqW,cAAc,MACtCttB,KAAKtH,KAAKue,cAAcsW,eAGhC,MACJ,IAAK,QACDvtB,KAAKtH,KAAKga,MAAQ1S,KAAK0S,MACvB,MACJ,IAAK,oBACGsa,EAAQzR,GACRvb,KAAKsf,cAGLtf,KAAKqf,YAET,MACJ,IAAK,qBACDrf,KAAKwtB,UACL,MACJ,IAAK,YACDxtB,KAAKtH,KAAK0sB,UAAYplB,KAAKolB,UAC3B,MACJ,IAAK,cACDplB,KAAKtH,KAAK0Y,YAAc0T,sBAAoB9kB,KAAKoR,aACjD,MACJ,IAAK,aACDpR,KAAKtH,KAAKwG,WAAac,KAAKd,WAC5B,MACJ,IAAK,gBACDc,KAAKtH,KAAKgH,cAAgBM,KAAKN,cAC/B,MACJ,IAAK,YACDM,KAAKtH,KAAKysB,UAAYnlB,KAAKmlB,UAC3B,MACJ,IAAK,SACI1sB,oBAAkBuH,KAAKwjB,SAAoC,iBAAjBxjB,KAAW,SAAgD,IAA9BA,KAAKwjB,OAAO9kB,QAAQ,OAC5FsB,KAAK2U,QAAQzJ,MAAMsY,OAASxjB,KAAKwjB,QAErCxjB,KAAKtH,KAAK8qB,OAASxjB,KAAKwjB,OACxB,MACJ,IAAK,QACI/qB,oBAAkBuH,KAAKmL,QAAkC,iBAAhBnL,KAAU,QAA+C,IAA7BA,KAAKmL,MAAMzM,QAAQ,OACzFsB,KAAK2U,QAAQzJ,MAAMC,MAAQnL,KAAKmL,OAEpCnL,KAAKtH,KAAKyS,MAAQnL,KAAKmL,MACvB,MACJ,IAAK,SACDnL,KAAKtH,KAAKolB,OAAS9d,KAAK8d,OACxB,MACJ,IAAK,mBACD9d,KAAKtH,KAAK8sB,iBAAmBxlB,KAAKwlB,iBAClC,MACJ,IAAK,eACDxlB,KAAKtH,KAAKssB,aAAehlB,KAAKglB,aAC9B,MACJ,IAAK,cACDhlB,KAAKtH,KAAKusB,YAAcjlB,KAAKilB,YAC7B,MACJ,IAAK,iBACDjlB,KAAKtH,KAAKwsB,eAAiBllB,KAAKklB,eAChC,MACJ,IAAK,mBACDllB,KAAKtH,KAAKupB,iBAAmBjiB,KAAKiiB,iBAClC,MACJ,IAAK,iBACDjiB,KAAKtH,KAAKypB,eAAiBniB,KAAKmiB,eAChC,MACJ,IAAK,YACDniB,KAAKtH,KAAKisB,UAAY3kB,KAAK2kB,UAC3B,MACJ,IAAK,kBACD3kB,KAAKtH,KAAK0H,gBAAkBJ,KAAKI,gBACjC,MACJ,IAAK,gBACDJ,KAAKtH,KAAK6H,cAAgBP,KAAKO,cAC/B,MACJ,IAAK,mBACDP,KAAKtH,KAAK6sB,iBAAmBT,sBAAoB9kB,KAAKulB,kBACtD,MACJ,IAAK,gBACDvlB,KAAKtH,KAAKoY,cAAgBgU,sBAAoB9kB,KAAK8Q,eACnD9Q,KAAKwtB,UACL,MACJ,IAAK,mBACDxtB,KAAKtH,KAAKspB,iBAAmBhiB,KAAKylB,iBAClC,MACJ,IAAK,iBACDzlB,KAAKtH,KAAKwpB,eAAiB4C,sBAAoB9kB,KAAKkiB,gBACpD,MACJ,IAAK,kBACDliB,KAAKtH,KAAKgtB,gBAAkBZ,sBAAoB9kB,KAAK0lB,iBACrD,MACJ,IAAK,eACG1lB,KAAKtH,KAAK6yB,QAA0C,WAAhCvrB,KAAKtH,KAAK0D,aAAaC,MAAqB2wB,EAAQzR,GAAMlf,OACtD,SAAvB2wB,EAAQzR,GAAMlf,MAA0C,QAAvB2wB,EAAQzR,GAAMlf,OAChD2D,KAAKtH,KAAK+0B,YAEdztB,KAAKtH,KAAK0D,aAAe4D,KAAK2lB,sBAGlCuH,GACAltB,KAAKwtB,YASjB3R,EAAS5a,UAAUiH,QAAU,WACzBlI,KAAK0tB,iBACL1tB,KAAK4iB,eACL7gB,EAAOd,UAAUiH,QAAQ3C,KAAKvF,MAC9BA,KAAKtH,KAAKwP,UACVlI,KAAKgjB,WAAW9a,UAKhB,IAAK,IAJD2Z,GAAW,aAAc,aAAc,eAAgB,eAAgB,cAAe,kBACtF,oBAAqB,kBAAmB,gBAAiB,gBAAiB,gBAAiB,eAC3F,cAAe,iBAAkB,mBAAoB,oBAAqB,aAAc,sBACxF,kBAAmB,YAAa,uBAAwB,gBACnDzpB,EAAI,EAAGA,EAAIypB,EAAQvpB,OAAQF,IAC5B4H,KAAK6hB,EAAQzpB,MACb4H,KAAK6hB,EAAQzpB,IAAM,MAG3B4H,KAAK2U,QAAQ5I,UAAY,GACzB/L,KAAKtH,KAAO,MAQhBmjB,EAAS5a,UAAU0sB,SAAW,WAC1B5rB,EAAOd,UAAU0sB,SAASpoB,KAAKvF,MACzBoM,cAAcpM,KAAKoV,oBAAqBtF,WAAS,aAAc9P,KAAKtH,OAAUsH,KAAKhG,gBACrFgG,KAAKtH,KAAKi1B,YAQlB9R,EAAS5a,UAAU2sB,eAAiB,WAWhC,IAAK,IAVDC,GAAa,eAAgB,eAC7B,iBAAkB,UAAW,iBAAkB,oBAC/CC,GACAte,cAAe,WAAY,YAAa,eAAgB,oBAAqB,oBAAqB,aAClGzW,gBAAiB,OAAQ,OAAQ,sBAAuB,qBAAsB,eAAgB,iBAC9FJ,gBAAiB,SAAU,WAAY,cACvC6F,gBAAkBnG,WAAamtB,qBAI1BptB,EAAI,EAAGA,EAAIy1B,EAAUv1B,OAAQF,IAElC,IAAK,IADD21B,EAAgB/tB,KAAK6tB,EAAUz1B,IAC1By0B,EAAK,EAAGC,EAAKgB,EAAgBD,EAAUz1B,IAAKy0B,EAAKC,EAAGx0B,OAAQu0B,IAAM,QAEhEkB,EADGjB,EAAGD,IAKrB,OADA7sB,KAAKguB,gBATiB,SAAU,OAAQ,oBAAqB,iBAAkB,WAC3E,kBAAmB,WAAY,cAQChuB,KAAK3H,SAClC2H,KAAKiuB,aAAaJ,IAE7BhS,EAAS5a,UAAU+sB,eAAiB,SAAUE,EAAgB71B,GAC1D,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQC,OAAQF,IAC5BC,EAAQD,GAAGC,SACX2H,KAAKmuB,eAAeD,EAAgB71B,EAAQD,IAC5C4H,KAAKguB,eAAeE,EAAgB71B,EAAQD,GAAGC,UAG/C2H,KAAKmuB,eAAeD,EAAgB71B,EAAQD,KAIxDyjB,EAAS5a,UAAUktB,eAAiB,SAAUD,EAAgBvuB,GAC1D,IAAK,IAAIvH,EAAI,EAAGA,EAAI81B,EAAe51B,OAAQF,WAChCuH,EAAOuuB,EAAe91B,IAC7BuH,EAAO7B,WAGf+d,EAAS5a,UAAUqgB,kBAAoB,SAAUvjB,GAC7C,GAAKtF,oBAAkBsF,EAAEqwB,SAAzB,CAGA,IAAI/sB,EAAStD,EAAEsD,QACVA,EAAOmF,UAAUC,SAAS,sBAC3BpF,EAAOmF,UAAUC,SAAS,uBAA4BzG,KAAKquB,gBAAmBruB,KAAKtH,KAAK6yB,QACxFvrB,KAAKyf,sBAAsBpe,GAE/BrB,KAAKquB,gBAAiB,EACtBruB,KAAKgR,OAAO,qBAAuB3P,OAAQA,MAM/Cwa,EAAS5a,UAAUlC,QAAU,WACzB,OAAOiB,KAAKtH,KAAKqG,WAMrB8c,EAAS5a,UAAUqtB,SAAW,WAC1B,OAAOtuB,KAAKtH,KAAK41B,YASrBzS,EAAS5a,UAAUstB,UAAY,SAAU5vB,EAAM1D,EAAOuzB,GAC9CxuB,KAAK1D,YACL0D,KAAK1D,WAAWiyB,UAAU5vB,EAAM1D,EAAOuzB,IAM/C3S,EAAS5a,UAAUwsB,UAAY,WACvBztB,KAAKtH,KAAK4D,YACV0D,KAAKtH,KAAK4D,WAAWmxB,aAM7B5R,EAAS5a,UAAUwtB,SAAW,WACtBzuB,KAAKtH,KAAK4D,YACV0D,KAAKtH,KAAK4D,WAAWmyB,YAS7B5S,EAAS5a,UAAUytB,WAAa,SAAU3mB,EAAUqI,EAAOpV,GACnDgF,KAAKtH,KAAK4D,YACV0D,KAAKtH,KAAK4D,WAAWoyB,WAAW3mB,EAAUqI,EAAOpV,IAQzD6gB,EAAS5a,UAAU0tB,UAAY,SAAU1zB,EAAO0D,GAC5C,GAAIqB,KAAKtH,KAAK4D,WAAY,CACtB,IAAIkoB,EAAWxkB,KAAKtH,KAAKgE,wBAAwBzB,GACjD0B,SAAO6nB,EAAU7lB,GACjBqB,KAAKtH,KAAK4D,WAAWqyB,UAAU1zB,EAAOupB,KAS9C3I,EAAS5a,UAAU2tB,aAAe,SAAUC,EAAWlwB,GAC/CqB,KAAKtH,KAAK4D,YACV0D,KAAKtH,KAAK4D,WAAWsyB,aAAaC,EAAWlwB,IAOrDkd,EAAS5a,UAAU6tB,UAAY,SAAUjwB,GACjCmB,KAAKtH,KAAK4D,YACV0D,KAAKtH,KAAK4D,WAAWwyB,UAAUjwB,IAQvCgd,EAAS5a,UAAU8tB,SAAW,SAAUhnB,EAAUqI,GAC1CpQ,KAAK1D,YACL0D,KAAK1D,WAAWyyB,SAAShnB,EAAUqI,IAQ3CyL,EAAS5a,UAAU+tB,mBAAqB,SAAU7a,EAAO8a,GACjDjvB,KAAKtH,KAAKw2B,eACVlvB,KAAKtH,KAAKw2B,cAAcC,YAAYhb,EAAO8a,IAMnDpT,EAAS5a,UAAUmuB,QAAU,WACrBpvB,KAAKtH,KAAK4D,YACV0D,KAAKtH,KAAK4D,WAAW8yB,WAO7BvT,EAAS5a,UAAUouB,UAAY,SAAU3hB,GACjC1N,KAAKtH,KAAK4D,YACV0D,KAAKtH,KAAK4D,WAAW+yB,UAAU3hB,IAOvCmO,EAAS5a,UAAUnF,wBAA0B,WACzC,OAAOkE,KAAKtH,KAAKoD,2BASrB+f,EAAS5a,UAAUquB,aAAe,SAAU12B,EAAKwX,EAAOpV,GACpDgF,KAAKtH,KAAK42B,aAAa12B,EAAKwX,EAAOpV,IAQvC6gB,EAAS5a,UAAUrC,WAAa,SAAUhG,EAAKkR,GAC3C,IAAIxL,EAAiB0B,KAAKtD,wBACtB6yB,EAAavvB,KAAKtH,KAAKoD,0BAA0B,GACjDZ,EAAQ,EACRzB,KACJ6E,EAAemkB,KAAK,SAAUznB,EAAO5C,EAAG2F,GACpC,OAAI/C,EAAMu0B,KAAgB32B,IACtBa,EAASuB,GACF,KAMfE,EAAQzB,EAAOyB,MACf,IAAIyD,EAAOmL,EACXnL,EAAKzD,MAAQA,EACbyD,EAAK1D,MAAQxB,EAAOwB,MACpB0D,EAAKtE,aAAeZ,EAAOY,aAC3BsE,EAAKxB,SAAW1D,EAAO0D,SACvBwB,EAAK5E,SAAWN,EAAOM,SACvB4E,EAAK9E,WAAaJ,EAAOI,WACzB8E,EAAK8M,cAAgBhS,EAAOgS,cAC5B9M,EAAKvE,gBAAkBX,EAAOW,gBAC9BuE,EAAKF,eAAiBhF,EAAOgF,eAC7BE,EAAKzE,SAAWT,EAAOS,SACvB8F,KAAKtH,KAAKkG,WAAWhG,EAAK+F,IAO9Bkd,EAAS5a,UAAUuuB,SAAW,SAAUC,GAChCzvB,KAAKtH,KAAKg3B,aACV1vB,KAAKtH,KAAKg3B,YAAYF,SAASC,IAQvC5T,EAAS5a,UAAU0uB,sBAAwB,SAAUC,GAC7C5vB,KAAK0vB,aACL1vB,KAAKtH,KAAKg3B,YAAYC,sBAAsBC,IASpD/T,EAAS5a,UAAU4uB,iBAAmB,SAAU9nB,EAAUoC,GACtD,OAAOnK,KAAKtH,KAAKm3B,iBAAiB9nB,EAAUoC,IAOhD0R,EAAS5a,UAAUkP,iBAAmB,SAAUC,GAC5C,OAAIhE,cAAcpM,KAAKoV,iBACZ0a,uBAAqB9vB,KAAKtH,KAAKL,QAAS,SAAU03B,EAAM90B,GAC3D,GAAI80B,EAAK3f,QAAUA,EACf,OAAO2f,IAGZ,GAGID,uBAAqB9vB,KAAKwgB,YAAa,SAAUuP,EAAM90B,GAC1D,GAAI80B,EAAK3f,QAAUA,EACf,OAAO2f,IAGZ,IAQXlU,EAAS5a,UAAU2rB,eAAiB,SAAUviB,GAC1C,OAAI+B,cAAcpM,KAAKoV,iBACZ0a,uBAAqB9vB,KAAKtH,KAAKL,QAAS,SAAU03B,EAAM90B,GAC3D,GAAI80B,EAAK1lB,MAAQA,EACb,OAAO0lB,IAGZ,GAGID,uBAAqB9vB,KAAKwgB,YAAa,SAAUuP,EAAM90B,GAC1D,GAAI80B,EAAK1lB,MAAQA,EACb,OAAO0lB,IAGZ,IAOXlU,EAAS5a,UAAU+uB,oBAAsB,WACrC,OAAOhwB,KAAKtH,KAAKs3B,uBAMrBnU,EAAS5a,UAAUgvB,iBAAmB,WAClC,OAAOjwB,KAAKtH,KAAKu3B,oBAMrBpU,EAAS5a,UAAUivB,sBAAwB,WACvC,OAAOlwB,KAAKtH,KAAKw3B,yBAQrBrU,EAAS5a,UAAUkvB,YAAc,SAAU92B,EAAM+2B,GAC7CpwB,KAAKtH,KAAKy3B,YAAY92B,EAAM+2B,GAC5BpwB,KAAK0e,qBAQT7C,EAAS5a,UAAUovB,YAAc,SAAUh3B,EAAMi3B,GAC7CtwB,KAAKtH,KAAK23B,YAAYh3B,EAAMi3B,GAC5BtwB,KAAK0e,qBAOT7C,EAAS5a,UAAUsvB,uBAAyB,SAAUngB,GAClD,OAAOpQ,KAAKtH,KAAK63B,uBAAuBngB,IAO5CyL,EAAS5a,UAAUuvB,uBAAyB,SAAUv1B,GAClD,OAAO+E,KAAKtH,KAAK83B,uBAAuBv1B,IAO5C4gB,EAAS5a,UAAUwvB,qBAAuB,SAAUpmB,GAChD,OAAOrK,KAAKtH,KAAK+3B,qBAAqBpmB,IAO1CwR,EAAS5a,UAAUyvB,sBAAwB,SAAUtgB,GACjD,OAAOpQ,KAAKtH,KAAKg4B,sBAAsBtgB,IAO3CyL,EAAS5a,UAAUqP,oBAAsB,SAAUjG,GAC/C,OAAOrK,KAAKtH,KAAK4X,oBAAoBjG,IAMzCwR,EAAS5a,UAAUrB,WAAa,SAAU+wB,GACtC,OAAIvkB,cAAcpM,KAAKoV,iBACZpV,KAAKtH,KAAKL,SAGjB2H,KAAK0e,kBAAkB1e,KAAKtH,KAAKkH,WAAW+wB,IACrC3wB,KAAKwgB,cAGpB3E,EAAS5a,UAAUyd,kBAAoB,SAAU/e,GAC7CK,KAAKwgB,eAIL,IAAK,IADDiM,EAFAmE,GAAgB,EAChBC,EAAcp4B,oBAAkBkH,GAAUK,KAAKtH,KAAKkH,aAAeD,EAE9DvH,EAAI,EAAGA,EAAIy4B,EAAYv4B,OAAQF,IAAK,CACzCq0B,KACA,IAAK,IAAII,EAAK,EAAGC,EAAK1zB,OAAOC,KAAKw3B,EAAYz4B,IAAKy0B,EAAKC,EAAGx0B,OAAQu0B,IAAM,CACrE,IAAItR,EAAOuR,EAAGD,GACTzgB,cAAuB,SAATmP,IACfkR,EAAWlR,GAAQsV,EAAYz4B,GAAGmjB,IAG1Cvb,KAAKwgB,YAAYjnB,KAAK,IAAIuG,EAAO2sB,IAErC,IAAKrgB,eAAepM,KAAKoV,iBAAkB,CAEvCpV,KAAU,WAAK,WACXA,KAAKtH,KAAKL,QAAQC,SAAW0H,KAAKwgB,YAAYloB,SAC9Cs4B,GAAgB,GAEfA,GACD5wB,KAAKwb,eAAgBnjB,QAAS2H,KAAKwgB,cAAe,GAEtDxgB,KAAU,eAAI8a,EAElB,OAAO9a,KAAKwgB,aAMhB3E,EAAS5a,UAAU6vB,WAAa,WAC5B,OAAO9wB,KAAKtH,KAAKo4B,cAErBjV,EAAS5a,UAAUmb,yBAA2B,WAE1Cpc,KAAKtH,KAAa,qBAAEsJ,MAAMhC,OAE9B6b,EAAS5a,UAAU8vB,aAAe,SAAUC,EAAc34B,GAEtD2H,KAAKtH,KAAa,aAAEsJ,MAAMhC,MAAOgxB,EAAc34B,KAEnDwjB,EAAS5a,UAAU6pB,oBAAsB,WACrC9qB,KAAKwb,eAAgBziB,eAAgBO,YAAU,aAAc0G,KAAKtH,KAAKK,kBAAmB,GAC1FiH,KAAKwb,eAAgBhM,aAAclW,YAAU,aAAc0G,KAAKtH,KAAK8W,gBAAiB,GACtFxP,KAAKwb,eAAgB7iB,eAAgBW,YAAU,aAAc0G,KAAKtH,KAAKC,kBAAmB,GAC1FqH,KAAKwb,eAAgBhd,aAAclF,YAAU,aAAc0G,KAAKtH,KAAK8F,gBAAiB,IAM1Fqd,EAAS5a,UAAUkU,gBAAkB,WACjC,OAAOnV,KAAKtH,KAAKyc,mBAMrB0G,EAAS5a,UAAUgwB,YAAc,WAG7B,IAAK,IAFDC,KACAhrB,EAAOlG,KAAKtH,KAAKu4B,cACZ74B,EAAI,EAAGe,EAAM+M,EAAK5N,OAAQF,EAAIe,EAAKf,IACnC8N,EAAK9N,GAAGoO,UAAUC,SAAS,iBAC5ByqB,EAAM33B,KAAK2M,EAAK9N,IAGxB,OAAO84B,GAOXrV,EAAS5a,UAAUvE,sBAAwB,WACvC,OAAOsD,KAAKtH,KAAKwd,iBAMrB2F,EAAS5a,UAAU1E,gBAAkB,WACjC,OAAOyD,KAAKtH,KAAK4D,WAAWC,mBAMhCsf,EAAS5a,UAAUsJ,iBAAmB,WAClC,OAAOvK,KAAKtH,KAAK6R,oBAMrBsR,EAAS5a,UAAUkwB,eAAiB,WAChC,OAAOnxB,KAAKtH,KAAKy4B,kBAOrBtV,EAAS5a,UAAUnC,cAAgB,SAAU7D,GACzC,OAAO+E,KAAKtH,KAAKoG,cAAc7D,IAOnC4gB,EAAS5a,UAAUmwB,WAAa,SAAU/vB,GACtC,OAAOrB,KAAKtH,KAAK04B,WAAW/vB,IAOhCwa,EAAS5a,UAAUowB,oBAAsB,SAAUjhB,GAC/C,OAAOpQ,KAAKtH,KAAK24B,oBAAoBjhB,IAMzCyL,EAAS5a,UAAUiG,kBAAoB,WAEnC,IAAK,IADDoqB,KACKzE,EAAK,EAAGC,EAAK9sB,KAAKwgB,YAAaqM,EAAKC,EAAGx0B,OAAQu0B,IAAM,CAC1D,IAAIziB,EAAM0iB,EAAGD,GACTziB,EAAImnB,SACJD,EAAK/3B,KAAK6Q,GAGlB,OAAOknB,GAKXzV,EAAS5a,UAAUgV,YAAc,WAC7BA,cAAYjW,KAAK2U,UAKrBkH,EAAS5a,UAAU2S,YAAc,WAC7BA,cAAY5T,KAAK2U,UAKrBkH,EAAS5a,UAAUusB,QAAU,WACzBxtB,KAAKtH,KAAK80B,WAOd3R,EAAS5a,UAAU8I,kBAAoB,WACnC,OAAO/J,KAAKskB,gBAAgBpW,qBAMhC2N,EAAS5a,UAAUkN,qBAAuB,WACtC,OAAOnO,KAAKskB,gBAAgBnW,wBAKhC0N,EAAS5a,UAAUoI,iBAAmB,SAAUmoB,GAC5CxxB,KAAKskB,gBAAgBjb,iBAAiBmoB,IAK1C3V,EAAS5a,UAAUmsB,eAAiB,SAAUqE,GACtCh5B,oBAAkBg5B,IAAcA,GAChCzxB,KAAKtH,KAAKL,QAAU2H,KAAK4kB,eAAe5kB,KAAK3H,SAC7C2H,KAAKtH,KAAK00B,kBAGVptB,KAAKtH,KAAK8iB,eAAgBnjB,QAAS2H,KAAK4kB,eAAe5kB,KAAK3H,WAAY,IAMhFwjB,EAAS5a,UAAUywB,cAAgB,WAC/B1xB,KAAKtH,KAAKg5B,iBAOd7V,EAAS5a,UAAUwe,sBAAwB,SAAUpe,GACjD,GAA+B,UAA3BrB,KAAK5D,aAAaC,KAAkB,CAGpC,GAAI2D,KAAKzD,kBAAkByD,KAAKgc,gBAAgB1jB,QAC5C0H,KAAKzD,kBAAkByD,KAAKic,gBAAgB3jB,QAAU0H,KAAKzD,kBAAkByD,KAAK0R,cAAcpZ,OAAQ,CACxG,IAAIq5B,EAAY3xB,KAAKtH,KAAK4D,WAAc,UAGxC,OAFA0D,KAAKtH,KAAK4D,WAAqB,WAAE,aAAcq1B,QAC/C3xB,KAAK4xB,cAAgBvwB,IAI7B,GAAIrB,KAAKoR,YAAa,CAClB,IAAIygB,EAAUxwB,EAAO+H,QAAQ,kBAAkBwW,cAC3CnmB,EAASuG,KAAKtD,wBAAwBm1B,EAAQ9pB,UAC9C1G,EAAOmF,UAAUC,SAAS,oBAC1BzG,KAAKwf,YAAYqS,EAASp4B,GAG1BuG,KAAK2f,UAAUkS,EAASp4B,OAG3B,CAEGA,GADAo4B,EAAU7xB,KAAKtH,KAAK04B,WAAW/vB,IACdyI,QACjBzI,EAAOmF,UAAUC,SAAS,oBAC1BzG,KAAKwf,YAAYqS,EAAQhzB,IAAKpF,GAG9BuG,KAAK2f,UAAUkS,EAAQhzB,IAAKpF,KAQxCoiB,EAAS5a,UAAU0e,UAAY,SAAU9gB,EAAKpF,GAC1C,IAAI6L,EAAQtF,KAERoH,GAASzI,KADblF,EAASuG,KAAK8xB,yBAAyBjzB,EAAKpF,GACjBoF,IAAKA,EAAKwI,QAAQ,GAC7CrH,KAAKsH,QbjmEU,YaimEgBF,EAAM,SAAU2qB,GAC3C,IAAKA,EAAc1qB,SACf/B,EAAM0sB,eAAe,SAAUnzB,EAAKpF,KAC9BjC,EAAa8N,IAAW/K,EAAU+K,MAAYpN,EAAgBoN,IAAQ,CACxE,IAAI2sB,GAAiBtzB,KAAMlF,EAAQoF,IAAKA,GACxCyG,EAAMgC,QAAQ0P,EAAiBib,OAK/CpW,EAAS5a,UAAU6wB,yBAA2B,SAAUjzB,EAAKpF,GAUzD,OATIuG,KAAKuP,aAAkD,QAAnCvP,KAAKwP,aAAaC,cAA0BzP,KAAKygB,aAAehoB,oBAAkBgB,KACrGjC,EAAawI,MACdvG,EAASuG,KAAKnC,SAASC,OAAO,SAAUC,GACpC,OAAOA,EAAE3D,kBAGR3B,oBAAkBgB,KACvBA,EAASuG,KAAKtH,KAAKgE,wBAAwBmC,EAAIkJ,WAE5CtO,GAMXoiB,EAAS5a,UAAUue,YAAc,SAAU3gB,EAAKpF,GAC5C,IAAI6L,EAAQtF,KAERoH,GAASzI,KADblF,EAASuG,KAAK8xB,yBAAyBjzB,EAAKpF,GACjBoF,IAAKA,EAAKwI,QAAQ,GAC7CrH,KAAKsH,Qb3nEW,aa2nEgBF,EAAM,SAAU8qB,GAC5C,IAAKA,EAAe7qB,OAAQ,CACxB/B,EAAM0sB,eAAe,WAAYnzB,EAAKpF,GACtC,IAAIw4B,GAAiBtzB,KAAMlF,EAAQoF,IAAKA,GACnCrH,EAAa8N,IACdA,EAAMgC,QAAQ6qB,EAAkBF,OAShDpW,EAAS5a,UAAUmxB,cAAgB,SAAUl3B,GACzC,IAAM8E,KAAKuP,aAAkD,QAAnCvP,KAAKwP,aAAaC,cAA2BzP,KAAKqN,wBAA0B7V,EAAawI,MAAO,CACtH,IAAIsN,EAAMtN,KAAKtH,KAAKhB,WAAWoG,OAAO,SAAUC,GAI5C,OAHIA,EAAE3D,iBAAmB2D,EAAE7C,QAAUA,IACjC6C,EAAE7D,UAAW,GAEV6D,EAAE3D,iBAAmB2D,EAAE7C,QAAUA,IAE5C8E,KAAK2f,UAAU,KAAMrS,OAMhB,CAHDA,EAAMtN,KAAKqyB,iBAAiBn3B,GAGhC,IAAK,IAFD2D,EAAMvF,YAAU,OAAQgU,GACxB7T,EAASH,YAAU,UAAWgU,GACzBlV,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAC/B4H,KAAK2f,UAAU9gB,EAAIzG,GAAIqB,EAAOrB,MAI1CyjB,EAAS5a,UAAUoxB,iBAAmB,SAAUn3B,GAC5C,IAAIgL,EAAOlG,KAAKjB,UAAUjB,OAAO,SAAUC,GACvC,OAAkD,IAA1CA,EAAE6M,UAAUlM,QAAQ,QAAUxD,KAC9B6C,EAAEoL,cAAc,wBAA0BpL,EAAEoL,cAAc,wBAItE,OADYlQ,QADE+G,KAAKtD,wBAAwBoB,OAAO,SAAUC,GAAK,OAAOA,EAAE7C,QAAUA,GAAS6C,EAAE3D,kBACjE8L,KAAMA,IAOxC2V,EAAS5a,UAAUqxB,gBAAkB,SAAUp3B,GAC3C,IAAM8E,KAAKuP,aAAkD,QAAnCvP,KAAKwP,aAAaC,cAA2BzP,KAAKqN,wBAA0B7V,EAAawI,MAAO,CACtH,IAAIvG,EAASuG,KAAKtH,KAAKhB,WAAWoG,OAAO,SAAUC,GAI/C,OAHIA,EAAE3D,iBAAmB2D,EAAE7C,QAAUA,IACjC6C,EAAE7D,UAAW,GAEV6D,EAAE3D,iBAAmB2D,EAAE7C,QAAUA,IAE5C8E,KAAKwf,YAAY,KAAM/lB,QAMvB,IAAK,IAHD6T,EAAMtN,KAAKqyB,iBAAiBn3B,GAC5BgL,EAAO5M,YAAU,OAAQgU,GACzBrU,EAAUK,YAAU,UAAWgU,GAC1BlV,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChC4H,KAAKwf,YAAYtZ,EAAK9N,GAAIa,EAAQb,KAQ9CyjB,EAAS5a,UAAUoe,UAAY,WAC3Brf,KAAKuyB,kBAAkB,WAM3B1W,EAAS5a,UAAUqe,YAAc,WAC7Btf,KAAKuyB,kBAAkB,aAE3B1W,EAAS5a,UAAUsxB,kBAAoB,SAAU12B,GAC7C,IAAIqK,EAAOlG,KAAKjB,UAAUjB,OAAO,SAAUC,GACvC,OAAOA,EAAEoL,cAAc,eAA4B,WAAXtN,EAAsB,WAAa,aAI/E,GAFAmE,KAAKygB,aAAc,EACnBzgB,KAAK0gB,eAAgB,GACf1gB,KAAKuP,aAAkD,QAAnCvP,KAAKwP,aAAaC,cAA2BzP,KAAKqN,wBAA0B7V,EAAawI,MAC/GA,KAAKnC,SAASC,OAAO,SAAUC,GACvBA,EAAE3D,kBACF2D,EAAE7D,SAAsB,aAAX2B,KAGjBqK,EAAK5N,SACM,aAAXuD,EAAwBmE,KAAKwf,YAAYtZ,EAAK,IAAMlG,KAAK2f,UAAUzZ,EAAK,UAI5E,IAAK,IAAI9N,EAAI,EAAGA,EAAI8N,EAAK5N,OAAQF,IAClB,aAAXyD,EAAwBmE,KAAKwf,YAAYtZ,EAAK9N,IAAM4H,KAAK2f,UAAUzZ,EAAK9N,IAGhF4H,KAAKygB,aAAc,EACnBzgB,KAAK0gB,eAAgB,GAEzB7E,EAAS5a,UAAU+wB,eAAiB,SAAUn2B,EAAQgD,EAAKpF,EAAQwb,GAC/D,IAAI8c,GAAkBlzB,IAAKA,EAAKF,KAAMlF,EAAQ0O,aAAetI,YAAahE,IACrErE,EAAawI,OAAoB,WAAXnE,GAAuBmE,KAAKzE,iBACnDyE,KAAKwyB,oBAAoBT,GAE7B,IAAI7c,EAAWlV,KAAKjB,UACpB,GAAIiB,KAAKoR,YAAa,CAClB,IAAIlL,EAAOlG,KAAKmV,kBAAkBjP,KAClCgP,KAAcxO,MAAMnB,KAAKW,GAa7B,GAVIzN,oBAAkBoG,GAElBA,EAAMqW,EADKlV,KAAKtD,wBAAwBgC,QAAQjF,KAIpCoF,EAAI2L,aAAa,iBAE5B/R,oBAAkBoG,IACnBA,EAAI2M,aAAa,gBAA4B,WAAX3P,EAAsB,OAAS,WAE/DmE,KAAKuP,aAAkD,QAAnCvP,KAAKwP,aAAaC,cAA2BzP,KAAKqN,uBAA0B7V,EAAawI,OAC3G9H,EAAgB8H,MAGnB,CACD,IAAIyyB,OAAgB,EACpB,GAAe,WAAX52B,EAAqB,CACrB42B,EAAgB,YACXxd,IACDxb,EAAOS,UAAW,EAClB8F,KAAK8b,mBAAmBriB,EAAOM,UAAUG,SAAWT,EAAOS,UAE/D,IAAImb,EAAYxW,EAAIyW,uBAAuB,sBAAsB,GACjE,GAAI7c,oBAAkB4c,GAClB,OAEJtG,YAAUsG,GAAY,oBACtB1J,eAAa0J,GAAY,0BAExB,CACDod,EAAgB,OACXxd,IACDxb,EAAOS,UAAW,EAClB8F,KAAK8b,mBAAmBriB,EAAOM,UAAUG,SAAWT,EAAOS,UAE3Dmb,EAAYxW,EAAIyW,uBAAuB,oBAAoB,GAC/D,GAAI7c,oBAAkB4c,GAClB,OAEJtG,YAAUsG,GAAY,sBACtB1J,eAAa0J,GAAY,oBAE7B,IAAIqd,EAAaxd,EAASpX,OAAO,SAAU2D,GACvC,OAAOA,EAAE+E,UAAUC,SAAS,uBAAyBhN,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAE9F1D,EAAawI,QAAUzF,EAAUyF,MACjCA,KAAKoD,aAAavH,EAAQgD,EAAKpF,EAAQwb,GAGlC/c,EAAgB8H,OAAoB,aAAXnE,GAC1BmE,KAAK2yB,YAAY92B,EAAQgD,EAAKpF,EAAQwb,GAG9CjV,KAAKgR,OAAO,qBAAuB0hB,WAAYA,EAAY72B,OAAQ42B,EAAeh5B,OAAQA,EAAQoF,IAAKA,IACvGmB,KAAKooB,aAAalT,QA1ClBlV,KAAKgR,OAAO4hB,GAAmC/2B,OAAQA,EAAQgD,IAAKA,EAAKpF,OAAQA,KA6CzFoiB,EAAS5a,UAAUuxB,oBAAsB,SAAUT,GAC/C,IAAIzsB,EAAQtF,KACR6yB,EAAO,IAAItK,WAEfwJ,EAA2B,cAAIc,EAAKpK,QACpC,IAAIhvB,EAASs4B,EAAcpzB,KAC3BqB,KAAKsH,QAAQ+hB,EAAwB0I,GACrCc,EAAK/I,QAAQ3W,KAAK,SAAUpV,GACxB,GAAIg0B,EAAc5pB,UAAU7P,OAAQ,CAGhC,IAAK,IAFDof,EAAepS,EAAc,SAC7BrK,EAAQ,EACH7C,EAAI,EAAGA,EAAIsf,EAAYpf,OAAQF,IACpC,GAAIsf,EAAYtf,GAAG+E,WAAa1D,EAAO0D,SAAU,CAC7ClC,EAAQ7C,EACR,MAOH,IAJD06B,EAAShjB,WAAS,SAAUxK,EAAM5N,YAClCyQ,EAAYzN,EAAYq3B,EAAc5pB,WACtC4qB,EAAWt5B,EAAO6L,EAAM7H,eACxBhE,EAAO6L,EAAM7H,cAAcnF,OAAS6P,EAAU7P,OAASmB,EAAO6L,EAAM7H,cAAcnF,OAA4B6P,EAAU7P,OAC5H,IAASF,EAAI,EAAGA,EAAI26B,EAAU36B,IACtBqB,EAAO6L,EAAM7H,eACbq1B,EAAOh1B,OAAO,SAAUC,EAAG3F,GACnB2F,EAAEuH,EAAMhI,mBAAqB7D,EAAO6L,EAAM/H,YAC1Cu1B,EAAOt1B,OAAOpF,EAAG,KAIzB+P,EAAU/P,IACV+P,EAAU/P,GAAG8C,MAAQzB,EAAOyB,MAAQ,EACpCiN,EAAU/P,GAAG6C,MAAQ4Z,KAAKC,KAAqB,IAAhBD,KAAKE,UACpC5M,EAAU/P,GAAGyB,WAAa8C,YAAWlD,GACrC0O,EAAU/P,GAAG+E,SAAWR,YAAWwL,EAAU/P,WACtC+P,EAAU/P,GAAGyB,WAAWQ,oBACxB8N,EAAU/P,GAAG+E,SAAStD,WAC7BsO,EAAU/P,GAAGqG,eAAiBhF,EAAOM,SACrCoO,EAAU/P,GAAG2B,SAAW2a,SAAOpP,EAAMqP,QAAQC,GAAK,UAClDnB,WAAS,sBAAwBtL,EAAU/P,GAAG2B,SAAUoO,EAAU/P,GAAIkN,KACjE7M,oBAAkB0P,EAAU/P,GAAGkN,EAAM7H,gBACrC0K,EAAU/P,GAAGkN,EAAMwN,kBAAoB5a,EAAgBoN,MACxD6C,EAAU/P,GAAGgC,iBAAkB,GAEnCsd,EAAYla,OAAOvC,EAAQ,EAAI7C,EAAGqB,EAAO6L,EAAM7H,eAAiBhE,EAAO6L,EAAM7H,cAAcrF,GAAK,EAAI,EAAG+P,EAAU/P,KAGjHsf,EAAYla,OAAOvC,EAAQ,EAAI7C,EAAG,GAG1Csf,EAAYzc,GAAOqK,EAAM7H,cAAgB0K,EACzCuP,EAAYzc,GAAOZ,aAAe8N,EAClCuP,EAAYzc,GAAOf,UAAW,EAC9BuZ,WAAS,sBAAwBiE,EAAYzc,GAAOlB,SAAU2d,EAAYzc,GAAQqK,GAClF,IAAK,IAAIxK,EAAI,EAAGA,EAAIi3B,EAAc5pB,UAAU7P,OAAQwC,IAChDg4B,EAAOv5B,KAAKw4B,EAAc5pB,UAAUrN,IAG5CwK,EAAM8jB,iBAAkB,EACxB9jB,EAAMkoB,UACNloB,EAAMgC,QAAQ0P,EAAiB+a,MAGvClW,EAAS5a,UAAUmC,aAAe,SAAUvH,EAAQgD,EAAKpF,EAAQwb,GAC7D,IAAIC,EAAWlV,KAAKjB,UACpB,GAAIiB,KAAKoR,YAAa,CAClB,IAAI4hB,EAAShzB,KAAKmV,kBAAkBjP,KACpCgP,KAAcxO,MAAMnB,KAAKytB,GAE7B,IAAI5rB,GAASzI,KAAMlF,EAAQoF,IAAKA,GAC5BqH,KAIJ,GAHAA,EAAOgP,EAASpX,OAAO,SAAU2D,GAC7B,OAAOA,EAAE0H,cAAc,kBAAoB1P,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAEzE,WAAXW,EAAqB,CACrBmE,KAAKgR,OAAOqB,GAAuB5Y,OAAQA,EAAQyM,KAAMA,EAAMuP,UAAW5W,IAC1E,IAAIo0B,GAAWp0B,IAAKA,EAAKF,KAAMlF,GAC3ByM,EAAK5N,OAAS,GACd0H,KAAKsH,QAAQ0P,EAAiBic,QAIlCjzB,KAAKkzB,qBAAsBz5B,OAAQA,EAAQyM,KAAMA,IACjDlG,KAAKsH,QAAQ6qB,EAAkB/qB,IAGvCyU,EAAS5a,UAAU0xB,YAAc,SAAU92B,EAAQgD,EAAKpF,EAAQwb,GAC5D,IAGIke,EAHA94B,EAAe2F,KAAKtD,wBAAwBoB,OAAO,SAAUC,GAC7D,OAAOA,EAAEU,iBAAmBhF,EAAOM,WAGnCmb,EAAWlV,KAAKjB,UACpB,GAAIiB,KAAKoR,YAAa,CAClB,IAAIgiB,EAASpzB,KAAKmV,kBAAkBjP,KACpCgP,KAAcxO,MAAMnB,KAAK6tB,GAE7B,IAAIX,EAA4B,WAAX52B,EAAuB,YAAc,OAEtDqK,GADQ7L,EAAa,GAAGR,WAAWoB,MAC5Bia,EAASpX,OAAO,SAAU2D,GACjC,OAAOA,EAAE0H,cAAc,kBAAoB1P,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,QAEpF8E,KAAKd,YAAcc,KAAKN,eAAiBM,KAAKb,sBAC9Cg0B,EAAcnzB,KAAKqzB,iBAAiBv1B,OAAO,SAAU2D,GACjD,OAAOA,EAAE0H,cAAc,kBAAoB1P,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,OAG5F,IAAK,IAAI9C,EAAI,EAAGA,EAAI8N,EAAK5N,OAAQF,IAC7B8N,EAAK9N,GAAG8S,MAAMyE,QAAU8iB,EACnBh6B,oBAAkB06B,KACnBA,EAAY/6B,GAAG8S,MAAMyE,QAAU8iB,GAEnCzyB,KAAKgR,OAAO,kBAAoBnS,IAAKqH,EAAK9N,KACrCK,oBAAkB4B,EAAajC,GAAGiC,eAA6B,WAAXwB,IACrDpD,oBAAkB4B,EAAajC,GAAG8B,YAAaG,EAAajC,GAAG8B,WAC/D8F,KAAKgyB,eAAen2B,EAAQqK,EAAK9N,GAAIiC,EAAajC,IAAI,GAClD4H,KAAKN,eAAiBM,KAAKP,kBAAoBhH,oBAAkB06B,IACjEnzB,KAAKgyB,eAAen2B,EAAQs3B,EAAY/6B,GAAIiC,EAAajC,IAAI,KAK7EyjB,EAAS5a,UAAUmnB,aAAe,SAAUliB,GACxC,GAAIlG,KAAKglB,eAAiBhlB,KAAKoR,YAE3B,IAAK,IADDkiB,EAAkB,EACbl7B,EAAI,EAAG8N,GAAQ9N,EAAI8N,EAAK5N,OAAQF,IAAK,CAC1C,IAAIm7B,EAAUrtB,EAAK9N,GACW,SAA1Bm7B,EAAQroB,MAAMyE,UACV4jB,EAAQ/sB,UAAUC,SAAS,aAC3BkF,eAAa4nB,GAAU,YAEvBD,EAAkB,GAAM,GAAMC,EAAQ/sB,UAAUC,SAAS,iBAAoB8sB,EAAQ/sB,UAAUC,SAAS,gBACxGsI,YAAUwkB,GAAU,YAEnBA,EAAQ/sB,UAAUC,SAAS,iBAAoB8sB,EAAQ/sB,UAAUC,SAAS,gBAC3E6sB,OAMpBzX,EAAS5a,UAAUspB,sBAAwB,SAAUnjB,GACjD,GAAIpH,KAAKoR,YAAa,CAClB,IAAIlL,EAAOlG,KAAKmV,kBAAkBjP,KAClCA,KAAUQ,MAAMnB,KAAKW,GACrB,IAAK,IAAI9N,EAAI,EAAGA,EAAI8N,EAAK5N,OAAQF,IAAK,CAClC,IAAIo7B,EAAQxzB,KAAKtH,KAAKyc,kBAAkBjP,KAAK9N,GAAGoH,MAAMQ,KAAKP,iBACvDZ,EAAMqH,EAAK9N,GAEXq7B,GAAQ90B,KADEqB,KAAKtH,KAAKg7B,gBAAgBt7B,GAAGuG,KAChBE,IAAKA,EAAKU,KAAMi0B,EAAO7zB,OAAQK,KAAKJ,aAAaI,KAAKP,kBACjFO,KAAKX,aAAaC,WAAWm0B,MAIzC5X,EAAS5a,UAAUiyB,oBAAsB,SAAUle,EAAYC,GACtDA,IACDD,EAAWvb,OAAOS,UAAW,GAIjC,IAAK,IADD8S,EADA9G,EAAO8O,EAAW9O,KAEb9N,EAAI,EAAGA,EAAI8N,EAAK5N,OAAQF,IAAK,CAC9BgU,cAAcpM,KAAKoV,kBACnBzJ,eAAazF,EAAK9N,IAAK,qBACvB2W,YAAU7I,EAAK9N,IAAK,uBAGpB8N,EAAK9N,GAAG8S,MAAMyE,QAAU,OAE5B,IAAIgkB,EAAeztB,EAAK9N,GAAG+Q,cAAc,sBAIzC,GAHK1Q,oBAAkBk7B,IACnB3zB,KAAKtH,KAAKid,gBAAgBie,SAASD,GAEnCztB,EAAK9N,GAAG+Q,cAAc,6CAA8C,CACpE,IAAI0qB,EAAgB3tB,EAAK9N,GAAG+Q,cAAc,6CAC1C6D,EAAchN,KAAKoR,YAAcpR,KAAKtH,KAAKgE,wBAAwBwJ,EAAK9N,GAAG2P,UACvE/H,KAAKtH,KAAK6c,oBAAoBrP,EAAK9N,GAAGoS,aAAa,aAAa7L,MAC/DlG,oBAAkBo7B,IAAkB7mB,EAAY9S,WACjDyR,eAAakoB,GAAgB,oBAC7B9kB,YAAU8kB,GAAgB,uBAI9B,IAAK,IAFDC,KACAC,EAAQ/zB,KAAKjB,UACRi1B,EAAM,EAAGA,EAAMD,EAAMz7B,OAAQ07B,IAC9BD,EAAMC,GAAK7qB,cAAc,kBAAoB6D,EAAY/R,MAAQ,SAAW+R,EAAY9R,MAAQ,KAChG44B,EAAKv6B,KAAKw6B,EAAMC,IAGpBF,EAAKx7B,QAAU0U,EAAY9S,UAC3B8F,KAAKkzB,qBAAsBz5B,OAAQuT,EAAa9G,KAAM4tB,IAAQ,MAQ9EjY,EAAS5a,UAAUqiB,YAAc,WAC7BtjB,KAAKwI,GAAG,gBAAiBxI,KAAKi0B,kBAAmBj0B,MACjDA,KAAKtH,KAAK8P,GAAG,cAAexI,KAAKikB,gBAAiBjkB,OAEtD6b,EAAS5a,UAAUgzB,kBAAoB,SAAUC,GAC7Cl0B,KAAKiS,YAAciiB,GAKvBrY,EAAS5a,UAAUysB,eAAiB,WAC5B1tB,KAAK8I,cAGT9I,KAAK+I,IAAI,gBAAiB/I,KAAKi0B,mBAC/Bj0B,KAAKtH,KAAKqQ,IAAI,cAAe/I,KAAKikB,mBAgBtCpI,EAAS5a,UAAUkzB,eAAiB,SAAUtF,EAAWuF,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,GACzI10B,KAAKtH,KAAKy7B,eAAetF,EAAWuF,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,IAM5H7Y,EAAS5a,UAAU0zB,eAAiB,WAChC30B,KAAKtH,KAAKi8B,kBASd9Y,EAAS5a,UAAU2zB,0BAA4B,SAAUxkB,EAAOykB,GAC5D70B,KAAKtH,KAAKk8B,0BAA0BxkB,EAAOykB,IAQ/ChZ,EAAS5a,UAAU8e,UAAY,SAAU9kB,EAAO65B,GAC5C90B,KAAKtH,KAAKqnB,UAAU9kB,EAAO65B,IAO/BjZ,EAAS5a,UAAU8zB,WAAa,SAAU7oB,GACtClM,KAAKtH,KAAKq8B,WAAW7oB,IAMzB2P,EAAS5a,UAAUgf,eAAiB,WAChCjgB,KAAKtH,KAAKunB,kBAMdpE,EAAS5a,UAAU4G,KAAO,SAAUjC,GAChC5F,KAAKkkB,gBAAgBrc,KAAKjC,IAQ9BiW,EAAS5a,UAAU6G,MAAQ,SAAUnJ,EAAMoJ,EAAUC,GACjDhI,KAAKkkB,gBAAgBpc,MAAMnJ,EAAMoJ,EAAUC,IAQ/C6T,EAAS5a,UAAU+zB,WAAa,SAAUhV,EAAW8U,GACjD90B,KAAKtH,KAAKs8B,WAAWhV,EAAW8U,IAMpCjZ,EAAS5a,UAAUg0B,gBAAkB,WACjC,OAAOj1B,KAAKtH,KAAKu8B,mBAQrBpZ,EAAS5a,UAAUi0B,wBAA0B,SAAUntB,EAAUoC,GAC7D,OAAOnK,KAAKtH,KAAKw8B,wBAAwBntB,EAAUoC,IAMvD0R,EAAS5a,UAAU2M,mBAAqB,WACpC,OAAO5N,KAAKtH,KAAKkV,sBAOrBiO,EAAS5a,UAAU7B,qBAAuB,SAAUnE,GAChD,OAAO+E,KAAKtH,KAAK0G,qBAAqBnE,IAM1C4gB,EAAS5a,UAAUoyB,eAAiB,WAChC,OAAOrzB,KAAKtH,KAAK26B,kBAKrBxX,EAAS5a,UAAU9B,iBAAmB,WAClC,OAAOa,KAAKm1B,eAAen1B,KAAK3H,QAAS,IAE7CwjB,EAAS5a,UAAUk0B,eAAiB,SAAU7D,EAAM8D,GAChD,IAAK,IAAIh9B,EAAI,EAAGe,EAAMm4B,EAAKh5B,OAAQF,EAAIe,EAAKf,IACpCk5B,EAAKl5B,GAAGC,QACR+8B,EAAMp1B,KAAKm1B,eAAe7D,EAAKl5B,GAAGC,QAAS+8B,GAGvC9D,EAAKl5B,GAAGi9B,UACRD,IAIZ,OAAOA,GAMXvZ,EAAS5a,UAAUoF,sBAAwB,WACvC,OAAOrG,KAAKtH,KAAK2N,yBAMrBwV,EAAS5a,UAAUq0B,0BAA4B,WAC3C,OAAOt1B,KAAKtH,KAAK48B,6BAOrBzZ,EAAS5a,UAAU4F,mBAAqB,WACpC,OAAO7G,KAAKtH,KAAKmO,sBAMrBgV,EAAS5a,UAAU4U,cAAgB,WAC/B,OAAS0f,WAAYv1B,KAAKtH,KAAKmd,gBAAiB2f,WAAYx1B,KAAKgjB,aAKrEnH,EAAS5a,UAAUw0B,YAAc,SAAUC,EAAaC,EAASnH,GAC7DxuB,KAAK41B,qBAAqBH,YAAYC,EAAaC,EAASnH,IAEhE,IAAItS,EA+WJ,OA9WA/a,IACIc,WAAS,IACV4Z,EAAS5a,UAAW,kBAAc,GACrCE,IACIc,WAAS,IACV4Z,EAAS5a,UAAW,qBAAiB,GACxCE,IACIc,WAAS,aACV4Z,EAAS5a,UAAW,gBAAY,GACnCE,IACIc,gBACD4Z,EAAS5a,UAAW,eAAW,GAClCE,IACIc,WAAS,OACV4Z,EAAS5a,UAAW,oBAAgB,GACvCE,IACIc,WAAS,OACV4Z,EAAS5a,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,IACV4Z,EAAS5a,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,OACV4Z,EAAS5a,UAAW,iBAAa,GACpCE,IACIc,WAAS,OACV4Z,EAAS5a,UAAW,uBAAmB,GAC1CE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,yBAAqB,GAC5CE,IACIc,WAAS,OACV4Z,EAAS5a,UAAW,0BAAsB,GAC7CE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,2BAAuB,GAC9CE,IACIc,gBACD4Z,EAAS5a,UAAW,kBAAc,GACrCE,IACIc,cACD4Z,EAAS5a,UAAW,aAAS,GAChCE,IACIc,cACD4Z,EAAS5a,UAAW,kBAAc,GACrCE,IACIc,WAAS,aACV4Z,EAAS5a,UAAW,iBAAa,GACpCE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,mBAAe,GACtCE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,qBAAiB,GACxCE,IACI00B,aAAYxzB,IACbwZ,EAAS5a,UAAW,wBAAoB,GAC3CE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,uBAAmB,GAC1CE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,0BAAsB,GAC7CE,IACI00B,aAAY/b,KACb+B,EAAS5a,UAAW,oBAAgB,GACvCE,IACI00B,aAAYC,oBACbja,EAAS5a,UAAW,uBAAmB,GAC1CE,IACIc,cACD4Z,EAAS5a,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,sBAAkB,GACzCE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,yBAAqB,GAC5CE,IACI00B,aAAYja,KACbC,EAAS5a,UAAW,oBAAgB,GACvCE,IACIiB,gBAAeqZ,KAChBI,EAAS5a,UAAW,kBAAc,GACrCE,IACI00B,aAAYna,KACbG,EAAS5a,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,sBAAkB,GACzCE,IACIc,cACD4Z,EAAS5a,UAAW,sBAAkB,GACzCE,IACI00B,aAAY1zB,IACb0Z,EAAS5a,UAAW,sBAAkB,GACzCE,IACI00B,aAAY5mB,KACb4M,EAAS5a,UAAW,sBAAkB,GACzCE,IACIc,cACD4Z,EAAS5a,UAAW,eAAW,GAClCE,IACIc,cACD4Z,EAAS5a,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,YACV4Z,EAAS5a,UAAW,iBAAa,GACpCE,IACIc,cACD4Z,EAAS5a,UAAW,wBAAoB,GAC3CE,IACIc,cACD4Z,EAAS5a,UAAW,uBAAmB,GAC1CE,IACIc,cACD4Z,EAAS5a,UAAW,mBAAe,GACtCE,IACIc,WAAS,WACV4Z,EAAS5a,UAAW,yBAAqB,GAC5CE,IACIc,WAAS,OACV4Z,EAAS5a,UAAW,iBAAa,GACpCE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,mBAAe,GACtCE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,sBAAkB,GACzCE,IACIc,WAAS,SACV4Z,EAAS5a,UAAW,cAAU,GACjCE,IACIc,WAAS,SACV4Z,EAAS5a,UAAW,aAAS,GAChCE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,4BAAwB,GAC/CE,IACIc,WAAS,QACV4Z,EAAS5a,UAAW,uBAAmB,GAC1CE,IACI40B,WACDla,EAAS5a,UAAW,eAAW,GAClCE,IACI40B,WACDla,EAAS5a,UAAW,YAAQ,GAC/BE,IACI40B,WACDla,EAAS5a,UAAW,iBAAa,GACpCE,IACI40B,WACDla,EAAS5a,UAAW,gBAAY,GACnCE,IACI40B,WACDla,EAAS5a,UAAW,kBAAc,GACrCE,IACI40B,WACDla,EAAS5a,UAAW,iBAAa,GACpCE,IACI40B,WACDla,EAAS5a,UAAW,gBAAY,GACnCE,IACI40B,WACDla,EAAS5a,UAAW,iBAAa,GACpCE,IACI40B,WACDla,EAAS5a,UAAW,mBAAe,GACtCE,IACI40B,WACDla,EAAS5a,UAAW,sBAAkB,GACzCE,IACI40B,WACDla,EAAS5a,UAAW,iBAAa,GACpCE,IACI40B,WACDla,EAAS5a,UAAW,gBAAY,GACnCE,IACI40B,WACDla,EAAS5a,UAAW,mBAAe,GACtCE,IACI40B,WACDla,EAAS5a,UAAW,mBAAe,GACtCE,IACI40B,WACDla,EAAS5a,UAAW,sBAAkB,GACzCE,IACI40B,WACDla,EAAS5a,UAAW,yBAAqB,GAC5CE,IACI40B,WACDla,EAAS5a,UAAW,uBAAmB,GAC1CE,IACI40B,WACDla,EAAS5a,UAAW,gBAAY,GACnCE,IACI40B,WACDla,EAAS5a,UAAW,qBAAiB,GACxCE,IACI40B,WACDla,EAAS5a,UAAW,iBAAa,GACpCE,IACI40B,WACDla,EAAS5a,UAAW,yBAAqB,GAC5CE,IACI40B,WACDla,EAAS5a,UAAW,uBAAmB,GAC1CE,IACI40B,WACDla,EAAS5a,UAAW,yBAAqB,GAC5CE,IACI40B,WACDla,EAAS5a,UAAW,oBAAgB,GACvCE,IACI40B,WACDla,EAAS5a,UAAW,uBAAmB,GAC1CE,IACI40B,WACDla,EAAS5a,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV4Z,EAAS5a,UAAW,sBAAkB,GACzCE,IACI40B,WACDla,EAAS5a,UAAW,oBAAgB,GACvCE,IACI40B,WACDla,EAAS5a,UAAW,mBAAe,GACtCE,IACI40B,WACDla,EAAS5a,UAAW,sBAAkB,GACzCE,IACI40B,WACDla,EAAS5a,UAAW,qBAAiB,GACxCE,IACI40B,WACDla,EAAS5a,UAAW,sBAAkB,GACzCE,IACI40B,WACDla,EAAS5a,UAAW,qBAAiB,GACxCE,IACI40B,WACDla,EAAS5a,UAAW,sBAAkB,GACzCE,IACI40B,WACDla,EAAS5a,UAAW,uBAAmB,GAC1CE,IACI40B,WACDla,EAAS5a,UAAW,oBAAgB,GACvCE,IACI40B,WACDla,EAAS5a,UAAW,uBAAmB,GAC1CE,IACI40B,WACDla,EAAS5a,UAAW,sBAAkB,GACzCE,IACI40B,WACDla,EAAS5a,UAAW,mBAAe,GACtCE,IACI40B,WACDla,EAAS5a,UAAW,gBAAY,GACnCE,IACI40B,WACDla,EAAS5a,UAAW,kBAAc,GACrCE,IACI40B,WACDla,EAAS5a,UAAW,uBAAmB,GAC1CE,IACI40B,WACDla,EAAS5a,UAAW,kBAAc,GACrCE,IACI40B,WACDla,EAAS5a,UAAW,kBAAc,GACrCE,IACI40B,WACDla,EAAS5a,UAAW,sBAAkB,GACzCE,IACI40B,WACDla,EAAS5a,UAAW,qBAAiB,GACxCE,IACI40B,WACDla,EAAS5a,UAAW,mBAAe,GACtCE,IACI40B,WACDla,EAAS5a,UAAW,oBAAgB,GACvCE,IACI40B,WACDla,EAAS5a,UAAW,uBAAmB,GAC1CE,IACI40B,WACDla,EAAS5a,UAAW,uBAAmB,GAC1CE,IACI40B,WACDla,EAAS5a,UAAW,wBAA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"}