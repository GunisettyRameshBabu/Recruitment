{"version":3,"file":"ej2-treemap.umd.min.js","sources":["../src/treemap/utils/helper.js","../src/treemap/model/theme.js","../src/treemap/model/constants.js","../src/treemap/model/base.js","../src/treemap/layout/render-panel.js","../src/treemap/utils/export.js","../src/treemap/treemap.js","../src/treemap/layout/legend.js","../src/treemap/user-interaction/highlight-selection.js","../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject;\n    htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n * @private\n */\n/* tslint:disable:no-string-literal */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var drillLevelText = void 0;\n        var spacing = 5;\n        drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    var measureElementId = document.getElementById(element.id);\n    measureElementId.parentNode.removeChild(measureElementId);\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function maintainSelection(treemap, element, className) {\n    var elementId = treemap.levelSelection;\n    if (elementId) {\n        for (var index = 0; index < elementId.length; index++) {\n            if (element.getAttribute('id') === elementId[index]) {\n                if (element.childElementCount > 0) {\n                    element.children[0].setAttribute('class', className);\n                    applyOptions(element.childNodes[0], {\n                        border: treemap.selectionSettings.border, fill: treemap.selectionSettings.fill,\n                        opacity: treemap.selectionSettings.opacity\n                    });\n                }\n            }\n            else {\n                element.setAttribute('class', '');\n            }\n        }\n    }\n}\nexport function legendMaintain(treemap, legendGroup) {\n    var elementId = treemap.legendId;\n    if (elementId) {\n        for (var i = 0; i < elementId.length; i++) {\n            for (var j = 0; j < legendGroup.childElementCount; j++) {\n                if (legendGroup.childNodes[j]['id'] === elementId[i]) {\n                    legendGroup.childNodes[j].setAttribute('fill', treemap.selectionSettings.fill);\n                    legendGroup.childNodes[j].setAttribute('stroke', treemap.selectionSettings.border.color);\n                    legendGroup.childNodes[j].setAttribute('stroke-width', (treemap.selectionSettings.border.width).toString());\n                    legendGroup.childNodes[j].setAttribute('opacity', treemap.selectionSettings.opacity);\n                }\n            }\n        }\n    }\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = isNullOrUndefined(elements[j].childNodes[0]) ? elements[j] :\n            elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Triggers when the treemap is on load.\n * @private\n */\nexport var load = 'load';\n/**\n * Triggers after treemap rendered.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Trigger before call the print method.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Trigger before each treemap item rendered.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Trigger after click on treemap item.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Trigger after drill start event completed.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Trigger after select the treemap item.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Trigger after hover on the treemap item.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Trigger after mouse hover on the treemap item.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Trigger after click on the treemap item.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Trigger after mouse hover on the treemap item.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Trigger after click on the treemap item.\n * @private\n */\nexport var click = 'click';\n/**\n * Trigger after double click on the treemap item.\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Trigger after right click on the treemap item.\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Trigger after mouse hover on the treemap item.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Trigger before each treemap item.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Trigger before legend items.\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Trigger after resize the treemap.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Define the font family in treemap component.\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\n/**\n * Sets and gets the options for customizing the color and width of the border in treemap component.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the margin for the treemap component.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the style of the text contents in the treemap component.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options for customizing the common title of the treemap component.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * Sets and gets the options for customizing the subtitle of the treemap component.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * Sets and gets the options for customizing the title of the treemap component.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\n/**\n * Sets and gets the options to customize the color-mapping in treemap component.\n */\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Sets and gets the options for customizing the legend of the treemap component.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n * Sets and gets the settings for drill to visualize the treemap rendered in the initial state.\n */\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\n/**\n * Sets and gets the options for customizing the leaf item of the treemap component.\n */\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\n/**\n * Sets and gets the options for customizing the tooltip of the treemap component.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * Sets and gets the options for customizing the selection of the leaf items in treemap component.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('null')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Sets and gets the options for customizing the highlighting of the treemap item,\n * when the mouse hover is performed in it.\n */\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Sets and gets the options for customizing the levels of the treemap component.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem, maintainSelection } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\nimport { LevelsData } from './../treemap';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (LevelsData.levelsData && LevelsData.levelsData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(LevelsData.levelsData[0], [])[0] : LevelsData.levelsData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                var x = this.treemap.drilledItems[count]['data'];\n                var y = new Object();\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(y || LevelsData.levelsData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(data || LevelsData.levelsData[0]);\n            }\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        var parentItem = new Object();\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        var parentItemGroupname = new Object();\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var _this = this;\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? convertToContainer(this_1.treemap.totalRect) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = this_1.treemap.themeStyle.labelFontFamily || textStyle.fontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap, text: renderText,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options']\n            };\n            if (this_1.treemap.isBlazor) {\n                var treemap = eventArgs.treemap, RenderItems = eventArgs.RenderItems, blazorEventArgs = __rest(eventArgs, [\"treemap\", \"RenderItems\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        if (eventArgs.text !== renderText) {\n                            eventArgs.text = textFormatter(eventArgs.text, item['data'], _this.treemap) || levelName;\n                        }\n                        _this.renderItemText(eventArgs.text.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item, isLeafItem);\n                        templateGroup.appendChild(templateEle);\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    itemGroup.setAttribute('tabindex', (_this.treemap.tabIndex + i + 2).toString());\n                    maintainSelection(_this.treemap, itemGroup, 'treeMapSelection');\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n            updateBlazorTemplate(this.treemap.element.id + '_HeaderTemplate', 'HeaderTemplate', levels[levels.length - 1]);\n            updateBlazorTemplate(this.treemap.element.id + '_LabelTemplate', 'LabelTemplate', leaf);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(LevelsData.defaultLevelsData)) {\n            if (LevelsData.defaultLevelsData.length > 0) {\n                LevelsData.levelsData = LevelsData.defaultLevelsData;\n            }\n        }\n        var parentData = findChildren(LevelsData.levelsData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item, isLeafItem) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        var templateId = isLeafItem ? groupId + '_LabelTemplate' : groupId + '_HeaderTemplate';\n        var baseTemplateId = isLeafItem ? '_LabelTemplate' : '_HeaderTemplate';\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], null, null, this.treemap.element.id + baseTemplateId, false);\n        labelEle = convertElement(templateElement, templateId, item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * This method is used to perform the print functionality in treemap.\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData, function () {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Components\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Complex, Collection, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape, textFormatter } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the treemap component.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        /** @private */\n        _this.levelSelection = [];\n        /** @private */\n        _this.legendId = [];\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var _this = this;\n        this.isBlazor = isBlazor();\n        this.trigger(load, { treemap: this.isBlazor ? null : this }, function () {\n            _this.initPrivateVariable();\n            _this.unWireEVents();\n            _this.createSvg();\n            _this.wireEVents();\n            _this.setCulture();\n        });\n    };\n    TreeMap.prototype.render = function () {\n        LevelsData.levelsData = null;\n        LevelsData.defaultLevelsData = null;\n        LevelsData.hierarchyData = null;\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(LevelsData.levelsData)) {\n            LevelsData.defaultLevelsData = LevelsData.levelsData;\n        }\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this.isBlazor ? null : this });\n        this.renderComplete();\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        if (this.leafItemSettings.labelTemplate) {\n            resetBlazorTemplate(this.element.id + '_LabelTemplate', 'LabelTemplate');\n        }\n        for (var i = 0; i < this.levels.length; i++) {\n            if (this.levels[i].headerTemplate) {\n                resetBlazorTemplate(this.element.id + '_HeaderTemplate', 'HeaderTemplate');\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.parentNode.removeChild(secondaryEle);\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        title.textStyle.fontFamily = this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        title.textStyle.size = this.themeStyle.fontSize || title.textStyle.size;\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            LevelsData.levelsData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                LevelsData.levelsData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    LevelsData.hierarchyData = [];\n                    LevelsData.hierarchyData = extend([], this.dataSource, LevelsData.hierarchyData, true);\n                    for (var i = 0; i < LevelsData.hierarchyData.length; i++) {\n                        this.processHierarchicalData(LevelsData.hierarchyData[i], i);\n                    }\n                    LevelsData.levelsData = LevelsData.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (LevelsData.levelsData.length > 1) {\n                        this.reOrderLevelData(LevelsData.levelsData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(LevelsData.levelsData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === LevelsData.hierarchyData.length - 1) {\n            var mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < LevelsData.hierarchyData.length; k++) {\n                childData = findChildren(LevelsData.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    LevelsData.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * This method is used to perform the print functionality in treemap.\n     * @param id - Specifies the element to print the treemap.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     * @param type - Specifies the index of the axis.\n     * @param fileName - Specifies file name for exporting the rendered treemap.\n     * @param orientation - Specifies the orientation of the pdf document.\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            LevelsData.levelsData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        LevelsData.levelsData[LevelsData.levelsData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * This method orders the treemap level data.\n     * @param start - Specifies the start value of the treemap level.\n     */\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = LevelsData.levelsData[start][currentPath];\n        var previousData = LevelsData.levelsData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(LevelsData.levelsData[LevelsData.levelsData.length - 1][currentPath], 'Child');\n        LevelsData.levelsData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    /**\n     * This method finds the weight value of the treemap level.\n     * @param processData - Specifies the treemap data.\n     * @param type - Specifies the type of the data.\n     */\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * This method handles the window resize event on treemap.\n     * @param e - Specifies the pointer event.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this.isBlazor ? null : this\n        };\n        if (this.isBlazor) {\n            var treemap = args.treemap, blazorEventArgs = __rest(args, [\"treemap\"]);\n            args = blazorEventArgs;\n        }\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args, function (observedArgs) {\n                    _this.render();\n                });\n            }, 500);\n        }\n    };\n    /**\n     * This method handles the click event on the treemap.\n     * @param e - Specifies the mouse click event in the treemap.\n     */\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var labelText = targetEle.innerHTML;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        var clickBlazorArgs = { cancel: false, name: click, mouseEvent: e };\n        this.trigger(click, this.isBlazor ? clickBlazorArgs : clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name'],\n                text: labelText, contentItemTemplate: labelText\n            };\n            if (this.isBlazor) {\n                var data = {\n                    groupIndex: eventArgs.item['groupIndex'],\n                    groupName: eventArgs.item['groupName'],\n                    isDrilled: eventArgs.item['isDrilled'],\n                    isLeafItem: eventArgs.item['isLeafItem'],\n                    itemArea: eventArgs.item['itemArea'],\n                    levelOrderName: eventArgs.item['levelOrderName'],\n                    name: eventArgs.item['name'],\n                    options: eventArgs.item['options'],\n                    rect: eventArgs.item['rect']\n                };\n                eventArgs.item = data;\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemClick, eventArgs, function (observedArgs) {\n                if (observedArgs.text !== labelText || observedArgs.contentItemTemplate !== labelText) {\n                    if (isNullOrUndefined(_this.leafItemSettings.labelTemplate)) {\n                        observedArgs.text = textFormatter(observedArgs.text, observedArgs['item']['data'], observedArgs.treemap);\n                        targetEle.innerHTML = observedArgs.text;\n                    }\n                    else {\n                        var itemSelect = targetId.split('_RectPath')[0];\n                        var itemTemplate = void 0;\n                        if (targetId.indexOf('_LabelTemplate') > -1) {\n                            itemTemplate = targetEle;\n                        }\n                        else {\n                            itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n                        }\n                        if (!isNullOrUndefined(itemTemplate)) {\n                            if (_this.isBlazor) {\n                                var templateElement = createElement('div');\n                                templateElement.innerHTML = observedArgs.contentItemTemplate;\n                                var currentTemplateElement = templateElement.children[0].firstElementChild;\n                                itemTemplate['style']['left'] = Number(itemTemplate['style']['left'].split('px')[0])\n                                    - (currentTemplateElement['style']['width'].split('px')[0] / 2) + 'px';\n                                itemTemplate['style']['top'] = Number(itemTemplate['style']['top'].split('px')[0])\n                                    - (currentTemplateElement['style']['height'].split('px')[0] / 2) + 'px';\n                            }\n                            itemTemplate.innerHTML = observedArgs.contentItemTemplate;\n                        }\n                    }\n                }\n            });\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    /**\n     * This method handles the double click event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        var doubleClickBlazorArgs = { cancel: false, name: doubleClick, mouseEvent: e };\n        this.trigger(doubleClick, this.isBlazor ? doubleClickBlazorArgs : doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    /**\n     * This method handles the right click event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        var rightClickBlazorArgs = { cancel: false, name: rightClick, mouseEvent: e };\n        this.trigger(rightClick, this.isBlazor ? rightClickBlazorArgs : rightClickArgs);\n    };\n    /**\n     * This method handles the mouse down event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    /**\n     * This method handles the mouse move event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        var moveBlazorArgs = { cancel: false, name: mouseMove, mouseEvent: e };\n        this.trigger(mouseMove, this.isBlazor ? moveBlazorArgs : moveArgs);\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            if (this.isBlazor) {\n                var data = {\n                    isLeafItem: eventArgs.item['isLeafItem'],\n                    groupIndex: eventArgs.item['groupIndex'],\n                    groupName: eventArgs.item['groupName'],\n                    isDrilled: eventArgs.item['isDrilled'],\n                    itemArea: eventArgs.item['itemArea'],\n                    levelOrderName: eventArgs.item['levelOrderName'],\n                    name: eventArgs.item['name'],\n                    rect: eventArgs.item['rect'],\n                    options: eventArgs.item['options']\n                };\n                eventArgs.item = data;\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    /**\n     * This method calculates the selected treemap levels.\n     * @param labelText - Specifies the label text.\n     * @param item - Specifies the treemap item.\n     */\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    /**\n     * This method calculates the previous level of child items in treemap.\n     * @param labelText - Specifies the label text in treemap\n     * @param drillLevelValues - Specifies the values of drill level.\n     * @param item - Specifies the treemap item.\n     * @param directLevel - Specifies the current level.\n     */\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    /**\n     * This method compares the selected labels with the drill down items.\n     * @param drillLevelValues - Specifies the values of drill level.\n     * @param item - Specifies the treemap item.\n     * @param i - Specifies the treemap item.\n     */\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        var drillLevelChild;\n        var newDrillItem = new Object();\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /**\n     * This method handles mouse end event in treemap.\n     * @param e - Specifies the pointer event of mouse.\n     */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        var endBlazorEvent;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this.isBlazor ? null : this,\n                    element: targetEle, groupIndex: this.enableBreadcrumb &&\n                        this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null, item: this.isBlazor ? null : newDrillItem,\n                };\n                if (this.isBlazor) {\n                    var treemap = startEvent.treemap, blazorEventArgs = __rest(startEvent, [\"treemap\"]);\n                    startEvent = blazorEventArgs;\n                }\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            var layerElementId = document.getElementById(layoutID);\n                            layerElementId.parentNode.removeChild(layerElementId);\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            var drillElementId = document.getElementById(templateID);\n                            drillElementId.parentNode.removeChild(drillElementId);\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems(newDrillItem);\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                endBlazorEvent = { cancel: false, name: drillEnd, renderItems: this.isBlazor ? null : this.layout.renderItems };\n                this.trigger(drillEnd, this.isBlazor ? endBlazorEvent : endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    /**\n     * This method handles mouse leave event in treemap.\n     * @param e - Specifies the pointer event of mouse.\n     */\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * This method is used to select or remove the selection of treemap item based on the provided selection settings.\n     */\n    TreeMap.prototype.selectItem = function (levelOrder, isSelected) {\n        if (isNullOrUndefined(isSelected)) {\n            isSelected = true;\n        }\n        var levelOrderName = '';\n        for (var i = 0; i < levelOrder.length; i++) {\n            if (i !== levelOrder.length - 1) {\n                levelOrderName += levelOrder[i] + '#';\n            }\n            else {\n                levelOrderName += levelOrder[i];\n            }\n        }\n        if (this.treeMapSelectionModule && this.selectionSettings.enable) {\n            this.treeMapSelectionModule.selectTreemapItem(levelOrderName, isSelected);\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                case 'layoutType':\n                case 'levels':\n                case 'drillDownView':\n                case 'renderDirection':\n                case 'leafItemSettings':\n                case 'legendSettings':\n                case 'dataSource':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Gets component name.\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * This method is used to dispose the treemap component.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n/**\n * @private\n */\nvar LevelsData = /** @class */ (function () {\n    function LevelsData() {\n    }\n    return LevelsData;\n}());\nexport { LevelsData };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { LevelsData } from '../treemap';\nimport { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea, legendMaintain } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        if (this.treemap.isBlazor) {\n            var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n            eventArgs = blazorEventArgs;\n        }\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(LevelsData.levelsData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(LevelsData.levelsData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            legend.textStyle.size = treemap.themeStyle.legendFontSize || legend.textStyle.size;\n            legend.textStyle.fontFamily = treemap.themeStyle.fontFamily || legend.textStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n        legendMaintain(this.treemap, this.legendGroup);\n    };\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: this_1.treemap.isBlazor ? null : treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                if (this_1.treemap.isBlazor) {\n                    var treemap_1 = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                    eventArgs = blazorEventArgs;\n                }\n                this_1.treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions, legendText));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || _this.treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            var legendElementId = document.getElementById(this.treemap.element.id + '_Interactive_Legend');\n            legendElementId.parentNode.removeChild(legendElementId);\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Browser, isNullOrUndefined, createElement } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    /**\n     * Mouse down event in highlight\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var eventBlazorArgs;\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? this.treemap.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        eventBlazorArgs = { cancel: false, name: itemHighlight, items: null, elements: highLightElements };\n                        treemap.trigger(itemHighlight, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var eventBlazorArgs;\n        var treemap = this.treemap;\n        treemap.levelSelection = [];\n        var items = [];\n        var targetId = targetEle.id;\n        var labelText = targetEle.innerHTML;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.treemap.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        treemap.levelSelection.push(element.id);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.treemap.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        selection.fill = selection.fill === 'null' ?\n                            treemap.layout.renderItems[parseInt(element.id.split('Item_Index_')[1], 10)]['options']['fill']\n                            : selection.fill;\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements,\n                        text: labelText, contentItemTemplate: labelText };\n                    eventBlazorArgs = { cancel: false, name: itemSelected, text: labelText, contentItemTemplate: labelText };\n                    if (treemap.isBlazor) {\n                        var treemap_1 = eventArgs.treemap, items_1 = eventArgs.items, elements = eventArgs.elements, blazorEventArgs = __rest(eventArgs, [\"treemap\", \"items\", \"elements\"]);\n                        eventBlazorArgs = blazorEventArgs;\n                    }\n                    treemap.trigger(itemSelected, treemap.isBlazor ? eventBlazorArgs : eventArgs, function (observedArgs) {\n                        if (observedArgs.contentItemTemplate !== labelText) {\n                            var itemSelect = targetId.split('_RectPath')[0];\n                            var itemTemplate = void 0;\n                            if (targetId.indexOf('_LabelTemplate') > -1) {\n                                itemTemplate = targetEle;\n                            }\n                            else {\n                                itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n                            }\n                            if (!isNullOrUndefined(itemTemplate)) {\n                                if (treemap.isBlazor) {\n                                    var templateCreated = createElement('div');\n                                    templateCreated.innerHTML = observedArgs.contentItemTemplate;\n                                    var templateElement = templateCreated.children[0].firstElementChild;\n                                    itemTemplate['style']['left'] = Number(itemTemplate['style']['left'].split('px')[0]) - (templateElement['style']['width'].split('px')[0] / 2) + 'px';\n                                    itemTemplate['style']['top'] = Number(itemTemplate['style']['top'].split('px')[0]) - (templateElement['style']['height'].split('px')[0] / 2) + 'px';\n                                }\n                                itemTemplate.innerHTML = observedArgs.contentItemTemplate;\n                            }\n                        }\n                    });\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeSelectionCollection = [];\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                this.treemap.legendId = [];\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.treemap.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    TreeMapSelection.prototype.selectTreemapItem = function (levelOrder, enable) {\n        if (enable) {\n            var item = void 0;\n            for (var s = 0; s < this.treemap.layout.renderItems.length; s++) {\n                if (levelOrder === this.treemap.layout.renderItems[s]['levelOrderName']) {\n                    item = this.treemap.layout.renderItems[s];\n                    break;\n                }\n            }\n            var selection = this.treemap.selectionSettings;\n            var selectionElements = [];\n            var element = void 0;\n            var selectionElement = void 0;\n            var index = void 0;\n            var items = [];\n            this.treemap.levelSelection = [];\n            var layoutID = this.treemap.element.id + '_TreeMap_' + this.treemap.layoutType + '_Layout';\n            var treeMapElement = document.getElementById(layoutID);\n            var orders = findHightLightItems(item, [], selection.mode, this.treemap);\n            for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                element = treeMapElement.childNodes[i];\n                item = this.treemap.layout.renderItems[element.id.split('_')[6]];\n                if (orders.indexOf(item['levelOrderName']) > -1) {\n                    selectionElements.push(element);\n                    this.treemap.levelSelection.push(element.id);\n                    items.push(item);\n                }\n            }\n            if (this.treemap.legendSettings.visible) {\n                for (var m = 0; m < items.length; m++) {\n                    this.shapeSelect = false;\n                    var length_5 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    index = getLegendIndex(length_5, items[m], this.treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.treemap.legendId.push(this.shapeSelectId);\n                        this.shapeSelectionCollection.push({\n                            legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n            }\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            selectionElement = document.getElementById(this.treemap.levelSelection[0]);\n            this.treemap.selectionId = selectionElement.childNodes[0]['id'];\n            var highLightElements = document.getElementsByClassName('treeMapHighLight');\n            for (var k = 0; k < selectionElements.length; k++) {\n                element = selectionElements[k];\n                if (highLightElements.length > 0) {\n                    for (var j = 0; j < highLightElements.length; j++) {\n                        if (highLightElements[j].id === element.id) {\n                            highLightElements[j].classList.remove('treeMapHighLight');\n                        }\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                }\n                else {\n                    selection.fill = selection.fill === 'null' ?\n                        this.treemap.layout.renderItems[parseInt(element.id.split('Item_Index_')[1], 10)]['options']['fill']\n                        : selection.fill;\n                    applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                    element.classList.add('treeMapSelection');\n                }\n            }\n        }\n        else {\n            removeShape(this.shapeSelectionCollection, 'selection');\n            this.shapeElement = undefined;\n            this.treemap.levelSelection = [];\n            this.shapeSelect = true;\n            this.shapeSelectId = '';\n            this.treemap.legendId = [];\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            this.treemap.selectionId = '';\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.treemap.themeStyle.tooltipFontColor\n                    || this.tooltipSettings.textStyle.color;\n                this.tooltipSettings.textStyle.opacity = this.treemap.themeStyle.tooltipTextOpacity\n                    || this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                if (this.treemap.isBlazor) {\n                    var tooltipArgs_1 = {\n                        cancel: false,\n                        location: tootipArgs.options['location'],\n                        text: tootipArgs.options['text'],\n                        textStyle: tootipArgs.options['textStyle'],\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        name: tooltipRendering\n                    };\n                    this.treemap.trigger(tooltipRendering, tooltipArgs_1, function (args) {\n                        _this.addTooltip(null, markerFill, tooltipEle, tooltipArgs_1);\n                    });\n                }\n                else {\n                    this.treemap.trigger(tooltipRendering, tootipArgs, function (args) {\n                        _this.addTooltip(tootipArgs, markerFill, tooltipEle);\n                    });\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.addTooltip = function (tootipArgs, markerFill, tooltipEle, eventArgs) {\n        var cancel;\n        var args;\n        if (!isNullOrUndefined(tootipArgs)) {\n            var c = tootipArgs.cancel, otherArgs = __rest(tootipArgs, [\"cancel\"]);\n            cancel = c;\n            args = otherArgs.options;\n        }\n        else {\n            cancel = eventArgs.cancel;\n            args = eventArgs;\n        }\n        if (!cancel) {\n            this.svgTooltip = new Tooltip({\n                enable: true,\n                header: '',\n                data: args['data'],\n                template: args['template'],\n                content: args['text'],\n                shapes: [],\n                location: args['location'],\n                palette: [markerFill],\n                areaBounds: this.treemap.areaRect,\n                textStyle: args['textStyle'],\n                blazorTemplate: { name: 'TooltipTemplate', parent: this.treemap.tooltipSettings }\n            });\n            this.svgTooltip.opacity = this.treemap.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n            this.svgTooltip.appendTo(tooltipEle);\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            var tooltipElementId = document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0];\n            tooltipElementId.parentNode.removeChild(tooltipElementId);\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","elementLength","templateHtml","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","measureElementId","parentNode","removeChild","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","maintainSelection","className","elementId","levelSelection","index","getAttribute","childElementCount","setAttribute","applyOptions","childNodes","border","selectionSettings","legendMaintain","legendGroup","legendId","removeClassNames","elements","classList","remove","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","formatFunction","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","tooltipFillOpacity","tooltipTextOpacity","legendFontSize","labelFontFamily","beforePrint","itemRendering","drillStart","drillEnd","itemSelected","itemHighlight","tooltipRendering","itemClick","itemMove","click","doubleClick","rightClick","mouseMove","legendItemRendering","legendRendering","resize","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","__rest","s","t","getOwnPropertySymbols","LayoutPanel","processLayoutPanel","totalRect","LevelsData","levelsData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","isLeafItem","_loop_1","this_1","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","isBlazor","blazorEventArgs","trigger","observedArgs","drawPath","renderItemText","renderTemplate","tabIndex","updateBlazorTemplate","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelsData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","templateId","baseTemplateId","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","hierarchyData","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","renderComplete","firstChild","hasChildNodes","resetBlazorTemplate","containerWidth","containerHeight","secondaryElement","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetEle","targetId","labelText","clickArgs","mouseEvent","clickBlazorArgs","preventDefault","contentItemTemplate","isDrilled","itemArea","itemSelect","itemTemplate","currentTemplateElement","firstElementChild","doubleTapTimer1","end","Date","getMilliseconds","doubleClickArgs","doubleClickBlazorArgs","rightClickArgs","rightClickBlazorArgs","mouseDown","notify","moveArgs","moveBlazorArgs","cursor","calculateSelectedTextLevels","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","endBlazorEvent","layoutID","templateID","drillMouseMove","drillLength","which","layerElementId","textContent","widthIncrement","heightIncrement","drilledLegendItems","drillElementId","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","selectItem","levelOrder","isSelected","treeMapSelectionModule","enable","selectTreemapItem","requiredModules","modules","tooltipSettings","member","highlightSettings","onPropertyChanged","newProp","oldProp","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","shapeId","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","rect_1","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","legendElementId","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","processHighlight","eventBlazorArgs","treeMapElement","orders","highlight","highLightElements","selectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","templateCreated","length_4","targetEle_1","selectionElement","m","length_5","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","tooltipArgs_1","addTooltip","svgTooltip","Tooltip","header","content","shapes","areaBounds","blazorTemplate","appendTo","tooltipElementId"],"mappings":"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"}