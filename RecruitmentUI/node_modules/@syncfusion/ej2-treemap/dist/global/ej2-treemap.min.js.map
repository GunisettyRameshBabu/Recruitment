{"version":3,"file":"ej2-treemap.min.js","sources":["../../src/treemap/utils/helper.js","../../src/treemap/model/theme.js","../../src/treemap/model/constants.js","../../src/treemap/model/base.js","../../src/treemap/layout/render-panel.js","../../src/treemap/utils/export.js","../../src/treemap/treemap.js","../../src/treemap/layout/legend.js","../../src/treemap/user-interaction/highlight-selection.js","../../src/treemap/user-interaction/tooltip.js","../../src/global.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject;\n    htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n * @private\n */\n/* tslint:disable:no-string-literal */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var drillLevelText = void 0;\n        var spacing = 5;\n        drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    var measureElementId = document.getElementById(element.id);\n    measureElementId.parentNode.removeChild(measureElementId);\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function maintainSelection(treemap, element, className) {\n    var elementId = treemap.levelSelection;\n    if (elementId) {\n        for (var index = 0; index < elementId.length; index++) {\n            if (element.getAttribute('id') === elementId[index]) {\n                if (element.childElementCount > 0) {\n                    element.children[0].setAttribute('class', className);\n                    applyOptions(element.childNodes[0], {\n                        border: treemap.selectionSettings.border, fill: treemap.selectionSettings.fill,\n                        opacity: treemap.selectionSettings.opacity\n                    });\n                }\n            }\n            else {\n                element.setAttribute('class', '');\n            }\n        }\n    }\n}\nexport function legendMaintain(treemap, legendGroup) {\n    var elementId = treemap.legendId;\n    if (elementId) {\n        for (var i = 0; i < elementId.length; i++) {\n            for (var j = 0; j < legendGroup.childElementCount; j++) {\n                if (legendGroup.childNodes[j]['id'] === elementId[i]) {\n                    legendGroup.childNodes[j].setAttribute('fill', treemap.selectionSettings.fill);\n                    legendGroup.childNodes[j].setAttribute('stroke', treemap.selectionSettings.border.color);\n                    legendGroup.childNodes[j].setAttribute('stroke-width', (treemap.selectionSettings.border.width).toString());\n                    legendGroup.childNodes[j].setAttribute('opacity', treemap.selectionSettings.opacity);\n                }\n            }\n        }\n    }\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = isNullOrUndefined(elements[j].childNodes[0]) ? elements[j] :\n            elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Triggers when the treemap is on load.\n * @private\n */\nexport var load = 'load';\n/**\n * Triggers after treemap rendered.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Trigger before call the print method.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Trigger before each treemap item rendered.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Trigger after click on treemap item.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Trigger after drill start event completed.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Trigger after select the treemap item.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Trigger after hover on the treemap item.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Trigger after mouse hover on the treemap item.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Trigger after click on the treemap item.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Trigger after mouse hover on the treemap item.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Trigger after click on the treemap item.\n * @private\n */\nexport var click = 'click';\n/**\n * Trigger after double click on the treemap item.\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Trigger after right click on the treemap item.\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Trigger after mouse hover on the treemap item.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Trigger before each treemap item.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Trigger before legend items.\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Trigger after resize the treemap.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Define the font family in treemap component.\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\n/**\n * Sets and gets the options for customizing the color and width of the border in treemap component.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the margin for the treemap component.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the style of the text contents in the treemap component.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options for customizing the common title of the treemap component.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * Sets and gets the options for customizing the subtitle of the treemap component.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * Sets and gets the options for customizing the title of the treemap component.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\n/**\n * Sets and gets the options to customize the color-mapping in treemap component.\n */\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Sets and gets the options for customizing the legend of the treemap component.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n * Sets and gets the settings for drill to visualize the treemap rendered in the initial state.\n */\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\n/**\n * Sets and gets the options for customizing the leaf item of the treemap component.\n */\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\n/**\n * Sets and gets the options for customizing the tooltip of the treemap component.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * Sets and gets the options for customizing the selection of the leaf items in treemap component.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('null')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Sets and gets the options for customizing the highlighting of the treemap item,\n * when the mouse hover is performed in it.\n */\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Sets and gets the options for customizing the levels of the treemap component.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem, maintainSelection } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\nimport { LevelsData } from './../treemap';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (LevelsData.levelsData && LevelsData.levelsData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(LevelsData.levelsData[0], [])[0] : LevelsData.levelsData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                var x = this.treemap.drilledItems[count]['data'];\n                var y = new Object();\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(y || LevelsData.levelsData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(data || LevelsData.levelsData[0]);\n            }\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        var parentItem = new Object();\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        var parentItemGroupname = new Object();\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var _this = this;\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? convertToContainer(this_1.treemap.totalRect) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = this_1.treemap.themeStyle.labelFontFamily || textStyle.fontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap, text: renderText,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options']\n            };\n            if (this_1.treemap.isBlazor) {\n                var treemap = eventArgs.treemap, RenderItems = eventArgs.RenderItems, blazorEventArgs = __rest(eventArgs, [\"treemap\", \"RenderItems\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        if (eventArgs.text !== renderText) {\n                            eventArgs.text = textFormatter(eventArgs.text, item['data'], _this.treemap) || levelName;\n                        }\n                        _this.renderItemText(eventArgs.text.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item, isLeafItem);\n                        templateGroup.appendChild(templateEle);\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    itemGroup.setAttribute('tabindex', (_this.treemap.tabIndex + i + 2).toString());\n                    maintainSelection(_this.treemap, itemGroup, 'treeMapSelection');\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n            updateBlazorTemplate(this.treemap.element.id + '_HeaderTemplate', 'HeaderTemplate', levels[levels.length - 1]);\n            updateBlazorTemplate(this.treemap.element.id + '_LabelTemplate', 'LabelTemplate', leaf);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(LevelsData.defaultLevelsData)) {\n            if (LevelsData.defaultLevelsData.length > 0) {\n                LevelsData.levelsData = LevelsData.defaultLevelsData;\n            }\n        }\n        var parentData = findChildren(LevelsData.levelsData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item, isLeafItem) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        var templateId = isLeafItem ? groupId + '_LabelTemplate' : groupId + '_HeaderTemplate';\n        var baseTemplateId = isLeafItem ? '_LabelTemplate' : '_HeaderTemplate';\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], null, null, this.treemap.element.id + baseTemplateId, false);\n        labelEle = convertElement(templateElement, templateId, item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * This method is used to perform the print functionality in treemap.\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData, function () {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Components\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Complex, Collection, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape, textFormatter } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the treemap component.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        /** @private */\n        _this.levelSelection = [];\n        /** @private */\n        _this.legendId = [];\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var _this = this;\n        this.isBlazor = isBlazor();\n        this.trigger(load, { treemap: this.isBlazor ? null : this }, function () {\n            _this.initPrivateVariable();\n            _this.unWireEVents();\n            _this.createSvg();\n            _this.wireEVents();\n            _this.setCulture();\n        });\n    };\n    TreeMap.prototype.render = function () {\n        LevelsData.levelsData = null;\n        LevelsData.defaultLevelsData = null;\n        LevelsData.hierarchyData = null;\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(LevelsData.levelsData)) {\n            LevelsData.defaultLevelsData = LevelsData.levelsData;\n        }\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this.isBlazor ? null : this });\n        this.renderComplete();\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        if (this.leafItemSettings.labelTemplate) {\n            resetBlazorTemplate(this.element.id + '_LabelTemplate', 'LabelTemplate');\n        }\n        for (var i = 0; i < this.levels.length; i++) {\n            if (this.levels[i].headerTemplate) {\n                resetBlazorTemplate(this.element.id + '_HeaderTemplate', 'HeaderTemplate');\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.parentNode.removeChild(secondaryEle);\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        title.textStyle.fontFamily = this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        title.textStyle.size = this.themeStyle.fontSize || title.textStyle.size;\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            LevelsData.levelsData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                LevelsData.levelsData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    LevelsData.hierarchyData = [];\n                    LevelsData.hierarchyData = extend([], this.dataSource, LevelsData.hierarchyData, true);\n                    for (var i = 0; i < LevelsData.hierarchyData.length; i++) {\n                        this.processHierarchicalData(LevelsData.hierarchyData[i], i);\n                    }\n                    LevelsData.levelsData = LevelsData.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (LevelsData.levelsData.length > 1) {\n                        this.reOrderLevelData(LevelsData.levelsData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(LevelsData.levelsData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === LevelsData.hierarchyData.length - 1) {\n            var mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < LevelsData.hierarchyData.length; k++) {\n                childData = findChildren(LevelsData.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    LevelsData.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * This method is used to perform the print functionality in treemap.\n     * @param id - Specifies the element to print the treemap.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     * @param type - Specifies the index of the axis.\n     * @param fileName - Specifies file name for exporting the rendered treemap.\n     * @param orientation - Specifies the orientation of the pdf document.\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            LevelsData.levelsData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        LevelsData.levelsData[LevelsData.levelsData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * This method orders the treemap level data.\n     * @param start - Specifies the start value of the treemap level.\n     */\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = LevelsData.levelsData[start][currentPath];\n        var previousData = LevelsData.levelsData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(LevelsData.levelsData[LevelsData.levelsData.length - 1][currentPath], 'Child');\n        LevelsData.levelsData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    /**\n     * This method finds the weight value of the treemap level.\n     * @param processData - Specifies the treemap data.\n     * @param type - Specifies the type of the data.\n     */\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * This method handles the window resize event on treemap.\n     * @param e - Specifies the pointer event.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this.isBlazor ? null : this\n        };\n        if (this.isBlazor) {\n            var treemap = args.treemap, blazorEventArgs = __rest(args, [\"treemap\"]);\n            args = blazorEventArgs;\n        }\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args, function (observedArgs) {\n                    _this.render();\n                });\n            }, 500);\n        }\n    };\n    /**\n     * This method handles the click event on the treemap.\n     * @param e - Specifies the mouse click event in the treemap.\n     */\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var labelText = targetEle.innerHTML;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        var clickBlazorArgs = { cancel: false, name: click, mouseEvent: e };\n        this.trigger(click, this.isBlazor ? clickBlazorArgs : clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name'],\n                text: labelText, contentItemTemplate: labelText\n            };\n            if (this.isBlazor) {\n                var data = {\n                    groupIndex: eventArgs.item['groupIndex'],\n                    groupName: eventArgs.item['groupName'],\n                    isDrilled: eventArgs.item['isDrilled'],\n                    isLeafItem: eventArgs.item['isLeafItem'],\n                    itemArea: eventArgs.item['itemArea'],\n                    levelOrderName: eventArgs.item['levelOrderName'],\n                    name: eventArgs.item['name'],\n                    options: eventArgs.item['options'],\n                    rect: eventArgs.item['rect']\n                };\n                eventArgs.item = data;\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemClick, eventArgs, function (observedArgs) {\n                if (observedArgs.text !== labelText || observedArgs.contentItemTemplate !== labelText) {\n                    if (isNullOrUndefined(_this.leafItemSettings.labelTemplate)) {\n                        observedArgs.text = textFormatter(observedArgs.text, observedArgs['item']['data'], observedArgs.treemap);\n                        targetEle.innerHTML = observedArgs.text;\n                    }\n                    else {\n                        var itemSelect = targetId.split('_RectPath')[0];\n                        var itemTemplate = void 0;\n                        if (targetId.indexOf('_LabelTemplate') > -1) {\n                            itemTemplate = targetEle;\n                        }\n                        else {\n                            itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n                        }\n                        if (!isNullOrUndefined(itemTemplate)) {\n                            if (_this.isBlazor) {\n                                var templateElement = createElement('div');\n                                templateElement.innerHTML = observedArgs.contentItemTemplate;\n                                var currentTemplateElement = templateElement.children[0].firstElementChild;\n                                itemTemplate['style']['left'] = Number(itemTemplate['style']['left'].split('px')[0])\n                                    - (currentTemplateElement['style']['width'].split('px')[0] / 2) + 'px';\n                                itemTemplate['style']['top'] = Number(itemTemplate['style']['top'].split('px')[0])\n                                    - (currentTemplateElement['style']['height'].split('px')[0] / 2) + 'px';\n                            }\n                            itemTemplate.innerHTML = observedArgs.contentItemTemplate;\n                        }\n                    }\n                }\n            });\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    /**\n     * This method handles the double click event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        var doubleClickBlazorArgs = { cancel: false, name: doubleClick, mouseEvent: e };\n        this.trigger(doubleClick, this.isBlazor ? doubleClickBlazorArgs : doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    /**\n     * This method handles the right click event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        var rightClickBlazorArgs = { cancel: false, name: rightClick, mouseEvent: e };\n        this.trigger(rightClick, this.isBlazor ? rightClickBlazorArgs : rightClickArgs);\n    };\n    /**\n     * This method handles the mouse down event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    /**\n     * This method handles the mouse move event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        var moveBlazorArgs = { cancel: false, name: mouseMove, mouseEvent: e };\n        this.trigger(mouseMove, this.isBlazor ? moveBlazorArgs : moveArgs);\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            if (this.isBlazor) {\n                var data = {\n                    isLeafItem: eventArgs.item['isLeafItem'],\n                    groupIndex: eventArgs.item['groupIndex'],\n                    groupName: eventArgs.item['groupName'],\n                    isDrilled: eventArgs.item['isDrilled'],\n                    itemArea: eventArgs.item['itemArea'],\n                    levelOrderName: eventArgs.item['levelOrderName'],\n                    name: eventArgs.item['name'],\n                    rect: eventArgs.item['rect'],\n                    options: eventArgs.item['options']\n                };\n                eventArgs.item = data;\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    /**\n     * This method calculates the selected treemap levels.\n     * @param labelText - Specifies the label text.\n     * @param item - Specifies the treemap item.\n     */\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    /**\n     * This method calculates the previous level of child items in treemap.\n     * @param labelText - Specifies the label text in treemap\n     * @param drillLevelValues - Specifies the values of drill level.\n     * @param item - Specifies the treemap item.\n     * @param directLevel - Specifies the current level.\n     */\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    /**\n     * This method compares the selected labels with the drill down items.\n     * @param drillLevelValues - Specifies the values of drill level.\n     * @param item - Specifies the treemap item.\n     * @param i - Specifies the treemap item.\n     */\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        var drillLevelChild;\n        var newDrillItem = new Object();\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /**\n     * This method handles mouse end event in treemap.\n     * @param e - Specifies the pointer event of mouse.\n     */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        var endBlazorEvent;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this.isBlazor ? null : this,\n                    element: targetEle, groupIndex: this.enableBreadcrumb &&\n                        this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null, item: this.isBlazor ? null : newDrillItem,\n                };\n                if (this.isBlazor) {\n                    var treemap = startEvent.treemap, blazorEventArgs = __rest(startEvent, [\"treemap\"]);\n                    startEvent = blazorEventArgs;\n                }\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            var layerElementId = document.getElementById(layoutID);\n                            layerElementId.parentNode.removeChild(layerElementId);\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            var drillElementId = document.getElementById(templateID);\n                            drillElementId.parentNode.removeChild(drillElementId);\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems(newDrillItem);\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                endBlazorEvent = { cancel: false, name: drillEnd, renderItems: this.isBlazor ? null : this.layout.renderItems };\n                this.trigger(drillEnd, this.isBlazor ? endBlazorEvent : endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    /**\n     * This method handles mouse leave event in treemap.\n     * @param e - Specifies the pointer event of mouse.\n     */\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * This method is used to select or remove the selection of treemap item based on the provided selection settings.\n     */\n    TreeMap.prototype.selectItem = function (levelOrder, isSelected) {\n        if (isNullOrUndefined(isSelected)) {\n            isSelected = true;\n        }\n        var levelOrderName = '';\n        for (var i = 0; i < levelOrder.length; i++) {\n            if (i !== levelOrder.length - 1) {\n                levelOrderName += levelOrder[i] + '#';\n            }\n            else {\n                levelOrderName += levelOrder[i];\n            }\n        }\n        if (this.treeMapSelectionModule && this.selectionSettings.enable) {\n            this.treeMapSelectionModule.selectTreemapItem(levelOrderName, isSelected);\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                case 'layoutType':\n                case 'levels':\n                case 'drillDownView':\n                case 'renderDirection':\n                case 'leafItemSettings':\n                case 'legendSettings':\n                case 'dataSource':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Gets component name.\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * This method is used to dispose the treemap component.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n/**\n * @private\n */\nvar LevelsData = /** @class */ (function () {\n    function LevelsData() {\n    }\n    return LevelsData;\n}());\nexport { LevelsData };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { LevelsData } from '../treemap';\nimport { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea, legendMaintain } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        if (this.treemap.isBlazor) {\n            var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n            eventArgs = blazorEventArgs;\n        }\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(LevelsData.levelsData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(LevelsData.levelsData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            legend.textStyle.size = treemap.themeStyle.legendFontSize || legend.textStyle.size;\n            legend.textStyle.fontFamily = treemap.themeStyle.fontFamily || legend.textStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n        legendMaintain(this.treemap, this.legendGroup);\n    };\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: this_1.treemap.isBlazor ? null : treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                if (this_1.treemap.isBlazor) {\n                    var treemap_1 = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                    eventArgs = blazorEventArgs;\n                }\n                this_1.treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions, legendText));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || _this.treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            var legendElementId = document.getElementById(this.treemap.element.id + '_Interactive_Legend');\n            legendElementId.parentNode.removeChild(legendElementId);\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Browser, isNullOrUndefined, createElement } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    /**\n     * Mouse down event in highlight\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var eventBlazorArgs;\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? this.treemap.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        eventBlazorArgs = { cancel: false, name: itemHighlight, items: null, elements: highLightElements };\n                        treemap.trigger(itemHighlight, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var eventBlazorArgs;\n        var treemap = this.treemap;\n        treemap.levelSelection = [];\n        var items = [];\n        var targetId = targetEle.id;\n        var labelText = targetEle.innerHTML;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.treemap.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        treemap.levelSelection.push(element.id);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.treemap.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        selection.fill = selection.fill === 'null' ?\n                            treemap.layout.renderItems[parseInt(element.id.split('Item_Index_')[1], 10)]['options']['fill']\n                            : selection.fill;\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements,\n                        text: labelText, contentItemTemplate: labelText };\n                    eventBlazorArgs = { cancel: false, name: itemSelected, text: labelText, contentItemTemplate: labelText };\n                    if (treemap.isBlazor) {\n                        var treemap_1 = eventArgs.treemap, items_1 = eventArgs.items, elements = eventArgs.elements, blazorEventArgs = __rest(eventArgs, [\"treemap\", \"items\", \"elements\"]);\n                        eventBlazorArgs = blazorEventArgs;\n                    }\n                    treemap.trigger(itemSelected, treemap.isBlazor ? eventBlazorArgs : eventArgs, function (observedArgs) {\n                        if (observedArgs.contentItemTemplate !== labelText) {\n                            var itemSelect = targetId.split('_RectPath')[0];\n                            var itemTemplate = void 0;\n                            if (targetId.indexOf('_LabelTemplate') > -1) {\n                                itemTemplate = targetEle;\n                            }\n                            else {\n                                itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n                            }\n                            if (!isNullOrUndefined(itemTemplate)) {\n                                if (treemap.isBlazor) {\n                                    var templateCreated = createElement('div');\n                                    templateCreated.innerHTML = observedArgs.contentItemTemplate;\n                                    var templateElement = templateCreated.children[0].firstElementChild;\n                                    itemTemplate['style']['left'] = Number(itemTemplate['style']['left'].split('px')[0]) - (templateElement['style']['width'].split('px')[0] / 2) + 'px';\n                                    itemTemplate['style']['top'] = Number(itemTemplate['style']['top'].split('px')[0]) - (templateElement['style']['height'].split('px')[0] / 2) + 'px';\n                                }\n                                itemTemplate.innerHTML = observedArgs.contentItemTemplate;\n                            }\n                        }\n                    });\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeSelectionCollection = [];\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                this.treemap.legendId = [];\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.treemap.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    TreeMapSelection.prototype.selectTreemapItem = function (levelOrder, enable) {\n        if (enable) {\n            var item = void 0;\n            for (var s = 0; s < this.treemap.layout.renderItems.length; s++) {\n                if (levelOrder === this.treemap.layout.renderItems[s]['levelOrderName']) {\n                    item = this.treemap.layout.renderItems[s];\n                    break;\n                }\n            }\n            var selection = this.treemap.selectionSettings;\n            var selectionElements = [];\n            var element = void 0;\n            var selectionElement = void 0;\n            var index = void 0;\n            var items = [];\n            this.treemap.levelSelection = [];\n            var layoutID = this.treemap.element.id + '_TreeMap_' + this.treemap.layoutType + '_Layout';\n            var treeMapElement = document.getElementById(layoutID);\n            var orders = findHightLightItems(item, [], selection.mode, this.treemap);\n            for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                element = treeMapElement.childNodes[i];\n                item = this.treemap.layout.renderItems[element.id.split('_')[6]];\n                if (orders.indexOf(item['levelOrderName']) > -1) {\n                    selectionElements.push(element);\n                    this.treemap.levelSelection.push(element.id);\n                    items.push(item);\n                }\n            }\n            if (this.treemap.legendSettings.visible) {\n                for (var m = 0; m < items.length; m++) {\n                    this.shapeSelect = false;\n                    var length_5 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    index = getLegendIndex(length_5, items[m], this.treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.treemap.legendId.push(this.shapeSelectId);\n                        this.shapeSelectionCollection.push({\n                            legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n            }\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            selectionElement = document.getElementById(this.treemap.levelSelection[0]);\n            this.treemap.selectionId = selectionElement.childNodes[0]['id'];\n            var highLightElements = document.getElementsByClassName('treeMapHighLight');\n            for (var k = 0; k < selectionElements.length; k++) {\n                element = selectionElements[k];\n                if (highLightElements.length > 0) {\n                    for (var j = 0; j < highLightElements.length; j++) {\n                        if (highLightElements[j].id === element.id) {\n                            highLightElements[j].classList.remove('treeMapHighLight');\n                        }\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                }\n                else {\n                    selection.fill = selection.fill === 'null' ?\n                        this.treemap.layout.renderItems[parseInt(element.id.split('Item_Index_')[1], 10)]['options']['fill']\n                        : selection.fill;\n                    applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                    element.classList.add('treeMapSelection');\n                }\n            }\n        }\n        else {\n            removeShape(this.shapeSelectionCollection, 'selection');\n            this.shapeElement = undefined;\n            this.treemap.levelSelection = [];\n            this.shapeSelect = true;\n            this.shapeSelectId = '';\n            this.treemap.legendId = [];\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            this.treemap.selectionId = '';\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.treemap.themeStyle.tooltipFontColor\n                    || this.tooltipSettings.textStyle.color;\n                this.tooltipSettings.textStyle.opacity = this.treemap.themeStyle.tooltipTextOpacity\n                    || this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                if (this.treemap.isBlazor) {\n                    var tooltipArgs_1 = {\n                        cancel: false,\n                        location: tootipArgs.options['location'],\n                        text: tootipArgs.options['text'],\n                        textStyle: tootipArgs.options['textStyle'],\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        name: tooltipRendering\n                    };\n                    this.treemap.trigger(tooltipRendering, tooltipArgs_1, function (args) {\n                        _this.addTooltip(null, markerFill, tooltipEle, tooltipArgs_1);\n                    });\n                }\n                else {\n                    this.treemap.trigger(tooltipRendering, tootipArgs, function (args) {\n                        _this.addTooltip(tootipArgs, markerFill, tooltipEle);\n                    });\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.addTooltip = function (tootipArgs, markerFill, tooltipEle, eventArgs) {\n        var cancel;\n        var args;\n        if (!isNullOrUndefined(tootipArgs)) {\n            var c = tootipArgs.cancel, otherArgs = __rest(tootipArgs, [\"cancel\"]);\n            cancel = c;\n            args = otherArgs.options;\n        }\n        else {\n            cancel = eventArgs.cancel;\n            args = eventArgs;\n        }\n        if (!cancel) {\n            this.svgTooltip = new Tooltip({\n                enable: true,\n                header: '',\n                data: args['data'],\n                template: args['template'],\n                content: args['text'],\n                shapes: [],\n                location: args['location'],\n                palette: [markerFill],\n                areaBounds: this.treemap.areaRect,\n                textStyle: args['textStyle'],\n                blazorTemplate: { name: 'TooltipTemplate', parent: this.treemap.tooltipSettings }\n            });\n            this.svgTooltip.opacity = this.treemap.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n            this.svgTooltip.appendTo(tooltipEle);\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            var tooltipElementId = document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0];\n            tooltipElementId.parentNode.removeChild(tooltipElementId);\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n","import * as index from './index';\nindex.TreeMap.Inject(index.TreeMapTooltip, index.TreeMapLegend, index.TreeMapHighlight, index.TreeMapSelection);\nexport * from './index';\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","elementLength","templateHtml","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","measureElementId","parentNode","removeChild","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","maintainSelection","className","elementId","levelSelection","index","getAttribute","childElementCount","setAttribute","applyOptions","childNodes","border","selectionSettings","legendMaintain","legendGroup","legendId","removeClassNames","elements","classList","remove","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","tooltipFillOpacity","tooltipTextOpacity","legendFontSize","labelFontFamily","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","__rest","s","t","getOwnPropertySymbols","LayoutPanel","processLayoutPanel","totalRect","LevelsData","levelsData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","isLeafItem","this_1","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","isBlazor","blazorEventArgs","trigger","observedArgs","drawPath","renderItemText","renderTemplate","tabIndex","updateBlazorTemplate","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelsData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","templateId","baseTemplateId","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","hierarchyData","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","renderComplete","firstChild","hasChildNodes","resetBlazorTemplate","containerWidth","containerHeight","secondaryElement","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetEle","targetId","labelText","clickArgs","mouseEvent","clickBlazorArgs","preventDefault","contentItemTemplate","isDrilled","itemArea","itemSelect","itemTemplate","currentTemplateElement","firstElementChild","doubleTapTimer1","end","Date","getMilliseconds","doubleClick","doubleClickArgs","doubleClickBlazorArgs","rightClickArgs","rightClickBlazorArgs","mouseDown","notify","moveArgs","moveBlazorArgs","cursor","calculateSelectedTextLevels","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","endBlazorEvent","layoutID","templateID","drillMouseMove","drillLength","rightClick","which","layerElementId","textContent","widthIncrement","heightIncrement","drilledLegendItems","drillElementId","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","selectItem","levelOrder","isSelected","treeMapSelectionModule","enable","selectTreemapItem","requiredModules","modules","tooltipSettings","member","highlightSettings","onPropertyChanged","newProp","oldProp","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","textOptions","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","shapeId","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","rect_1","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","legendElementId","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","mouseMove","processHighlight","eventBlazorArgs","treeMapElement","orders","highlight","highLightElements","selectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","templateCreated","length_4","targetEle_1","selectionElement","m","length_5","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","tooltipArgs_1","addTooltip","svgTooltip","Tooltip","header","content","shapes","areaBounds","blazorTemplate","appendTo","tooltipElementId","index.TreeMap","Inject","index.TreeMapTooltip","index.TreeMapLegend","index.TreeMapHighlight","index.TreeMapSelection"],"mappings":"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"}