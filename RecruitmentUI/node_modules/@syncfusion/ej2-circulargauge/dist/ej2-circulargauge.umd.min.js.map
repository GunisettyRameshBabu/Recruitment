{"version":3,"file":"ej2-circulargauge.umd.min.js","sources":["../src/circular-gauge/utils/helper.js","../src/circular-gauge/model/theme.js","../src/circular-gauge/model/base.js","../src/circular-gauge/axes/axis.js","../src/circular-gauge/model/constants.js","../src/circular-gauge/annotations/annotations.js","../src/circular-gauge/user-interaction/tooltip.js","../src/circular-gauge/axes/axis-renderer.js","../src/circular-gauge/axes/pointer-renderer.js","../src/circular-gauge/axes/axis-panel.js","../src/circular-gauge/legend/legend.js","../src/circular-gauge/utils/export.js","../src/circular-gauge/circular-gauge.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { compile as templateComplier, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns Size\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n * * @returns number\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n * @returns string\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n * @returns ClientRect\n * @private\n */\nexport function measureElementRect(element) {\n    var bounds;\n    document.body.appendChild(element);\n    bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n * @returns number\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n * @returns Element\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    var renderOptions = {};\n    var htmlObject;\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n * @returns Element\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n * @returns number\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n * @param currentTime\n * @param startValue\n * @param endValue\n * @param duration\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n * @returns number\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n * @returns number\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n * @returns boolean\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n * @returns GaugeLocation\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return getRoundedPath(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the rounded range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPath(start, end, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n * @returns Element\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template, gauge) {\n    var templateFn = null;\n    var e;\n    try {\n        if (gauge.isBlazor) {\n            var numb = template.match(/\\d+/g).toString();\n            template = numb ? template.replace(numb, '') : template;\n            template = template.indexOf('/') !== -1 ? template.replace('/', '') : template;\n        }\n        if (document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n * @returns IVisiblePointer\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString;\n    tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to get current point for circular gauge using element id.\n * @returns IVisibleRange\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString;\n    tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString[tempString.length - 1]\n    };\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    var templateFn = getTemplateFunction(template, gauge);\n    var tooltipData = templateFn ? templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n/**\n * Function to get the mouse position\n * @param pageX\n * @param pageY\n * @param element\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * Function to convert the label using format for cirular gauge.\n * @returns string\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n * @returns PathOption\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            var space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n * @returns string\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nexport function showTooltip(text, x, y, areaWidth, id, element) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            innerHTML: text,\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n        });\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerHTML = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n}\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    // switch (theme) {\n    //     case 'Material':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    //      case 'Fabric':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    // }\n    return palette;\n}\n/** @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Sets and gets the options to customize the color and width of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the axis line in circular gauge component.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the axis label in circular gauge component.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge component.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the major and minor tick lines of an axis in circular gauge component.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge component.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the pointer needle in the circular gauge component.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge component.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation element for an axis in circular gauge component.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the pointers of an axis in circular gauge component.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge component.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge component.\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge component.\n *  @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge component.\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge component.\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge component.\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge component.\n *  @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge component.\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge component.\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge component.\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge component.\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge component.\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge component.\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge component.\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge component.\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge component.\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge component.\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge component.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge component.\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge component.\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge component.\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge component.\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge component.\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge component.\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement, updateBlazorTemplate } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     * @private.\n     */\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    //tslint:disable\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = this.gauge.availableSize.width;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount && !this.gauge.isBlazor) {\n            parentElement.appendChild(element);\n        }\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var _this = this;\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        if (this.gauge.isBlazor) {\n            var cancel = argsData.cancel, name_1 = argsData.name, content = argsData.content, textStyle = argsData.textStyle;\n            argsData = { cancel: cancel, name: name_1, content: content, annotation: annotation, textStyle: textStyle };\n        }\n        this.gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, _this.gauge);\n                if (templateFn && (!_this.gauge.isBlazor ? templateFn(axis, null, null, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length : {})) {\n                    templateElement = Array.prototype.slice.call(templateFn(!_this.gauge.isBlazor ? axis : {}, null, null, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    childElement.appendChild(createElement('div', {\n                        innerHTML: argsData.content,\n                        id: 'StringTemplate',\n                        styles: getFontStyle(argsData.textStyle)\n                    }));\n                }\n                _this.updateLocation(childElement, axis, annotation);\n                element.appendChild(childElement);\n                var parentElement = document.getElementById(_this.elementId + '_Secondary_Element');\n                if (_this.gauge.isBlazor && annotationIndex === (_this.gauge.axes[axisIndex].annotations.length - 1) &&\n                    element && parentElement) {\n                    parentElement.appendChild(element);\n                    for (var i = 0; i < _this.gauge.axes[axisIndex].annotations.length; i++) {\n                        updateBlazorTemplate(_this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + i, 'ContentTemplate', _this.gauge.axes[axisIndex].annotations[i]);\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect, getMousePosition, getElementSize, stringToNumber } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement, remove } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:max-func-body-length */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent_1 = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            if (this.gauge.isBlazor) {\n                var name_1 = tooltipArgs.name, cancel = tooltipArgs.cancel, content = tooltipArgs.content, location_1 = tooltipArgs.location, tooltip = tooltipArgs.tooltip, event_1 = tooltipArgs.event, appendInBodyTag = tooltipArgs.appendInBodyTag, type = tooltipArgs.type;\n                tooltipArgs = { name: name_1, cancel: cancel, content: content, location: location_1, tooltip: tooltip, event: event_1, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1) {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    tooltipArgs.tooltip.textStyle.color = tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor;\n                    tooltipArgs.tooltip.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily || tooltipArgs.tooltip.textStyle.fontFamily;\n                    tooltipArgs.tooltip.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        tooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, tooltipArgs.tooltip.textStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent_1 = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            if (this.gauge.isBlazor) {\n                var name_2 = rangeTooltipArgs.name, cancel = rangeTooltipArgs.cancel, content = rangeTooltipArgs.content, location_2 = rangeTooltipArgs.location, tooltip = rangeTooltipArgs.tooltip, event_2 = rangeTooltipArgs.event, appendInBodyTag = rangeTooltipArgs.appendInBodyTag, type = rangeTooltipArgs.type;\n                rangeTooltipArgs = { name: name_2, cancel: cancel, content: content, location: location_2, tooltip: tooltip, event: event_2, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1) {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily;\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipArgs.tooltip.rangeSettings.textStyle, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var annotationAxisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            if (this.gauge.isBlazor) {\n                var name_3 = annotationTooltipArgs.name, cancel = annotationTooltipArgs.cancel, content = annotationTooltipArgs.content, location_3 = annotationTooltipArgs.location, tooltip = annotationTooltipArgs.tooltip, event_3 = annotationTooltipArgs.event, appendInBodyTag = annotationTooltipArgs.appendInBodyTag, type = annotationTooltipArgs.type;\n                annotationTooltipArgs = { name: name_3, cancel: cancel, content: content, location: location_3, tooltip: tooltip, event: event_3, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1) {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.color = annotationTooltipArgs.tooltip.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        annotationTooltipArgs.tooltip.textStyle.fontFamily;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        annotationTooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTooltipArgs.tooltip.annotationSettings.textStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    ;\n    /**\n     * Method to create tooltip svg element.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            template: template,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [tooltipArg.content],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border,\n            blazorTemplate: { name: 'TooltipTemplate', parent: gauge.tooltip }\n        });\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip',\n                styles: 'position: absolute;pointer-events:none;'\n            });\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    ;\n    /**\n     * Method to get parent annotation element.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber;\n        roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n            }\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:max-func-body-length */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, style, lastTextHeight, lastLabelAnchor, lastLabelAngle);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, style, currentTextHeight, anchor, angle);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, style, textHeight, anchor, angle);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            style.font.fontFamily = this.gauge.themeStyle.labelFontFamily || style.font.fontFamily;\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     * @private\n     */\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, style, textHeight, anchorPosition, angle) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        else {\n            actualLocation.x = actualLocation.x;\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element, gauge) {\n        var _this = this;\n        var startValue;\n        var endValue;\n        var rangeElement;\n        var ele;\n        ele = (document.getElementById(gauge.element.id + '_Axis_Ranges_ ' + index));\n        rangeElement = (ele) ? document.getElementById(gauge.element.id + '_Axis_Ranges_ ' + index) :\n            gauge.renderer.createGroup({ id: gauge.element.id + '_Axis_Ranges_' + index });\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var startWidth;\n        var endWidth;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        axis.ranges.map(function (range, rangeIndex) {\n            rangeIndex = rangeIndex;\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n            startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            var isAngleCross360 = (startAngle > endAngle);\n            if (axis.rangeGap != null && axis.rangeGap > 0) {\n                startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle : startAngle + (axis.rangeGap / Math.PI);\n                endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle : endAngle -\n                    (axis.rangeGap / Math.PI);\n            }\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle))) {\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                if (range.roundedCornerRadius) {\n                    range.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth), '', ''), rangeElement, gauge));\n                }\n                else {\n                    range.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' +\n                        rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, axis), '', ''), rangeElement, gauge));\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius;\n        actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc, getLocationFromAngle, appendPath, textElement, PathOption, TextOption, calculateShapes, Size, stringToNumber } from '../utils/helper';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        axis.pointers.map(function (pointer, pointerIndex) {\n            if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n            }\n            else {\n                pointer.currentDistanceFromScale = pointer.offset;\n            }\n            range = axis.visibleRange;\n            pointer.pathElement = [];\n            _this.calculatePointerRadius(axis, pointer);\n            childElement = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n            });\n            _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n            _this.setPointerValue(axis, pointer, pointer.currentValue);\n            pointerElement.appendChild(childElement);\n            if (animate) {\n                _this.doPointerAnimation(pointer, axis);\n            }\n        });\n        element.appendChild(pointerElement);\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     * @return {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        var color = pointer.color || this.gauge.themeStyle.needleColor;\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, color, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        var capcolor = pointer.cap.color || this.gauge.themeStyle.capColor;\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, capcolor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle && !checkMinValue ? [startAngle, startAngle = endAngle - 1][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        var roundStartAngle;\n        var roundEndAngle;\n        var oldStartValue;\n        var oldEndValue;\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var angle;\n        angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            textElement(textOption, pointer.textStyle, pointer.textStyle.color, parentElement, 'pointer-events : auto; ');\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                    _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText, isCompleteAngle, getLocationFromAngle } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    /* tslint:disable:max-func-body-length */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerX) && isNullOrUndefined(this_1.gauge.centerY)) {\n                var startAngle = void 0;\n                var endAngle = void 0;\n                startAngle = axis.startAngle;\n                startAngle = !isCompleteAngle(startAngle, axis.endAngle) ? startAngle : [0, endAngle = 360][0];\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : endPoint;\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endYDiff = Math.abs(startPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            if (this_1.gauge.isBlazor) {\n                var cancel = args.cancel, name_1 = args.name, currentRadius_1 = args.currentRadius, midPoint = args.midPoint;\n                args = { cancel: cancel, name: name_1, currentRadius: currentRadius_1, midPoint: midPoint };\n            }\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                if (!_this.gauge.isBlazor) {\n                    _this.calculateVisibleLabels(axis);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var _this = this;\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        var _loop_2 = function (i) {\n            roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                    format(roundValue),\n                value: roundValue\n            };\n            if (this_2.gauge.isBlazor) {\n                var axis_1 = argsData.axis, blazorArgsData = __rest(argsData, [\"axis\"]);\n                argsData = blazorArgsData;\n            }\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                    if (i === max && _this.gauge.isBlazor && document.getElementById(_this.gauge.element.id + '_AxesCollection')) {\n                        var currentLast = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value\n                            : null;\n                        if (currentLast === axis.visibleRange.max || axis.showLastLabel !== true) {\n                            _this.getMaxLabelWidth(_this.gauge, axis);\n                            axis.nearSize = axis.nearSize + axis.maxLabelSize.height;\n                            axis.farSize = axis.farSize + axis.maxLabelSize.height;\n                            _this.axisRenderer.drawAxisLabels(axis, _this.gauge.axes.length - 1, (document.getElementById(_this.gauge.element.id + '_Axis_Group_' + (_this.gauge.axes.length - 1))), _this.gauge);\n                        }\n                    }\n                }\n            };\n            axisLabelRenderSuccess.bind(this_2);\n            this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        };\n        var this_2 = this;\n        for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n            _loop_2(i);\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            if (this.gauge.isBlazor) {\n                var axis_2 = argsData.axis, blazorArgsData = __rest(argsData, [\"axis\"]);\n                argsData = blazorArgsData;\n            }\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                    if (_this.gauge.isBlazor && document.getElementById(_this.gauge.element.id + '_AxesCollection')) {\n                        _this.getMaxLabelWidth(_this.gauge, axis);\n                        axis.farSize = axis.farSize + axis.maxLabelSize.height;\n                        axis.nearSize = axis.nearSize + axis.maxLabelSize.height;\n                        _this.axisRenderer.drawAxisLabels(axis, _this.gauge.axes.length - 1, (document.getElementById(_this.gauge.element.id + '_Axis_Group_' + (_this.gauge.axes.length - 1))), _this.gauge);\n                    }\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element, gauge);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     * @return {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { appendPath, textElement, PathOption, TextOption, calculateShapes, textTrim, removeElement } from '../utils/helper';\nimport { Rect, Size, GaugeLocation, stringToNumber, measureText, RectOption, getElement, showTooltip } from '../utils/helper';\nimport { Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Font, Border, Margin } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**  @private */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds, redraw) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID, redraw);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            var start = void 0; // starting shape center x,y position && to resolve lint error used new line for declaration\n            start = new GaugeLocation(legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.setAttribute('style', 'cursor: ' + ((!legend.toggleVisibility) ? 'auto' : 'pointer'));\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup, redraw);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = '#545454';\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.setAttribute('style', 'cursor: pointer');\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        var pageTextElement = textElement(textOption, legend.textStyle, legend.textStyle.color || this.gauge.themeStyle.labelColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n            padding + size.width)) + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageLength = page * this.maxColumns;\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        textOptions.text = legendOption.text;\n        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var element = textElement(textOptions, legend.textStyle, fontcolor, group, '');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill : this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, '0', '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width, this.legendBounds.x);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    /**\n     * To show or hide the legend on clicking the legend.\n     * @return {void}\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled = !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                rangeElement.style.visibility = 'visible';\n                shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex].fill);\n                textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                rangeElement.style.visibility = 'hidden';\n                shapeElement.setAttribute('fill', hiddenColor);\n                textElement_1.setAttribute('fill', hiddenColor);\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[0], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width, legendX) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id, redraw) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath, redraw);\n        legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement, redraw, isAnimate, x, y, start, direction, forceAnimate, isRect, previousRect, animateDuration) {\n        if (isAnimate === void 0) { isAnimate = false; }\n        if (x === void 0) { x = 'x'; }\n        if (y === void 0) { y = 'y'; }\n        if (forceAnimate === void 0) { forceAnimate = false; }\n        if (isRect === void 0) { isRect = false; }\n        if (previousRect === void 0) { previousRect = null; }\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        var duration = animateDuration ? animateDuration : 300;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /** @private */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n    };\n    /**\n     * To find maximum column size for legend\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.move = function (event) {\n        var x = this.gauge.mouseX;\n        var y = this.gauge.mouseY;\n        var targetId = event.target.id;\n        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {\n            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n            var text = '';\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legends = _a[_i];\n                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                    text = legends.originalText;\n                }\n            }\n            showTooltip(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', getElement(this.gauge.element.id + '_Secondary_Element'));\n        }\n        else {\n            removeElement(this.gauge.element.id + '_EJ2_Legend_Tooltip');\n        }\n    };\n    /**\n     * Get module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (circulargauge) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the print and export for gauge\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the gauge\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, _this.control.availableSize.width, _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component, isBlazor } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation } from './utils/helper';\nimport { getValueFromAngle, removeElement, getRange } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove, } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { LegendSettings, Legend } from './legend/legend';\nimport { ExportUtils } from '../circular-gauge/utils/export';\n/**\n * Represents the circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isDrag = false;\n        return _this;\n    }\n    /**\n     *  To create svg object, renderer and binding events for the container.\n     */\n    //tslint:disable\n    CircularGauge.prototype.preRender = function () {\n        this.isBlazor = isBlazor();\n        this.unWireEvents();\n        this.trigger(load, this.isBlazor ? null : { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var dragBlazorArgs;\n            var tooltip = _this.tooltipModule;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd,\n                    };\n                    dragBlazorArgs = {\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        pointerIndex: dragPointInd,\n                        axisIndex: dragAxisInd,\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = dragBlazorArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, _this.isBlazor ? dragBlazorArgs : dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.slice(-1), 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd,\n                    };\n                    dragBlazorArgs = {\n                        name: dragMove,\n                        type: rangeMove,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd,\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, _this.isBlazor ? dragBlazorArgs : dragArgs);\n                }\n            }\n        });\n        if (!this.isTouch) {\n            if (this.legendModule && this.legendSettings.visible) {\n                this.legendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var gauge = this;\n            var value = void 0;\n            value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                {\n                    var previousValue1 = this.activeRange.currentValue;\n                    this.activeRange.currentValue = value;\n                    var avg = void 0;\n                    var add = (this.activeRange.end - this.activeRange.start);\n                    var div = add / 2;\n                    avg = parseFloat(this.activeRange.start.toString()) + div;\n                    this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : this.activeRange.start);\n                    this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : this.activeRange.end) : value;\n                    this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                    this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n                }\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, _this.isBlazor ? {\n                    name: dragStart,\n                    type: pointerStart,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd,\n                } : {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd,\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.slice(-1), 0);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, _this.isBlazor ? {\n                    name: dragStart,\n                    type: rangeStart,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd,\n                } : {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd,\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var blazorArgs = {\n            cancel: args.cancel, target: args.target, name: args.name, x: args.x, y: args.y\n        };\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltipInterval;\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, this.isBlazor ? blazorArgs : args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, this.isBlazor ? {\n                name: dragEnd,\n                type: pointerEnd,\n                currentValue: this.activePointer.currentValue,\n                pointerIndex: pointerInd,\n                axisIndex: axisInd\n            } : {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, this.isBlazor ? {\n                name: dragEnd,\n                type: rangeEnd,\n                rangeIndex: rangeInd,\n                axisIndex: axisInd\n            } : {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     * @return {IMouseEventArgs}\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: !this.isBlazor ? this : null,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        this.animatePointer = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        else if (this.element.classList.contains('e-circulargauge')) {\n            this.resizeTo = window.setTimeout(function () {\n                _this.createSvg();\n                _this.calculateBounds();\n                _this.renderElements();\n                args.currentSize = _this.availableSize;\n                if (_this.isBlazor) {\n                    var previousSize = args.previousSize, name_1 = args.name, currentSize = args.currentSize;\n                    args = { previousSize: previousSize, name: name_1, currentSize: currentSize };\n                }\n                _this.trigger(resized, args);\n            }, 500);\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        for (var i = 0; i < this.axes.length; i++) {\n            for (var j = 0; j < this.axes[i].annotations.length; j++) {\n                resetBlazorTemplate(this.element.id + '_Axis' + i + '_ContentTemplate' + j, '_ContentTemplate');\n            }\n        }\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        var centerX = this.centerX !== null ?\n            stringToNumber(this.centerX, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n        var centerY = this.centerY !== null ?\n            stringToNumber(this.centerY, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        this.midPoint = new GaugeLocation(centerX, centerY);\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, this.isBlazor ? {} : { gauge: this });\n        removeElement(\"gauge-measuretext\");\n    };\n    /**\n     * Method to render legend for accumulation chart\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param conetent - Specifies the content for the annotation in circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            if (!isElementExist) {\n                getElement(this.element.id + '_Secondary_Element').appendChild(element);\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     * @param id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     * @param type - Specifies the type of the export.\n     * @param fileName - Specifies the file name for the exported file.\n     * @param orientation - Specified the orientation for the exported pdf document.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /**\n     * Method to set mouse x, y from events\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param start - Specifies the start value for the current range in circular gauge.\n     * @param end - Specifies the end value for the current range i circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'legendSettings':\n                    refreshWithoutAnimation = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","range","axis","startRadius","isNullOrUndefined","position","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","innerStart","innerEnd","clockWise","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getRoundedPath","outerOldEnd","innerOldEnd","outerOldStart","innerOldStart","getCompleteArc","innerRadius","checkMinValue","getCompletePath","getElement","getTemplateFunction","template","templateFn","isBlazor","numb","match","toString","replace","querySelectorAll","charAt","templateComplier","querySelector","trim","e","remove","getPointer","targetId","tempString","split","axisIndex","pointerIndex","getRange","rangeIndex","getElementSize","elementSize","tooltipData","templateElement","templateLength","height","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getLabelFormat","format","calculateShapes","location","shape","url","path","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","space","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","textTrim","maxWidth","label","i","substring","showTooltip","areaWidth","tooltip","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","axisLabelFont","legendLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","animationComplete","axisLabelRender","tooltipRender","gaugeMouseLeave","dragStart","dragMove","dragEnd","Annotations","elementId","renderAnnotation","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","name_1","trigger","observedArgs","length_1","slice","updateLocation","updateBlazorTemplate","currentRadius","midPoint","description","getModuleName","destroy","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","type","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","abs","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent_1","RegExp","tooltipArgs","pointer","event","appendInBodyTag","tooltipRect","findPosition","themeStyle","tooltipFontColor","tooltipTextOpacity","svgTooltip","svgTooltipCreate","arrowInverted","tooltipFillOpacity","appendTo","parseFloat","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent_1","rangeTooltipArgs","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","annotationTemplate","elementSizeAn","tooltipPosition","removeTooltip","tooltipArg","Tooltip","enable","data","enableAnimation","inverted","areaBounds","tooltipFillColor","blazorTemplate","className","child","roundingPlaces","toFixed","addLeft","addTop","addHeight","addWidth","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","drawAxisLine","lineStyle","lineColor","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","labelColor","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","labelFontFamily","lastlabel","FindAxisLabelCollision","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","minorTickColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTickColor","push","axisLineWidth","drawAxisRange","rangeElement","ele","roundedStartAngle","roundedEndAngle","pathElement","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","isAngleCross360","rangeGap","startAndEndRangeGap","roundedCornerRadius","process","ceil","rangeColors","theme","PointerRenderer","drawPointers","animate","pointerElement","pointers","calculatePointerRadius","setPointerValue","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","needleStartWidth","needleEndWidth","mid","needleColor","needleTail","needleTailColor","capcolor","cap","capColor","roundStartAngle","roundEndAngle","oldStartValue","oldEndValue","minRadius","drawMarkerPointer","shapeBasedOnPosition","markerHeight","imageUrl","pointerColor","drawRangeBarPointer","animation","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","__rest","s","t","getOwnPropertySymbols","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","_loop_1","this_1","moveToCenter","centerX","centerY","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","currentRadius_1","calculateVisibleLabels","_i","_a","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","minimum","maximum","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","pow","log","currentInterval","_loop_2","this_2","blazorArgsData","axisLabelRenderSuccess","getMaxLabelWidth","lastLabel","maxVal","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","Location","LegendSettings","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendSettings","legendID","click","getLegendOptions","legendCollection","j","legendText","LegendOptions","visible","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","redraw","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translatePage","pagingText","page","pageNumber","translate","textContent","group","fontcolor","prevLegend","maxColumnWidth","previousBound","totalRowCount","availablewidth","getAvailWidth","toggledIndex","legendItemsId_1","isNaN","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","visibility","legendCollections","legendCollections_1","pageUp","pageText","tx","legendX","drawRectangle","legendItemsGroup","clippath","createClipPath","isAnimate","forceAnimate","isRect","previousRect","animateDuration","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","columns_1","move","mouseX","mouseY","legends","originalText","offsetWidth","circulargauge","ExportUtils","control","print","elements","printWindow","window","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","div","forEach","cloneNode","Element","export","fileName","orientation","attrs","isDownload","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","CircularGauge","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderComplete","toLowerCase","backgroundColor","titleFontColor","fontSize","getThemeStyle","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","isPointer","mouseLeave","isTouch","gaugeResize","setGaugeStyle","setMouseXY","legendModule","getMouseArgs","dragArgs","dragBlazorArgs","tooltipModule","enableRangeDrag","activePointer","dragPointInd","dragAxisInd","activeAxis","previousValue","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","previousValue1","avg","pointInd","axisInd","rangeInd","blazorArgs","pointerInd","clientX","clientY","previousSize","currentSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","resetBlazorTemplate","childNodes","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","containerHeight","offsetHeight","borderWidth","join","titleHeight","title","titleStyle","renderBorder","renderTitle","tabIndex","isProtectedOnChange","setAnnotationValue","isElementExist","svgRect","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","Event","NotifyPropertyChanges","Component"],"mappings":"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"}