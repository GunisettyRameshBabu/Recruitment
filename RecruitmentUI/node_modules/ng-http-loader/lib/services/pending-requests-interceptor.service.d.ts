import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';
import { ExistingProvider } from '@angular/core';
import { Observable } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class PendingRequestsInterceptor implements HttpInterceptor {
    private _pendingRequests;
    private _pendingRequestsStatus$;
    private _filteredUrlPatterns;
    private _filteredMethods;
    private _filteredHeaders;
    private _forceByPass;
    get pendingRequestsStatus$(): Observable<boolean>;
    get pendingRequests(): number;
    get filteredUrlPatterns(): RegExp[];
    set filteredMethods(httpMethods: string[]);
    set filteredHeaders(value: string[]);
    set forceByPass(value: boolean);
    private shouldBypassUrl;
    private shouldBypassMethod;
    private shouldBypassHeader;
    private shouldBypass;
    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PendingRequestsInterceptor, never>;
}
export declare const PendingRequestsInterceptorProvider: ExistingProvider[];

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVuZGluZy1yZXF1ZXN0cy1pbnRlcmNlcHRvci5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbInBlbmRpbmctcmVxdWVzdHMtaW50ZXJjZXB0b3Iuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBFdmVudCwgSHR0cEhhbmRsZXIsIEh0dHBJbnRlcmNlcHRvciwgSHR0cFJlcXVlc3QgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBFeGlzdGluZ1Byb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQZW5kaW5nUmVxdWVzdHNJbnRlcmNlcHRvciBpbXBsZW1lbnRzIEh0dHBJbnRlcmNlcHRvciB7XG4gICAgcHJpdmF0ZSBfcGVuZGluZ1JlcXVlc3RzO1xuICAgIHByaXZhdGUgX3BlbmRpbmdSZXF1ZXN0c1N0YXR1cyQ7XG4gICAgcHJpdmF0ZSBfZmlsdGVyZWRVcmxQYXR0ZXJucztcbiAgICBwcml2YXRlIF9maWx0ZXJlZE1ldGhvZHM7XG4gICAgcHJpdmF0ZSBfZmlsdGVyZWRIZWFkZXJzO1xuICAgIHByaXZhdGUgX2ZvcmNlQnlQYXNzO1xuICAgIGdldCBwZW5kaW5nUmVxdWVzdHNTdGF0dXMkKCk6IE9ic2VydmFibGU8Ym9vbGVhbj47XG4gICAgZ2V0IHBlbmRpbmdSZXF1ZXN0cygpOiBudW1iZXI7XG4gICAgZ2V0IGZpbHRlcmVkVXJsUGF0dGVybnMoKTogUmVnRXhwW107XG4gICAgc2V0IGZpbHRlcmVkTWV0aG9kcyhodHRwTWV0aG9kczogc3RyaW5nW10pO1xuICAgIHNldCBmaWx0ZXJlZEhlYWRlcnModmFsdWU6IHN0cmluZ1tdKTtcbiAgICBzZXQgZm9yY2VCeVBhc3ModmFsdWU6IGJvb2xlYW4pO1xuICAgIHByaXZhdGUgc2hvdWxkQnlwYXNzVXJsO1xuICAgIHByaXZhdGUgc2hvdWxkQnlwYXNzTWV0aG9kO1xuICAgIHByaXZhdGUgc2hvdWxkQnlwYXNzSGVhZGVyO1xuICAgIHByaXZhdGUgc2hvdWxkQnlwYXNzO1xuICAgIGludGVyY2VwdChyZXE6IEh0dHBSZXF1ZXN0PGFueT4sIG5leHQ6IEh0dHBIYW5kbGVyKTogT2JzZXJ2YWJsZTxIdHRwRXZlbnQ8YW55Pj47XG59XG5leHBvcnQgZGVjbGFyZSBjb25zdCBQZW5kaW5nUmVxdWVzdHNJbnRlcmNlcHRvclByb3ZpZGVyOiBFeGlzdGluZ1Byb3ZpZGVyW107XG4iXX0=