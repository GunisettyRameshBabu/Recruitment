import { OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import { PendingRequestsInterceptor } from '../services/pending-requests-interceptor.service';
import { SpinnerVisibilityService } from '../services/spinner-visibility.service';
import * as ɵngcc0 from '@angular/core';
export declare class NgHttpLoaderComponent implements OnInit {
    private pendingRequestsInterceptor;
    private spinnerVisibility;
    spinkit: {
        skChasingDots: string;
        skCubeGrid: string;
        skDoubleBounce: string;
        skRotatingPlane: string;
        skSpinnerPulse: string;
        skThreeBounce: string;
        skWanderingCubes: string;
        skWave: string;
    };
    isVisible$: Observable<boolean>;
    private visibleUntil;
    backdrop: boolean;
    backgroundColor: string;
    debounceDelay: number;
    entryComponent: any;
    extraDuration: number;
    filteredHeaders: string[];
    filteredMethods: string[];
    filteredUrlPatterns: string[];
    minDuration: number;
    opacity: string;
    spinner: string;
    constructor(pendingRequestsInterceptor: PendingRequestsInterceptor, spinnerVisibility: SpinnerVisibilityService);
    private initIsvisibleObservable;
    ngOnInit(): void;
    private nullifySpinnerIfEntryComponentIsDefined;
    private initFilters;
    private initFilteredUrlPatterns;
    private initFilteredMethods;
    private initFilteredHeaders;
    private updateExpirationDelay;
    private getVisibilityTimer$;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgHttpLoaderComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgHttpLoaderComponent, "ng-http-loader", never, { "backdrop": "backdrop"; "debounceDelay": "debounceDelay"; "entryComponent": "entryComponent"; "extraDuration": "extraDuration"; "filteredHeaders": "filteredHeaders"; "filteredMethods": "filteredMethods"; "filteredUrlPatterns": "filteredUrlPatterns"; "minDuration": "minDuration"; "opacity": "opacity"; "spinner": "spinner"; "backgroundColor": "backgroundColor"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctaHR0cC1sb2FkZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbIm5nLWh0dHAtbG9hZGVyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFBlbmRpbmdSZXF1ZXN0c0ludGVyY2VwdG9yIH0gZnJvbSAnLi4vc2VydmljZXMvcGVuZGluZy1yZXF1ZXN0cy1pbnRlcmNlcHRvci5zZXJ2aWNlJztcbmltcG9ydCB7IFNwaW5uZXJWaXNpYmlsaXR5U2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL3NwaW5uZXItdmlzaWJpbGl0eS5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5nSHR0cExvYWRlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgcHJpdmF0ZSBwZW5kaW5nUmVxdWVzdHNJbnRlcmNlcHRvcjtcbiAgICBwcml2YXRlIHNwaW5uZXJWaXNpYmlsaXR5O1xuICAgIHNwaW5raXQ6IHtcbiAgICAgICAgc2tDaGFzaW5nRG90czogc3RyaW5nO1xuICAgICAgICBza0N1YmVHcmlkOiBzdHJpbmc7XG4gICAgICAgIHNrRG91YmxlQm91bmNlOiBzdHJpbmc7XG4gICAgICAgIHNrUm90YXRpbmdQbGFuZTogc3RyaW5nO1xuICAgICAgICBza1NwaW5uZXJQdWxzZTogc3RyaW5nO1xuICAgICAgICBza1RocmVlQm91bmNlOiBzdHJpbmc7XG4gICAgICAgIHNrV2FuZGVyaW5nQ3ViZXM6IHN0cmluZztcbiAgICAgICAgc2tXYXZlOiBzdHJpbmc7XG4gICAgfTtcbiAgICBpc1Zpc2libGUkOiBPYnNlcnZhYmxlPGJvb2xlYW4+O1xuICAgIHByaXZhdGUgdmlzaWJsZVVudGlsO1xuICAgIGJhY2tkcm9wOiBib29sZWFuO1xuICAgIGJhY2tncm91bmRDb2xvcjogc3RyaW5nO1xuICAgIGRlYm91bmNlRGVsYXk6IG51bWJlcjtcbiAgICBlbnRyeUNvbXBvbmVudDogYW55O1xuICAgIGV4dHJhRHVyYXRpb246IG51bWJlcjtcbiAgICBmaWx0ZXJlZEhlYWRlcnM6IHN0cmluZ1tdO1xuICAgIGZpbHRlcmVkTWV0aG9kczogc3RyaW5nW107XG4gICAgZmlsdGVyZWRVcmxQYXR0ZXJuczogc3RyaW5nW107XG4gICAgbWluRHVyYXRpb246IG51bWJlcjtcbiAgICBvcGFjaXR5OiBzdHJpbmc7XG4gICAgc3Bpbm5lcjogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKHBlbmRpbmdSZXF1ZXN0c0ludGVyY2VwdG9yOiBQZW5kaW5nUmVxdWVzdHNJbnRlcmNlcHRvciwgc3Bpbm5lclZpc2liaWxpdHk6IFNwaW5uZXJWaXNpYmlsaXR5U2VydmljZSk7XG4gICAgcHJpdmF0ZSBpbml0SXN2aXNpYmxlT2JzZXJ2YWJsZTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIHByaXZhdGUgbnVsbGlmeVNwaW5uZXJJZkVudHJ5Q29tcG9uZW50SXNEZWZpbmVkO1xuICAgIHByaXZhdGUgaW5pdEZpbHRlcnM7XG4gICAgcHJpdmF0ZSBpbml0RmlsdGVyZWRVcmxQYXR0ZXJucztcbiAgICBwcml2YXRlIGluaXRGaWx0ZXJlZE1ldGhvZHM7XG4gICAgcHJpdmF0ZSBpbml0RmlsdGVyZWRIZWFkZXJzO1xuICAgIHByaXZhdGUgdXBkYXRlRXhwaXJhdGlvbkRlbGF5O1xuICAgIHByaXZhdGUgZ2V0VmlzaWJpbGl0eVRpbWVyJDtcbn1cbiJdfQ==